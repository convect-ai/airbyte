{"type": "CATALOG", "catalog": {"streams": [{"name": "purchase_orders", "json_schema": {"type": "object", "properties": {"id": {"type": ["number", "null"], "title": "Int", "description": "The `Int` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1."}, "storePrefix": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "poNumber": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "poDate": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "supplierId": {"type": ["number", "null"], "title": "Int", "description": "The `Int` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1."}, "supplierName": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "supplierAddress1": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "supplierAddress2": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "supplierAddress3": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "supplierCity": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "supplierState": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "supplierPostalCode": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "estimatedShipDate": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "scheduledDeliveryDate": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "deliveryMethodCode": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "customerName": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "customerAddress1": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "customerAddress2": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "customerCity": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "customerState": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "customerPostalCode": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "customerCountry": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "salesChannelName": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "orderType": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "shippingInfo": {"type": ["object", "string", "null"], "properties": {"shipSpeed": {"type": ["string", "null"], "anyOf": [{"enum": ["SECOND_DAY_AIR"], "title": "2nd Day Air Delivery", "description": "2nd Day Air Delivery"}, {"enum": ["SECOND_DAY_AIR_FREE"], "title": "2-Day Delivery -- Free!", "description": "2-Day Delivery -- Free!"}, {"enum": ["FIVE_DAY_DIRECT"], "title": "Global 5-Day Direct Delivery", "description": "Global 5-Day Direct Delivery"}, {"enum": ["THREE_DAY"], "title": "3 Day Delivery", "description": "3 Day Delivery"}, {"enum": ["CONTAINER"], "title": "Container", "description": "Container"}, {"enum": ["EMAIL"], "title": "Zustellung per Email", "description": "Zustellung per Email"}, {"enum": ["FEDEX_HOME"], "title": "FedEx Home Delivery", "description": "FedEx Home Delivery"}, {"enum": ["GROUND"], "title": "Small Parcel Courier", "description": "Small Parcel Courier"}, {"enum": ["PAKETVERSAND"], "title": "Small Parcel Courier", "description": "Small Parcel Courier"}, {"enum": ["IMPERIAL_POOL_FREIGHT"], "title": "Imperial Pool Freight", "description": "Imperial Pool Freight"}, {"enum": ["NEXT_DAY"], "title": "Next Day Air", "description": "Next Day Air"}, {"enum": ["NEXT_DAY_OVERSEAS"], "title": "Next Day Air (AK,HI,PR)", "description": "Next Day Air (AK,HI,PR)"}, {"enum": ["NEXT_MORNING"], "title": "UK - SP - Next day before noon", "description": "UK - SP - Next day before noon"}, {"enum": ["NEXT_DAY_BEFORE_NINE"], "title": "UK - SP - Next day before 9am", "description": "UK - SP - Next day before 9am"}, {"enum": ["WILL_CALL"], "title": "Will Call", "description": "Will Call"}, {"enum": ["SATURDAY_DELIVERY"], "title": "UK - SP - Saturday delivery", "description": "UK - SP - Saturday delivery"}, {"enum": ["TRUCK_FREIGHT_CASKETS_ONE_DAY"], "title": "Casket Delivery - 1 Day", "description": "Casket Delivery - 1 Day"}, {"enum": ["TRUCK_FREIGHT_CASKETS_TWO_DAY"], "title": "Casket Delivery - 2 Day", "description": "Casket Delivery - 2 Day"}, {"enum": ["CURBSIDE_WITH_UNLOAD"], "title": "Curbside with unload service", "description": "Curbside with unload service"}, {"enum": ["TRUCK_LOAD"], "title": "Truck Load", "description": "Truck Load"}, {"enum": ["CURBSIDE"], "title": "Curbside without unload service", "description": "Curbside without unload service"}, {"enum": ["WHITE_GLOVE_BRONZE"], "title": "Spedition - frei Bordsteinkante", "description": "Spedition - frei Bordsteinkante"}, {"enum": ["WHITE_GLOVE_GOLD"], "title": "Room of Choice & Packaging Removal", "description": "Room of Choice & Packaging Removal"}, {"enum": ["WHITE_GLOVE_TWO_MAN"], "title": "Premium 2-Man Delivery", "description": "Premium 2-Man Delivery"}, {"enum": ["WHITE_GLOVE_PLATINUM"], "title": "Room of Choice Delivery with Installation", "description": "Room of Choice Delivery with Installation"}, {"enum": ["WHITE_GLOVE_SILVER"], "title": "Room of Choice", "description": "Room of Choice"}, {"enum": ["TRUCK_FREIGHT_THRESHOLD"], "title": "Truck Freight - Threshold", "description": "Truck Freight - Threshold"}, {"enum": ["STANDARD_VERSAND_SPERRGUT"], "title": "Standard-Versand Sperrgut", "description": "Standard-Versand Sperrgut"}, {"enum": ["ALMO"], "title": "ALMO - Room of Choice + Removal of Old Appliance", "description": "ALMO - Room of Choice + Removal of Old Appliance"}, {"enum": ["LARGE_PARCEL_COURIER"], "title": "Large Parcel Courier", "description": "Large Parcel Courier"}, {"enum": ["EUROPEAN_LINE_HAUL"], "title": "European Line Haul", "description": "European Line Haul"}, {"enum": ["ECONOMY"], "title": "Economy", "description": "Economy"}, {"enum": ["WHITE_GLOVE_ROOM_OF_CHOICE"], "title": "White Glove Delivery - Room of Choice", "description": "White Glove Delivery - Room of Choice"}, {"enum": ["TINY_PARCEL"], "title": "Small Parcel", "description": "Small Parcel"}, {"enum": ["GROUND_OVERSEA"], "title": "GROUND (AK,HI,PR)", "description": "GROUND (AK,HI,PR)"}, {"enum": ["LOW_COST_CARRIER"], "title": "Low Cost Carrier", "description": "Low Cost Carrier"}, {"enum": ["WHITE_GLOVE_INNOVEL"], "title": "Innovel Delivery Service", "description": "Innovel Delivery Service"}, {"enum": ["BACKYARD"], "title": "Backyard Drop-Off", "description": "Backyard Drop-Off"}, {"enum": ["CURBSIDE_DELIVERY"], "title": "Curbside Delivery", "description": "Curbside Delivery"}, {"enum": ["INSIDE_DELIVERY_PACKAGING_REMOVAL_REMOVAL_OF_OLD_APPLIANCE"], "title": "Inside Delivery - Packaging Removal & Removal of Old Appliance", "description": "Inside Delivery - Packaging Removal & Removal of Old Appliance"}, {"enum": ["ONE_MAN_PREMIUM"], "title": "One Man Premium", "description": "One Man Premium"}, {"enum": ["INSIDE_DELIVERY_PACKAGING_REMOVAL"], "title": "Inside Delivery - Packaging Removal", "description": "Inside Delivery - Packaging Removal"}, {"enum": ["THRESHOLD_DELIVERY"], "title": "Threshold Delivery", "description": "Threshold Delivery"}, {"enum": ["UK_1_MAN_48HRS"], "title": "Large Parcel Courier", "description": "Large Parcel Courier"}, {"enum": ["ALLIED_ROAD_EXPRESS"], "title": "Allied Road Express", "description": "Allied Road Express"}, {"enum": ["HUNTER_ROAD_EXPRESS"], "title": "Hunter Road Express", "description": "Hunter Road Express"}, {"enum": ["WHITE_GLOVE_CAPITAL_CITIES"], "title": "White Glove - Capital Cities", "description": "White Glove - Capital Cities"}, {"enum": ["SPEDITION_FREI_BORDSTEINKANTE"], "title": "Spedition - frei Bordsteinkante", "description": "Spedition - frei Bordsteinkante"}, {"enum": ["UK_1_MAN_LONG_DELIVERY"], "title": "Large Parcel Courier", "description": "Large Parcel Courier"}, {"enum": ["IN_HOME_MATTRESS_SET_UP_REMOVAL"], "title": "In Home Mattress Set Up & Removal", "description": "In Home Mattress Set Up & Removal"}, {"enum": ["WHITE_GLOVE_DELIVERY_ROOM_OF_CHOICE_W_INSTALLATION"], "title": "Room of Choice Delivery w/ Installation", "description": "Room of Choice Delivery w/ Installation"}, {"enum": ["WHITE_GLOVE_DELIVERY_ROOM_OF_CHOICE_W_INSTALLATION_HAUL_AWAY"], "title": "Room of Choice Delivery w/ Installation & Haul Away", "description": "Room of Choice Delivery w/ Installation & Haul Away"}, {"enum": ["WHITE_GLOVE_DELIVERY_ROOM_OF_CHOICE_W_HAUL_AWAY"], "title": "Room of Choice Delivery w/ Haul Away", "description": "Room of Choice Delivery w/ Haul Away"}, {"enum": ["ROOM_OF_CHOICE_DELIVERY_W_MOVE_TO_ANOTHER_ROOM"], "title": "Room of Choice Delivery w/ Move to Another Room", "description": "Room of Choice Delivery w/ Move to Another Room"}, {"enum": ["ROOM_OF_CHOICE_DELIVERY_W_INSTALL_MOVE_TO_ANOTHER_ROOM"], "title": "Room of Choice Delivery w/ Install & Move to Another Room", "description": "Room of Choice Delivery w/ Install & Move to Another Room"}, {"enum": ["GE_WG_DELIVERY"], "title": "Room of Choice Delivery", "description": "Room of Choice Delivery"}, {"enum": ["SAMSUNG_WG_DELIVERY"], "title": "Samsung Delivery Service", "description": "Samsung Delivery Service"}, {"enum": ["WAYFAIR_LARGE_APPLIANCES_DELIVERY"], "title": "Wayfair Large Appliances Delivery", "description": "Wayfair Large Appliances Delivery"}, {"enum": ["WAYFAIR_OFF_THE_SHELF"], "title": "Off The Shelf Item", "description": "Off The Shelf Item"}], "description": "The different ship speed delivery methods."}, "carrierCode": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "poolPointAgent": {"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "ID", "description": "The `ID` scalar type represents a unique identifier, often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\"4\"`) or integer (such as `4`) input value will be accepted as an ID."}, "name": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}}, "description": "A transportation agent"}, "crossDockAgent": {"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "ID", "description": "The `ID` scalar type represents a unique identifier, often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\"4\"`) or integer (such as `4`) input value will be accepted as an ID."}, "name": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}}, "description": "A transportation agent"}, "deliveryAgent": {"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "ID", "description": "The `ID` scalar type represents a unique identifier, often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\"4\"`) or integer (such as `4`) input value will be accepted as an ID."}, "name": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}}, "description": "A transportation agent"}}, "description": "Shipping information related to a purchase order"}, "packingSlipUrl": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "warehouse": {"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "ID", "description": "The `ID` scalar type represents a unique identifier, often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\"4\"`) or integer (such as `4`) input value will be accepted as an ID."}, "name": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "address": {"type": ["object", "string", "null"], "properties": {"name": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "address1": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "address2": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "address3": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "city": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "state": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "country": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "postalCode": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "phoneNumber": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}}, "description": "An address"}, "supplier": {"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "ID", "description": "The `ID` scalar type represents a unique identifier, often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\"4\"`) or integer (such as `4`) input value will be accepted as an ID."}, "name": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "shortName": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "status": {"type": ["string", "null"], "anyOf": [{"enum": ["ACTIVE"], "title": "Active Status", "description": "Active Status"}, {"enum": ["INACTIVE"], "title": "Inactive Status", "description": "Inactive Status"}, {"enum": ["BEING_ADDED"], "title": "Being Added Status", "description": "Being Added Status"}, {"enum": ["ON_HOLD"], "title": "On Hold Status", "description": "On Hold Status"}], "description": "Represents the status of the supplier"}, "websiteURL": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "currency": {"type": ["string", "null"], "anyOf": [{"enum": ["USD"], "title": "US dollars", "description": "US dollars"}, {"enum": ["GBP"], "title": "British pounds", "description": "British pounds"}, {"enum": ["EUR"], "title": "Euros", "description": "Euros"}, {"enum": ["CAD"], "title": "Canadian dollars", "description": "Canadian dollars"}, {"enum": ["AUD"], "title": "Australian dollars", "description": "Australian dollars"}], "description": "Represents the currency id of the supplier"}, "scopes": {"type": "array", "items": {"anyOf": [{"type": ["object", "string", "null"], "description": "An API scope defining specific permissions for API access"}, {"type": "null"}]}}, "warehouses": {"type": "array", "items": {"type": ["object", "string", "null"], "description": "Information for a supplier warehouse"}}}, "description": "A supplier entity."}}, "description": "Information for a supplier warehouse"}, "products": {"type": "array", "items": {"anyOf": [{"type": ["object", "string", "null"], "properties": {"partNumber": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "quantity": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "price": {"type": ["number", "null"], "title": "Float", "description": "The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point)."}, "pieceCount": {"type": ["number", "null"], "title": "Int", "description": "The `Int` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1."}, "totalCost": {"type": ["number", "null"], "title": "Float", "description": "The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point)."}, "name": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "weight": {"type": ["number", "null"], "title": "Float", "description": "The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point)."}, "totalWeight": {"type": ["number", "null"], "title": "Float", "description": "The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point)."}, "estShipDate": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "fillDate": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "sku": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "isCancelled": {"type": ["boolean", "null"], "title": "Boolean", "description": "The `Boolean` scalar type represents `true` or `false`."}, "isTscaCompliant": {"type": ["boolean", "null"], "title": "Boolean", "description": "The `Boolean` scalar type represents `true` or `false`."}, "twoDayGuaranteeDeliveryDeadline": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "event": {"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "ID", "description": "The `ID` scalar type represents a unique identifier, often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\"4\"`) or integer (such as `4`) input value will be accepted as an ID."}, "type": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "name": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "startDate": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "endDate": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}}, "description": "A sales event hosted on Wayfair's storefront websites"}, "customComment": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}}, "description": "A purchase order product."}, {"type": "null"}]}}, "shipTo": {"type": ["object", "string", "null"], "properties": {"name": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "address1": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "address2": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "address3": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "city": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "state": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "country": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "postalCode": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "phoneNumber": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}}, "description": "An address"}, "billTo": {"type": ["object", "string", "null"], "properties": {"name": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "address1": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "address2": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "address3": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "city": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "state": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "country": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "postalCode": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "phoneNumber": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}}, "description": "An address"}, "billingInfo": {"type": ["object", "string", "null"], "properties": {"vatNumber": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}}, "description": "Billing information"}}, "description": "A purchase order.", "$schema": "http://json-schema.org/draft-06/schema#", "definitions": {"Boolean": {"type": ["boolean", "null"], "title": "Boolean", "description": "The `Boolean` scalar type represents `true` or `false`."}, "String": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "Int": {"type": ["number", "null"], "title": "Int", "description": "The `Int` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1."}, "Int32": {"type": ["object", "string", "null"], "title": "Int32", "description": "The `Int32` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1."}, "IsoDateTime": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "SortOrder": {"type": ["string", "null"], "anyOf": [{"enum": ["ASC"], "title": "Ascending order", "description": "Ascending order"}, {"enum": ["DESC"], "title": "Descending order", "description": "Descending order"}], "description": "The values a result set can be sorted in."}, "PurchaseOrder_v2": {"type": ["object", "string", "null"], "properties": {"id": {"type": ["number", "null"], "title": "Int", "description": "The `Int` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1."}, "storePrefix": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "poNumber": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "poDate": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "orderId": {"type": ["number", "null"], "title": "Int", "description": "The `Int` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1."}, "supplierId": {"type": ["number", "null"], "title": "Int", "description": "The `Int` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1."}, "supplierName": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "supplierAddress1": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "supplierAddress2": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "supplierAddress3": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "supplierCity": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "supplierState": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "supplierPostalCode": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "estimatedShipDate": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "scheduledDeliveryDate": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "deliveryMethodCode": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "customerName": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "customerAddress1": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "customerAddress2": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "customerCity": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "customerState": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "customerPostalCode": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "customerCountry": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "customerEmail": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "salesChannelName": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "orderType": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "shippingInfo": {"type": ["object", "string", "null"], "properties": {"shipSpeed": {"type": ["string", "null"], "anyOf": [{"enum": ["SECOND_DAY_AIR"], "title": "2nd Day Air Delivery", "description": "2nd Day Air Delivery"}, {"enum": ["SECOND_DAY_AIR_FREE"], "title": "2-Day Delivery -- Free!", "description": "2-Day Delivery -- Free!"}, {"enum": ["FIVE_DAY_DIRECT"], "title": "Global 5-Day Direct Delivery", "description": "Global 5-Day Direct Delivery"}, {"enum": ["THREE_DAY"], "title": "3 Day Delivery", "description": "3 Day Delivery"}, {"enum": ["CONTAINER"], "title": "Container", "description": "Container"}, {"enum": ["EMAIL"], "title": "Zustellung per Email", "description": "Zustellung per Email"}, {"enum": ["FEDEX_HOME"], "title": "FedEx Home Delivery", "description": "FedEx Home Delivery"}, {"enum": ["GROUND"], "title": "Small Parcel Courier", "description": "Small Parcel Courier"}, {"enum": ["PAKETVERSAND"], "title": "Small Parcel Courier", "description": "Small Parcel Courier"}, {"enum": ["IMPERIAL_POOL_FREIGHT"], "title": "Imperial Pool Freight", "description": "Imperial Pool Freight"}, {"enum": ["NEXT_DAY"], "title": "Next Day Air", "description": "Next Day Air"}, {"enum": ["NEXT_DAY_OVERSEAS"], "title": "Next Day Air (AK,HI,PR)", "description": "Next Day Air (AK,HI,PR)"}, {"enum": ["NEXT_MORNING"], "title": "UK - SP - Next day before noon", "description": "UK - SP - Next day before noon"}, {"enum": ["NEXT_DAY_BEFORE_NINE"], "title": "UK - SP - Next day before 9am", "description": "UK - SP - Next day before 9am"}, {"enum": ["WILL_CALL"], "title": "Will Call", "description": "Will Call"}, {"enum": ["SATURDAY_DELIVERY"], "title": "UK - SP - Saturday delivery", "description": "UK - SP - Saturday delivery"}, {"enum": ["TRUCK_FREIGHT_CASKETS_ONE_DAY"], "title": "Casket Delivery - 1 Day", "description": "Casket Delivery - 1 Day"}, {"enum": ["TRUCK_FREIGHT_CASKETS_TWO_DAY"], "title": "Casket Delivery - 2 Day", "description": "Casket Delivery - 2 Day"}, {"enum": ["CURBSIDE_WITH_UNLOAD"], "title": "Curbside with unload service", "description": "Curbside with unload service"}, {"enum": ["TRUCK_LOAD"], "title": "Truck Load", "description": "Truck Load"}, {"enum": ["CURBSIDE"], "title": "Curbside without unload service", "description": "Curbside without unload service"}, {"enum": ["WHITE_GLOVE_BRONZE"], "title": "Spedition - frei Bordsteinkante", "description": "Spedition - frei Bordsteinkante"}, {"enum": ["WHITE_GLOVE_GOLD"], "title": "Room of Choice & Packaging Removal", "description": "Room of Choice & Packaging Removal"}, {"enum": ["WHITE_GLOVE_TWO_MAN"], "title": "Premium 2-Man Delivery", "description": "Premium 2-Man Delivery"}, {"enum": ["WHITE_GLOVE_PLATINUM"], "title": "Room of Choice Delivery with Installation", "description": "Room of Choice Delivery with Installation"}, {"enum": ["WHITE_GLOVE_SILVER"], "title": "Room of Choice", "description": "Room of Choice"}, {"enum": ["TRUCK_FREIGHT_THRESHOLD"], "title": "Truck Freight - Threshold", "description": "Truck Freight - Threshold"}, {"enum": ["STANDARD_VERSAND_SPERRGUT"], "title": "Standard-Versand Sperrgut", "description": "Standard-Versand Sperrgut"}, {"enum": ["ALMO"], "title": "ALMO - Room of Choice + Removal of Old Appliance", "description": "ALMO - Room of Choice + Removal of Old Appliance"}, {"enum": ["LARGE_PARCEL_COURIER"], "title": "Large Parcel Courier", "description": "Large Parcel Courier"}, {"enum": ["EUROPEAN_LINE_HAUL"], "title": "European Line Haul", "description": "European Line Haul"}, {"enum": ["ECONOMY"], "title": "Economy", "description": "Economy"}, {"enum": ["WHITE_GLOVE_ROOM_OF_CHOICE"], "title": "White Glove Delivery - Room of Choice", "description": "White Glove Delivery - Room of Choice"}, {"enum": ["TINY_PARCEL"], "title": "Small Parcel", "description": "Small Parcel"}, {"enum": ["GROUND_OVERSEA"], "title": "GROUND (AK,HI,PR)", "description": "GROUND (AK,HI,PR)"}, {"enum": ["LOW_COST_CARRIER"], "title": "Low Cost Carrier", "description": "Low Cost Carrier"}, {"enum": ["WHITE_GLOVE_INNOVEL"], "title": "Innovel Delivery Service", "description": "Innovel Delivery Service"}, {"enum": ["BACKYARD"], "title": "Backyard Drop-Off", "description": "Backyard Drop-Off"}, {"enum": ["CURBSIDE_DELIVERY"], "title": "Curbside Delivery", "description": "Curbside Delivery"}, {"enum": ["INSIDE_DELIVERY_PACKAGING_REMOVAL_REMOVAL_OF_OLD_APPLIANCE"], "title": "Inside Delivery - Packaging Removal & Removal of Old Appliance", "description": "Inside Delivery - Packaging Removal & Removal of Old Appliance"}, {"enum": ["ONE_MAN_PREMIUM"], "title": "One Man Premium", "description": "One Man Premium"}, {"enum": ["INSIDE_DELIVERY_PACKAGING_REMOVAL"], "title": "Inside Delivery - Packaging Removal", "description": "Inside Delivery - Packaging Removal"}, {"enum": ["THRESHOLD_DELIVERY"], "title": "Threshold Delivery", "description": "Threshold Delivery"}, {"enum": ["UK_1_MAN_48HRS"], "title": "Large Parcel Courier", "description": "Large Parcel Courier"}, {"enum": ["ALLIED_ROAD_EXPRESS"], "title": "Allied Road Express", "description": "Allied Road Express"}, {"enum": ["HUNTER_ROAD_EXPRESS"], "title": "Hunter Road Express", "description": "Hunter Road Express"}, {"enum": ["WHITE_GLOVE_CAPITAL_CITIES"], "title": "White Glove - Capital Cities", "description": "White Glove - Capital Cities"}, {"enum": ["SPEDITION_FREI_BORDSTEINKANTE"], "title": "Spedition - frei Bordsteinkante", "description": "Spedition - frei Bordsteinkante"}, {"enum": ["UK_1_MAN_LONG_DELIVERY"], "title": "Large Parcel Courier", "description": "Large Parcel Courier"}, {"enum": ["IN_HOME_MATTRESS_SET_UP_REMOVAL"], "title": "In Home Mattress Set Up & Removal", "description": "In Home Mattress Set Up & Removal"}, {"enum": ["WHITE_GLOVE_DELIVERY_ROOM_OF_CHOICE_W_INSTALLATION"], "title": "Room of Choice Delivery w/ Installation", "description": "Room of Choice Delivery w/ Installation"}, {"enum": ["WHITE_GLOVE_DELIVERY_ROOM_OF_CHOICE_W_INSTALLATION_HAUL_AWAY"], "title": "Room of Choice Delivery w/ Installation & Haul Away", "description": "Room of Choice Delivery w/ Installation & Haul Away"}, {"enum": ["WHITE_GLOVE_DELIVERY_ROOM_OF_CHOICE_W_HAUL_AWAY"], "title": "Room of Choice Delivery w/ Haul Away", "description": "Room of Choice Delivery w/ Haul Away"}, {"enum": ["ROOM_OF_CHOICE_DELIVERY_W_MOVE_TO_ANOTHER_ROOM"], "title": "Room of Choice Delivery w/ Move to Another Room", "description": "Room of Choice Delivery w/ Move to Another Room"}, {"enum": ["ROOM_OF_CHOICE_DELIVERY_W_INSTALL_MOVE_TO_ANOTHER_ROOM"], "title": "Room of Choice Delivery w/ Install & Move to Another Room", "description": "Room of Choice Delivery w/ Install & Move to Another Room"}, {"enum": ["GE_WG_DELIVERY"], "title": "Room of Choice Delivery", "description": "Room of Choice Delivery"}, {"enum": ["SAMSUNG_WG_DELIVERY"], "title": "Samsung Delivery Service", "description": "Samsung Delivery Service"}, {"enum": ["WAYFAIR_LARGE_APPLIANCES_DELIVERY"], "title": "Wayfair Large Appliances Delivery", "description": "Wayfair Large Appliances Delivery"}, {"enum": ["WAYFAIR_OFF_THE_SHELF"], "title": "Off The Shelf Item", "description": "Off The Shelf Item"}], "description": "The different ship speed delivery methods."}, "carrierCode": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "poolPointAgent": {"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "ID", "description": "The `ID` scalar type represents a unique identifier, often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\"4\"`) or integer (such as `4`) input value will be accepted as an ID."}, "name": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}}, "description": "A transportation agent"}, "crossDockAgent": {"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "ID", "description": "The `ID` scalar type represents a unique identifier, often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\"4\"`) or integer (such as `4`) input value will be accepted as an ID."}, "name": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}}, "description": "A transportation agent"}, "deliveryAgent": {"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "ID", "description": "The `ID` scalar type represents a unique identifier, often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\"4\"`) or integer (such as `4`) input value will be accepted as an ID."}, "name": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}}, "description": "A transportation agent"}}, "description": "Shipping information related to a purchase order"}, "packingSlipUrl": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "warehouse": {"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "ID", "description": "The `ID` scalar type represents a unique identifier, often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\"4\"`) or integer (such as `4`) input value will be accepted as an ID."}, "name": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "address": {"type": ["object", "string", "null"], "properties": {"name": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "address1": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "address2": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "address3": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "city": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "state": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "country": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "postalCode": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "phoneNumber": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}}, "description": "An address"}, "supplier": {"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "ID", "description": "The `ID` scalar type represents a unique identifier, often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\"4\"`) or integer (such as `4`) input value will be accepted as an ID."}, "name": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "shortName": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "status": {"type": ["string", "null"], "anyOf": [{"enum": ["ACTIVE"], "title": "Active Status", "description": "Active Status"}, {"enum": ["INACTIVE"], "title": "Inactive Status", "description": "Inactive Status"}, {"enum": ["BEING_ADDED"], "title": "Being Added Status", "description": "Being Added Status"}, {"enum": ["ON_HOLD"], "title": "On Hold Status", "description": "On Hold Status"}], "description": "Represents the status of the supplier"}, "websiteURL": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "currency": {"type": ["string", "null"], "anyOf": [{"enum": ["USD"], "title": "US dollars", "description": "US dollars"}, {"enum": ["GBP"], "title": "British pounds", "description": "British pounds"}, {"enum": ["EUR"], "title": "Euros", "description": "Euros"}, {"enum": ["CAD"], "title": "Canadian dollars", "description": "Canadian dollars"}, {"enum": ["AUD"], "title": "Australian dollars", "description": "Australian dollars"}], "description": "Represents the currency id of the supplier"}, "scopes": {"type": "array", "items": {"anyOf": [{"type": ["object", "string", "null"], "description": "An API scope defining specific permissions for API access"}, {"type": "null"}]}}, "warehouses": {"type": "array", "items": {"type": ["object", "string", "null"], "description": "Information for a supplier warehouse"}}}, "description": "A supplier entity."}}, "description": "Information for a supplier warehouse"}, "products": {"type": "array", "items": {"anyOf": [{"type": ["object", "string", "null"], "properties": {"partNumber": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "quantity": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "price": {"type": ["number", "null"], "title": "Float", "description": "The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point)."}, "pieceCount": {"type": ["number", "null"], "title": "Int", "description": "The `Int` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1."}, "totalCost": {"type": ["number", "null"], "title": "Float", "description": "The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point)."}, "name": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "weight": {"type": ["number", "null"], "title": "Float", "description": "The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point)."}, "totalWeight": {"type": ["number", "null"], "title": "Float", "description": "The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point)."}, "estShipDate": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "fillDate": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "sku": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "isCancelled": {"type": ["boolean", "null"], "title": "Boolean", "description": "The `Boolean` scalar type represents `true` or `false`."}, "isTscaCompliant": {"type": ["boolean", "null"], "title": "Boolean", "description": "The `Boolean` scalar type represents `true` or `false`."}, "twoDayGuaranteeDeliveryDeadline": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "event": {"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "ID", "description": "The `ID` scalar type represents a unique identifier, often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\"4\"`) or integer (such as `4`) input value will be accepted as an ID."}, "type": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "name": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "startDate": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "endDate": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}}, "description": "A sales event hosted on Wayfair's storefront websites"}, "customComment": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}}, "description": "A purchase order product."}, {"type": "null"}]}}, "shipTo": {"type": ["object", "string", "null"], "properties": {"name": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "address1": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "address2": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "address3": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "city": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "state": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "country": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "postalCode": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "phoneNumber": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}}, "description": "An address"}, "billTo": {"type": ["object", "string", "null"], "properties": {"name": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "address1": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "address2": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "address3": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "city": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "state": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "country": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "postalCode": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "phoneNumber": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}}, "description": "An address"}, "billingInfo": {"type": ["object", "string", "null"], "properties": {"vatNumber": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}}, "description": "Billing information"}}, "description": "Represents information related to purchase orders"}, "PurchaseOrderShipping": {"type": ["object", "string", "null"], "properties": {"shipSpeed": {"type": ["string", "null"], "anyOf": [{"enum": ["SECOND_DAY_AIR"], "title": "2nd Day Air Delivery", "description": "2nd Day Air Delivery"}, {"enum": ["SECOND_DAY_AIR_FREE"], "title": "2-Day Delivery -- Free!", "description": "2-Day Delivery -- Free!"}, {"enum": ["FIVE_DAY_DIRECT"], "title": "Global 5-Day Direct Delivery", "description": "Global 5-Day Direct Delivery"}, {"enum": ["THREE_DAY"], "title": "3 Day Delivery", "description": "3 Day Delivery"}, {"enum": ["CONTAINER"], "title": "Container", "description": "Container"}, {"enum": ["EMAIL"], "title": "Zustellung per Email", "description": "Zustellung per Email"}, {"enum": ["FEDEX_HOME"], "title": "FedEx Home Delivery", "description": "FedEx Home Delivery"}, {"enum": ["GROUND"], "title": "Small Parcel Courier", "description": "Small Parcel Courier"}, {"enum": ["PAKETVERSAND"], "title": "Small Parcel Courier", "description": "Small Parcel Courier"}, {"enum": ["IMPERIAL_POOL_FREIGHT"], "title": "Imperial Pool Freight", "description": "Imperial Pool Freight"}, {"enum": ["NEXT_DAY"], "title": "Next Day Air", "description": "Next Day Air"}, {"enum": ["NEXT_DAY_OVERSEAS"], "title": "Next Day Air (AK,HI,PR)", "description": "Next Day Air (AK,HI,PR)"}, {"enum": ["NEXT_MORNING"], "title": "UK - SP - Next day before noon", "description": "UK - SP - Next day before noon"}, {"enum": ["NEXT_DAY_BEFORE_NINE"], "title": "UK - SP - Next day before 9am", "description": "UK - SP - Next day before 9am"}, {"enum": ["WILL_CALL"], "title": "Will Call", "description": "Will Call"}, {"enum": ["SATURDAY_DELIVERY"], "title": "UK - SP - Saturday delivery", "description": "UK - SP - Saturday delivery"}, {"enum": ["TRUCK_FREIGHT_CASKETS_ONE_DAY"], "title": "Casket Delivery - 1 Day", "description": "Casket Delivery - 1 Day"}, {"enum": ["TRUCK_FREIGHT_CASKETS_TWO_DAY"], "title": "Casket Delivery - 2 Day", "description": "Casket Delivery - 2 Day"}, {"enum": ["CURBSIDE_WITH_UNLOAD"], "title": "Curbside with unload service", "description": "Curbside with unload service"}, {"enum": ["TRUCK_LOAD"], "title": "Truck Load", "description": "Truck Load"}, {"enum": ["CURBSIDE"], "title": "Curbside without unload service", "description": "Curbside without unload service"}, {"enum": ["WHITE_GLOVE_BRONZE"], "title": "Spedition - frei Bordsteinkante", "description": "Spedition - frei Bordsteinkante"}, {"enum": ["WHITE_GLOVE_GOLD"], "title": "Room of Choice & Packaging Removal", "description": "Room of Choice & Packaging Removal"}, {"enum": ["WHITE_GLOVE_TWO_MAN"], "title": "Premium 2-Man Delivery", "description": "Premium 2-Man Delivery"}, {"enum": ["WHITE_GLOVE_PLATINUM"], "title": "Room of Choice Delivery with Installation", "description": "Room of Choice Delivery with Installation"}, {"enum": ["WHITE_GLOVE_SILVER"], "title": "Room of Choice", "description": "Room of Choice"}, {"enum": ["TRUCK_FREIGHT_THRESHOLD"], "title": "Truck Freight - Threshold", "description": "Truck Freight - Threshold"}, {"enum": ["STANDARD_VERSAND_SPERRGUT"], "title": "Standard-Versand Sperrgut", "description": "Standard-Versand Sperrgut"}, {"enum": ["ALMO"], "title": "ALMO - Room of Choice + Removal of Old Appliance", "description": "ALMO - Room of Choice + Removal of Old Appliance"}, {"enum": ["LARGE_PARCEL_COURIER"], "title": "Large Parcel Courier", "description": "Large Parcel Courier"}, {"enum": ["EUROPEAN_LINE_HAUL"], "title": "European Line Haul", "description": "European Line Haul"}, {"enum": ["ECONOMY"], "title": "Economy", "description": "Economy"}, {"enum": ["WHITE_GLOVE_ROOM_OF_CHOICE"], "title": "White Glove Delivery - Room of Choice", "description": "White Glove Delivery - Room of Choice"}, {"enum": ["TINY_PARCEL"], "title": "Small Parcel", "description": "Small Parcel"}, {"enum": ["GROUND_OVERSEA"], "title": "GROUND (AK,HI,PR)", "description": "GROUND (AK,HI,PR)"}, {"enum": ["LOW_COST_CARRIER"], "title": "Low Cost Carrier", "description": "Low Cost Carrier"}, {"enum": ["WHITE_GLOVE_INNOVEL"], "title": "Innovel Delivery Service", "description": "Innovel Delivery Service"}, {"enum": ["BACKYARD"], "title": "Backyard Drop-Off", "description": "Backyard Drop-Off"}, {"enum": ["CURBSIDE_DELIVERY"], "title": "Curbside Delivery", "description": "Curbside Delivery"}, {"enum": ["INSIDE_DELIVERY_PACKAGING_REMOVAL_REMOVAL_OF_OLD_APPLIANCE"], "title": "Inside Delivery - Packaging Removal & Removal of Old Appliance", "description": "Inside Delivery - Packaging Removal & Removal of Old Appliance"}, {"enum": ["ONE_MAN_PREMIUM"], "title": "One Man Premium", "description": "One Man Premium"}, {"enum": ["INSIDE_DELIVERY_PACKAGING_REMOVAL"], "title": "Inside Delivery - Packaging Removal", "description": "Inside Delivery - Packaging Removal"}, {"enum": ["THRESHOLD_DELIVERY"], "title": "Threshold Delivery", "description": "Threshold Delivery"}, {"enum": ["UK_1_MAN_48HRS"], "title": "Large Parcel Courier", "description": "Large Parcel Courier"}, {"enum": ["ALLIED_ROAD_EXPRESS"], "title": "Allied Road Express", "description": "Allied Road Express"}, {"enum": ["HUNTER_ROAD_EXPRESS"], "title": "Hunter Road Express", "description": "Hunter Road Express"}, {"enum": ["WHITE_GLOVE_CAPITAL_CITIES"], "title": "White Glove - Capital Cities", "description": "White Glove - Capital Cities"}, {"enum": ["SPEDITION_FREI_BORDSTEINKANTE"], "title": "Spedition - frei Bordsteinkante", "description": "Spedition - frei Bordsteinkante"}, {"enum": ["UK_1_MAN_LONG_DELIVERY"], "title": "Large Parcel Courier", "description": "Large Parcel Courier"}, {"enum": ["IN_HOME_MATTRESS_SET_UP_REMOVAL"], "title": "In Home Mattress Set Up & Removal", "description": "In Home Mattress Set Up & Removal"}, {"enum": ["WHITE_GLOVE_DELIVERY_ROOM_OF_CHOICE_W_INSTALLATION"], "title": "Room of Choice Delivery w/ Installation", "description": "Room of Choice Delivery w/ Installation"}, {"enum": ["WHITE_GLOVE_DELIVERY_ROOM_OF_CHOICE_W_INSTALLATION_HAUL_AWAY"], "title": "Room of Choice Delivery w/ Installation & Haul Away", "description": "Room of Choice Delivery w/ Installation & Haul Away"}, {"enum": ["WHITE_GLOVE_DELIVERY_ROOM_OF_CHOICE_W_HAUL_AWAY"], "title": "Room of Choice Delivery w/ Haul Away", "description": "Room of Choice Delivery w/ Haul Away"}, {"enum": ["ROOM_OF_CHOICE_DELIVERY_W_MOVE_TO_ANOTHER_ROOM"], "title": "Room of Choice Delivery w/ Move to Another Room", "description": "Room of Choice Delivery w/ Move to Another Room"}, {"enum": ["ROOM_OF_CHOICE_DELIVERY_W_INSTALL_MOVE_TO_ANOTHER_ROOM"], "title": "Room of Choice Delivery w/ Install & Move to Another Room", "description": "Room of Choice Delivery w/ Install & Move to Another Room"}, {"enum": ["GE_WG_DELIVERY"], "title": "Room of Choice Delivery", "description": "Room of Choice Delivery"}, {"enum": ["SAMSUNG_WG_DELIVERY"], "title": "Samsung Delivery Service", "description": "Samsung Delivery Service"}, {"enum": ["WAYFAIR_LARGE_APPLIANCES_DELIVERY"], "title": "Wayfair Large Appliances Delivery", "description": "Wayfair Large Appliances Delivery"}, {"enum": ["WAYFAIR_OFF_THE_SHELF"], "title": "Off The Shelf Item", "description": "Off The Shelf Item"}], "description": "The different ship speed delivery methods."}, "carrierCode": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "poolPointAgent": {"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "ID", "description": "The `ID` scalar type represents a unique identifier, often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\"4\"`) or integer (such as `4`) input value will be accepted as an ID."}, "name": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}}, "description": "A transportation agent"}, "crossDockAgent": {"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "ID", "description": "The `ID` scalar type represents a unique identifier, often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\"4\"`) or integer (such as `4`) input value will be accepted as an ID."}, "name": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}}, "description": "A transportation agent"}, "deliveryAgent": {"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "ID", "description": "The `ID` scalar type represents a unique identifier, often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\"4\"`) or integer (such as `4`) input value will be accepted as an ID."}, "name": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}}, "description": "A transportation agent"}}, "description": "Shipping information related to a purchase order"}, "ShipSpeed": {"type": ["string", "null"], "anyOf": [{"enum": ["SECOND_DAY_AIR"], "title": "2nd Day Air Delivery", "description": "2nd Day Air Delivery"}, {"enum": ["SECOND_DAY_AIR_FREE"], "title": "2-Day Delivery -- Free!", "description": "2-Day Delivery -- Free!"}, {"enum": ["FIVE_DAY_DIRECT"], "title": "Global 5-Day Direct Delivery", "description": "Global 5-Day Direct Delivery"}, {"enum": ["THREE_DAY"], "title": "3 Day Delivery", "description": "3 Day Delivery"}, {"enum": ["CONTAINER"], "title": "Container", "description": "Container"}, {"enum": ["EMAIL"], "title": "Zustellung per Email", "description": "Zustellung per Email"}, {"enum": ["FEDEX_HOME"], "title": "FedEx Home Delivery", "description": "FedEx Home Delivery"}, {"enum": ["GROUND"], "title": "Small Parcel Courier", "description": "Small Parcel Courier"}, {"enum": ["PAKETVERSAND"], "title": "Small Parcel Courier", "description": "Small Parcel Courier"}, {"enum": ["IMPERIAL_POOL_FREIGHT"], "title": "Imperial Pool Freight", "description": "Imperial Pool Freight"}, {"enum": ["NEXT_DAY"], "title": "Next Day Air", "description": "Next Day Air"}, {"enum": ["NEXT_DAY_OVERSEAS"], "title": "Next Day Air (AK,HI,PR)", "description": "Next Day Air (AK,HI,PR)"}, {"enum": ["NEXT_MORNING"], "title": "UK - SP - Next day before noon", "description": "UK - SP - Next day before noon"}, {"enum": ["NEXT_DAY_BEFORE_NINE"], "title": "UK - SP - Next day before 9am", "description": "UK - SP - Next day before 9am"}, {"enum": ["WILL_CALL"], "title": "Will Call", "description": "Will Call"}, {"enum": ["SATURDAY_DELIVERY"], "title": "UK - SP - Saturday delivery", "description": "UK - SP - Saturday delivery"}, {"enum": ["TRUCK_FREIGHT_CASKETS_ONE_DAY"], "title": "Casket Delivery - 1 Day", "description": "Casket Delivery - 1 Day"}, {"enum": ["TRUCK_FREIGHT_CASKETS_TWO_DAY"], "title": "Casket Delivery - 2 Day", "description": "Casket Delivery - 2 Day"}, {"enum": ["CURBSIDE_WITH_UNLOAD"], "title": "Curbside with unload service", "description": "Curbside with unload service"}, {"enum": ["TRUCK_LOAD"], "title": "Truck Load", "description": "Truck Load"}, {"enum": ["CURBSIDE"], "title": "Curbside without unload service", "description": "Curbside without unload service"}, {"enum": ["WHITE_GLOVE_BRONZE"], "title": "Spedition - frei Bordsteinkante", "description": "Spedition - frei Bordsteinkante"}, {"enum": ["WHITE_GLOVE_GOLD"], "title": "Room of Choice & Packaging Removal", "description": "Room of Choice & Packaging Removal"}, {"enum": ["WHITE_GLOVE_TWO_MAN"], "title": "Premium 2-Man Delivery", "description": "Premium 2-Man Delivery"}, {"enum": ["WHITE_GLOVE_PLATINUM"], "title": "Room of Choice Delivery with Installation", "description": "Room of Choice Delivery with Installation"}, {"enum": ["WHITE_GLOVE_SILVER"], "title": "Room of Choice", "description": "Room of Choice"}, {"enum": ["TRUCK_FREIGHT_THRESHOLD"], "title": "Truck Freight - Threshold", "description": "Truck Freight - Threshold"}, {"enum": ["STANDARD_VERSAND_SPERRGUT"], "title": "Standard-Versand Sperrgut", "description": "Standard-Versand Sperrgut"}, {"enum": ["ALMO"], "title": "ALMO - Room of Choice + Removal of Old Appliance", "description": "ALMO - Room of Choice + Removal of Old Appliance"}, {"enum": ["LARGE_PARCEL_COURIER"], "title": "Large Parcel Courier", "description": "Large Parcel Courier"}, {"enum": ["EUROPEAN_LINE_HAUL"], "title": "European Line Haul", "description": "European Line Haul"}, {"enum": ["ECONOMY"], "title": "Economy", "description": "Economy"}, {"enum": ["WHITE_GLOVE_ROOM_OF_CHOICE"], "title": "White Glove Delivery - Room of Choice", "description": "White Glove Delivery - Room of Choice"}, {"enum": ["TINY_PARCEL"], "title": "Small Parcel", "description": "Small Parcel"}, {"enum": ["GROUND_OVERSEA"], "title": "GROUND (AK,HI,PR)", "description": "GROUND (AK,HI,PR)"}, {"enum": ["LOW_COST_CARRIER"], "title": "Low Cost Carrier", "description": "Low Cost Carrier"}, {"enum": ["WHITE_GLOVE_INNOVEL"], "title": "Innovel Delivery Service", "description": "Innovel Delivery Service"}, {"enum": ["BACKYARD"], "title": "Backyard Drop-Off", "description": "Backyard Drop-Off"}, {"enum": ["CURBSIDE_DELIVERY"], "title": "Curbside Delivery", "description": "Curbside Delivery"}, {"enum": ["INSIDE_DELIVERY_PACKAGING_REMOVAL_REMOVAL_OF_OLD_APPLIANCE"], "title": "Inside Delivery - Packaging Removal & Removal of Old Appliance", "description": "Inside Delivery - Packaging Removal & Removal of Old Appliance"}, {"enum": ["ONE_MAN_PREMIUM"], "title": "One Man Premium", "description": "One Man Premium"}, {"enum": ["INSIDE_DELIVERY_PACKAGING_REMOVAL"], "title": "Inside Delivery - Packaging Removal", "description": "Inside Delivery - Packaging Removal"}, {"enum": ["THRESHOLD_DELIVERY"], "title": "Threshold Delivery", "description": "Threshold Delivery"}, {"enum": ["UK_1_MAN_48HRS"], "title": "Large Parcel Courier", "description": "Large Parcel Courier"}, {"enum": ["ALLIED_ROAD_EXPRESS"], "title": "Allied Road Express", "description": "Allied Road Express"}, {"enum": ["HUNTER_ROAD_EXPRESS"], "title": "Hunter Road Express", "description": "Hunter Road Express"}, {"enum": ["WHITE_GLOVE_CAPITAL_CITIES"], "title": "White Glove - Capital Cities", "description": "White Glove - Capital Cities"}, {"enum": ["SPEDITION_FREI_BORDSTEINKANTE"], "title": "Spedition - frei Bordsteinkante", "description": "Spedition - frei Bordsteinkante"}, {"enum": ["UK_1_MAN_LONG_DELIVERY"], "title": "Large Parcel Courier", "description": "Large Parcel Courier"}, {"enum": ["IN_HOME_MATTRESS_SET_UP_REMOVAL"], "title": "In Home Mattress Set Up & Removal", "description": "In Home Mattress Set Up & Removal"}, {"enum": ["WHITE_GLOVE_DELIVERY_ROOM_OF_CHOICE_W_INSTALLATION"], "title": "Room of Choice Delivery w/ Installation", "description": "Room of Choice Delivery w/ Installation"}, {"enum": ["WHITE_GLOVE_DELIVERY_ROOM_OF_CHOICE_W_INSTALLATION_HAUL_AWAY"], "title": "Room of Choice Delivery w/ Installation & Haul Away", "description": "Room of Choice Delivery w/ Installation & Haul Away"}, {"enum": ["WHITE_GLOVE_DELIVERY_ROOM_OF_CHOICE_W_HAUL_AWAY"], "title": "Room of Choice Delivery w/ Haul Away", "description": "Room of Choice Delivery w/ Haul Away"}, {"enum": ["ROOM_OF_CHOICE_DELIVERY_W_MOVE_TO_ANOTHER_ROOM"], "title": "Room of Choice Delivery w/ Move to Another Room", "description": "Room of Choice Delivery w/ Move to Another Room"}, {"enum": ["ROOM_OF_CHOICE_DELIVERY_W_INSTALL_MOVE_TO_ANOTHER_ROOM"], "title": "Room of Choice Delivery w/ Install & Move to Another Room", "description": "Room of Choice Delivery w/ Install & Move to Another Room"}, {"enum": ["GE_WG_DELIVERY"], "title": "Room of Choice Delivery", "description": "Room of Choice Delivery"}, {"enum": ["SAMSUNG_WG_DELIVERY"], "title": "Samsung Delivery Service", "description": "Samsung Delivery Service"}, {"enum": ["WAYFAIR_LARGE_APPLIANCES_DELIVERY"], "title": "Wayfair Large Appliances Delivery", "description": "Wayfair Large Appliances Delivery"}, {"enum": ["WAYFAIR_OFF_THE_SHELF"], "title": "Off The Shelf Item", "description": "Off The Shelf Item"}], "description": "The different ship speed delivery methods."}, "Agent": {"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "ID", "description": "The `ID` scalar type represents a unique identifier, often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\"4\"`) or integer (such as `4`) input value will be accepted as an ID."}, "name": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}}, "description": "A transportation agent"}, "ID": {"type": ["object", "string", "null"], "title": "ID", "description": "The `ID` scalar type represents a unique identifier, often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\"4\"`) or integer (such as `4`) input value will be accepted as an ID."}, "Warehouse": {"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "ID", "description": "The `ID` scalar type represents a unique identifier, often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\"4\"`) or integer (such as `4`) input value will be accepted as an ID."}, "name": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "address": {"type": ["object", "string", "null"], "properties": {"name": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "address1": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "address2": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "address3": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "city": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "state": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "country": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "postalCode": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "phoneNumber": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}}, "description": "An address"}, "supplier": {"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "ID", "description": "The `ID` scalar type represents a unique identifier, often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\"4\"`) or integer (such as `4`) input value will be accepted as an ID."}, "name": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "shortName": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "status": {"type": ["string", "null"], "anyOf": [{"enum": ["ACTIVE"], "title": "Active Status", "description": "Active Status"}, {"enum": ["INACTIVE"], "title": "Inactive Status", "description": "Inactive Status"}, {"enum": ["BEING_ADDED"], "title": "Being Added Status", "description": "Being Added Status"}, {"enum": ["ON_HOLD"], "title": "On Hold Status", "description": "On Hold Status"}], "description": "Represents the status of the supplier"}, "websiteURL": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "currency": {"type": ["string", "null"], "anyOf": [{"enum": ["USD"], "title": "US dollars", "description": "US dollars"}, {"enum": ["GBP"], "title": "British pounds", "description": "British pounds"}, {"enum": ["EUR"], "title": "Euros", "description": "Euros"}, {"enum": ["CAD"], "title": "Canadian dollars", "description": "Canadian dollars"}, {"enum": ["AUD"], "title": "Australian dollars", "description": "Australian dollars"}], "description": "Represents the currency id of the supplier"}, "scopes": {"type": "array", "items": {"anyOf": [{"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "ID", "description": "The `ID` scalar type represents a unique identifier, often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\"4\"`) or integer (such as `4`) input value will be accepted as an ID."}, "name": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "permissionName": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "description": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}}, "description": "An API scope defining specific permissions for API access"}, {"type": "null"}]}}, "warehouses": {"type": "array", "items": {"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "ID", "description": "The `ID` scalar type represents a unique identifier, often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\"4\"`) or integer (such as `4`) input value will be accepted as an ID."}, "name": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "address": {"type": ["object", "string", "null"], "description": "An address"}, "supplier": {"type": ["object", "string", "null"], "description": "A supplier entity."}}, "description": "Information for a supplier warehouse"}}}, "description": "A supplier entity."}}, "description": "Information for a supplier warehouse"}, "Address": {"type": ["object", "string", "null"], "properties": {"name": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "address1": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "address2": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "address3": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "city": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "state": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "country": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "postalCode": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "phoneNumber": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}}, "description": "An address"}, "Supplier": {"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "ID", "description": "The `ID` scalar type represents a unique identifier, often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\"4\"`) or integer (such as `4`) input value will be accepted as an ID."}, "name": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "shortName": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "status": {"type": ["string", "null"], "anyOf": [{"enum": ["ACTIVE"], "title": "Active Status", "description": "Active Status"}, {"enum": ["INACTIVE"], "title": "Inactive Status", "description": "Inactive Status"}, {"enum": ["BEING_ADDED"], "title": "Being Added Status", "description": "Being Added Status"}, {"enum": ["ON_HOLD"], "title": "On Hold Status", "description": "On Hold Status"}], "description": "Represents the status of the supplier"}, "websiteURL": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "currency": {"type": ["string", "null"], "anyOf": [{"enum": ["USD"], "title": "US dollars", "description": "US dollars"}, {"enum": ["GBP"], "title": "British pounds", "description": "British pounds"}, {"enum": ["EUR"], "title": "Euros", "description": "Euros"}, {"enum": ["CAD"], "title": "Canadian dollars", "description": "Canadian dollars"}, {"enum": ["AUD"], "title": "Australian dollars", "description": "Australian dollars"}], "description": "Represents the currency id of the supplier"}, "scopes": {"type": "array", "items": {"anyOf": [{"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "ID", "description": "The `ID` scalar type represents a unique identifier, often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\"4\"`) or integer (such as `4`) input value will be accepted as an ID."}, "name": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "permissionName": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "description": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}}, "description": "An API scope defining specific permissions for API access"}, {"type": "null"}]}}, "warehouses": {"type": "array", "items": {"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "ID", "description": "The `ID` scalar type represents a unique identifier, often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\"4\"`) or integer (such as `4`) input value will be accepted as an ID."}, "name": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "address": {"type": ["object", "string", "null"], "properties": {"name": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "address1": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "address2": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "address3": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "city": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "state": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "country": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "postalCode": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "phoneNumber": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}}, "description": "An address"}, "supplier": {"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "ID", "description": "The `ID` scalar type represents a unique identifier, often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\"4\"`) or integer (such as `4`) input value will be accepted as an ID."}, "name": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "shortName": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "status": {"type": ["string", "null"], "anyOf": [{"enum": ["ACTIVE"], "title": "Active Status", "description": "Active Status"}, {"enum": ["INACTIVE"], "title": "Inactive Status", "description": "Inactive Status"}, {"enum": ["BEING_ADDED"], "title": "Being Added Status", "description": "Being Added Status"}, {"enum": ["ON_HOLD"], "title": "On Hold Status", "description": "On Hold Status"}], "description": "Represents the status of the supplier"}, "websiteURL": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "currency": {"type": ["string", "null"], "anyOf": [{"enum": ["USD"], "title": "US dollars", "description": "US dollars"}, {"enum": ["GBP"], "title": "British pounds", "description": "British pounds"}, {"enum": ["EUR"], "title": "Euros", "description": "Euros"}, {"enum": ["CAD"], "title": "Canadian dollars", "description": "Canadian dollars"}, {"enum": ["AUD"], "title": "Australian dollars", "description": "Australian dollars"}], "description": "Represents the currency id of the supplier"}, "scopes": {"type": "array", "items": {"anyOf": [{"type": ["object", "string", "null"], "description": "An API scope defining specific permissions for API access"}, {"type": "null"}]}}, "warehouses": {"type": "array", "items": {"type": ["object", "string", "null"], "description": "Information for a supplier warehouse"}}}, "description": "A supplier entity."}}, "description": "Information for a supplier warehouse"}}}, "description": "A supplier entity."}, "SupplierStatus": {"type": ["string", "null"], "anyOf": [{"enum": ["ACTIVE"], "title": "Active Status", "description": "Active Status"}, {"enum": ["INACTIVE"], "title": "Inactive Status", "description": "Inactive Status"}, {"enum": ["BEING_ADDED"], "title": "Being Added Status", "description": "Being Added Status"}, {"enum": ["ON_HOLD"], "title": "On Hold Status", "description": "On Hold Status"}], "description": "Represents the status of the supplier"}, "ExtranetCurrency": {"type": ["string", "null"], "anyOf": [{"enum": ["USD"], "title": "US dollars", "description": "US dollars"}, {"enum": ["GBP"], "title": "British pounds", "description": "British pounds"}, {"enum": ["EUR"], "title": "Euros", "description": "Euros"}, {"enum": ["CAD"], "title": "Canadian dollars", "description": "Canadian dollars"}, {"enum": ["AUD"], "title": "Australian dollars", "description": "Australian dollars"}], "description": "Represents the currency id of the supplier"}, "Scope": {"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "ID", "description": "The `ID` scalar type represents a unique identifier, often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\"4\"`) or integer (such as `4`) input value will be accepted as an ID."}, "name": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "permissionName": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "description": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}}, "description": "An API scope defining specific permissions for API access"}, "PurchaseOrderProduct": {"type": ["object", "string", "null"], "properties": {"partNumber": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "quantity": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "price": {"type": ["number", "null"], "title": "Float", "description": "The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point)."}, "pieceCount": {"type": ["number", "null"], "title": "Int", "description": "The `Int` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1."}, "totalCost": {"type": ["number", "null"], "title": "Float", "description": "The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point)."}, "name": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "weight": {"type": ["number", "null"], "title": "Float", "description": "The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point)."}, "totalWeight": {"type": ["number", "null"], "title": "Float", "description": "The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point)."}, "estShipDate": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "fillDate": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "sku": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "isCancelled": {"type": ["boolean", "null"], "title": "Boolean", "description": "The `Boolean` scalar type represents `true` or `false`."}, "isTscaCompliant": {"type": ["boolean", "null"], "title": "Boolean", "description": "The `Boolean` scalar type represents `true` or `false`."}, "twoDayGuaranteeDeliveryDeadline": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "event": {"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "ID", "description": "The `ID` scalar type represents a unique identifier, often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\"4\"`) or integer (such as `4`) input value will be accepted as an ID."}, "type": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "name": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "startDate": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "endDate": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}}, "description": "A sales event hosted on Wayfair's storefront websites"}, "customComment": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}}, "description": "A purchase order product."}, "Float": {"type": ["number", "null"], "title": "Float", "description": "The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point)."}, "SalesEvent": {"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "ID", "description": "The `ID` scalar type represents a unique identifier, often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\"4\"`) or integer (such as `4`) input value will be accepted as an ID."}, "type": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "name": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "startDate": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "endDate": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}}, "description": "A sales event hosted on Wayfair's storefront websites"}, "BillingInfo": {"type": ["object", "string", "null"], "properties": {"vatNumber": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}}, "description": "Billing information"}, "WarehouseShippingAdvice": {"type": ["object", "string", "null"], "properties": {"wsaId": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "supplierId": {"type": ["object", "string", "null"], "title": "Int32", "description": "The `Int32` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1."}, "poNumber": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "fulfillmentCustomerOrderNumber": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "fulfillmentCustomerId": {"type": ["object", "string", "null"], "title": "Int32", "description": "The `Int32` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1."}, "retailerOrderNumber": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "fulfillmentPurchaseOrderNumber": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "creationDate": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "shipDate": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "shipSpeed": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "carrierCode": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "totalShipmentWeight": {"type": ["number", "null"], "title": "Float", "description": "The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point)."}, "totalQuantity": {"type": ["object", "string", "null"], "title": "Int32", "description": "The `Int32` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1."}, "clientNumber": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "warehouseId": {"type": ["object", "string", "null"], "title": "Int32", "description": "The `Int32` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1."}, "actionDate": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "transactionHandle": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "packages": {"type": "array", "items": {"anyOf": [{"type": ["object", "string", "null"], "properties": {"packageWeight": {"type": ["number", "null"], "title": "Float", "description": "The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point)."}, "trackingNumber": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}}, "description": "A Warehouse shipment advice package type"}, {"type": "null"}]}}, "shipFrom": {"type": ["object", "string", "null"], "properties": {"name": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "title": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "company": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "address1": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "address2": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "address3": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "city": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "state": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "country": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "postalCode": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "phoneNumber": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}}, "description": "A CastleGate WSA Address"}, "shipTo": {"type": ["object", "string", "null"], "properties": {"name": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "title": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "company": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "address1": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "address2": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "address3": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "city": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "state": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "country": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "postalCode": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "phoneNumber": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}}, "description": "A CastleGate WSA Address"}, "products": {"type": "array", "items": {"anyOf": [{"type": ["object", "string", "null"], "properties": {"quantityOrdered": {"type": ["object", "string", "null"], "title": "Int32", "description": "The `Int32` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1."}, "partNumber": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "name": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "quantityShipped": {"type": ["object", "string", "null"], "title": "Int32", "description": "The `Int32` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1."}, "upc": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "sku": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "forceQuantityMultiplier": {"type": ["object", "string", "null"], "title": "Int32", "description": "The `Int32` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1."}}, "description": "A Warehouse shipment advice product"}, {"type": "null"}]}}}, "description": "A warehouse shipping advice"}, "WarehouseShippingAdvicePackageType": {"type": ["object", "string", "null"], "properties": {"packageWeight": {"type": ["number", "null"], "title": "Float", "description": "The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point)."}, "trackingNumber": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}}, "description": "A Warehouse shipment advice package type"}, "WarehouseShippingAdviceAddress": {"type": ["object", "string", "null"], "properties": {"name": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "title": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "company": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "address1": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "address2": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "address3": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "city": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "state": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "country": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "postalCode": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "phoneNumber": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}}, "description": "A CastleGate WSA Address"}, "WarehouseShippingAdviceProduct": {"type": ["object", "string", "null"], "properties": {"quantityOrdered": {"type": ["object", "string", "null"], "title": "Int32", "description": "The `Int32` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1."}, "partNumber": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "name": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "quantityShipped": {"type": ["object", "string", "null"], "title": "Int32", "description": "The `Int32` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1."}, "upc": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "sku": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "forceQuantityMultiplier": {"type": ["object", "string", "null"], "title": "Int32", "description": "The `Int32` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1."}}, "description": "A Warehouse shipment advice product"}, "PurchaseOrderFilterInput": {"type": ["object", "string", "null"], "properties": {"field": {"type": ["string", "null"], "anyOf": [{"enum": ["id"], "title": "The purchase order's id.", "description": "The purchase order's id."}, {"enum": ["storePrefix"], "title": "The PO store prefix", "description": "The PO store prefix"}, {"enum": ["poNumber"], "title": "The PO number that identifies the purchase order", "description": "The PO number that identifies the purchase order"}, {"enum": ["poDate"], "title": "The date the purchase order was created.", "description": "The date the purchase order was created."}, {"enum": ["supplierId"], "title": "The id of the purchase order's supplier.", "description": "The id of the purchase order's supplier."}, {"enum": ["supplierName"], "title": "The name of the supplier the purchase order is for", "description": "The name of the supplier the purchase order is for"}, {"enum": ["supplierAddress1"], "title": "The first address of the supplier", "description": "The first address of the supplier"}, {"enum": ["supplierAddress2"], "title": "The second address of the supplier", "description": "The second address of the supplier"}, {"enum": ["supplierAddress3"], "title": "The third address of the supplier", "description": "The third address of the supplier"}, {"enum": ["supplierCity"], "title": "The city the supplier is located in", "description": "The city the supplier is located in"}, {"enum": ["supplierState"], "title": "The state the supplier is located in", "description": "The state the supplier is located in"}, {"enum": ["supplierPostalCode"], "title": "The postal code of the area the supplier is located", "description": "The postal code of the area the supplier is located"}, {"enum": ["estimatedShipDate"], "title": "The day the purchase order items are expected to ship", "description": "The day the purchase order items are expected to ship"}, {"enum": ["scheduledDeliveryDate"], "title": "The day scheduled for the delivery of the purchase order", "description": "The day scheduled for the delivery of the purchase order"}, {"enum": ["deliveryMethodCode"], "title": "The code representing the delivery method", "description": "The code representing the delivery method"}, {"enum": ["customerName"], "title": "The name of the customer to deliver to", "description": "The name of the customer to deliver to"}, {"enum": ["customerAddress1"], "title": "The first address of the customer", "description": "The first address of the customer"}, {"enum": ["customerAddress2"], "title": "The second address of the customer", "description": "The second address of the customer"}, {"enum": ["customerCity"], "title": "The city of the customer's address", "description": "The city of the customer's address"}, {"enum": ["customerState"], "title": "The state of the customer's address", "description": "The state of the customer's address"}, {"enum": ["customerPostalCode"], "title": "The postal code of the customer's address", "description": "The postal code of the customer's address"}, {"enum": ["customerCountry"], "title": "The country of the customer's address", "description": "The country of the customer's address"}, {"enum": ["salesChannelName"], "title": "The sales channel this purchase order was made from", "description": "The sales channel this purchase order was made from"}, {"enum": ["orderType"], "title": "The type of order that was placed", "description": "The type of order that was placed"}, {"enum": ["packingSlipUrl"], "title": "The URL to download the packing slip for this purchase order", "description": "The URL to download the packing slip for this purchase order"}, {"enum": ["open"], "title": "Whether the purchase order is open.", "description": "Whether the purchase order is open."}, {"enum": ["partNumber"], "title": "The part number of the product.", "description": "The part number of the product."}], "description": "Filterable fields for the PurchaseOrder class."}, "conjunction": {"type": ["string", "null"], "anyOf": [{"enum": ["AND"], "title": "Used to perform logical conjunctions.", "description": "Used to perform logical conjunctions."}, {"enum": ["OR"], "title": "Used to perform logical disjunctions.", "description": "Used to perform logical disjunctions."}], "description": "The conjunction to add to the filter.\n\nAccepted values: AND, OR\nIf only one filter exists for the query this will be ignored. The default value is AND if none is provided."}, "equals": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "greaterThan": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "greaterThanOrEqualTo": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "lessThan": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "lessThanOrEqualTo": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "notEqualTo": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "in": {"type": "array", "items": {"anyOf": [{"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, {"type": "null"}]}, "description": "The in comparator.\n\nIf a list of values is provided for this comparator the results where the field value is in the list of provided values will be returned."}, "notIn": {"type": "array", "items": {"anyOf": [{"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, {"type": "null"}]}, "description": "The not in comparator.\n\nIf a list of values is provided for this comparator the results where the field value is not in the list of provided values will be returned."}, "isNull": {"type": ["boolean", "null"], "title": "Boolean", "description": "The `Boolean` scalar type represents `true` or `false`."}, "greater_than": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "greater_than_or_equal_to": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "less_than": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "less_than_or_equal_to": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "not_equal_to": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "not_in": {"type": "array", "items": {"anyOf": [{"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, {"type": "null"}]}, "description": "DEPRECATED. The not in comparator.\n\nIf a list of values is provided for this comparator the results where the field value is not in the list of provided values will be returned."}, "is_null": {"type": ["boolean", "null"], "title": "Boolean", "description": "The `Boolean` scalar type represents `true` or `false`."}}, "description": "An Input type for filtering by fields of the PurchaseOrder type."}, "PurchaseOrderFilterFields": {"type": ["string", "null"], "anyOf": [{"enum": ["id"], "title": "The purchase order's id.", "description": "The purchase order's id."}, {"enum": ["storePrefix"], "title": "The PO store prefix", "description": "The PO store prefix"}, {"enum": ["poNumber"], "title": "The PO number that identifies the purchase order", "description": "The PO number that identifies the purchase order"}, {"enum": ["poDate"], "title": "The date the purchase order was created.", "description": "The date the purchase order was created."}, {"enum": ["supplierId"], "title": "The id of the purchase order's supplier.", "description": "The id of the purchase order's supplier."}, {"enum": ["supplierName"], "title": "The name of the supplier the purchase order is for", "description": "The name of the supplier the purchase order is for"}, {"enum": ["supplierAddress1"], "title": "The first address of the supplier", "description": "The first address of the supplier"}, {"enum": ["supplierAddress2"], "title": "The second address of the supplier", "description": "The second address of the supplier"}, {"enum": ["supplierAddress3"], "title": "The third address of the supplier", "description": "The third address of the supplier"}, {"enum": ["supplierCity"], "title": "The city the supplier is located in", "description": "The city the supplier is located in"}, {"enum": ["supplierState"], "title": "The state the supplier is located in", "description": "The state the supplier is located in"}, {"enum": ["supplierPostalCode"], "title": "The postal code of the area the supplier is located", "description": "The postal code of the area the supplier is located"}, {"enum": ["estimatedShipDate"], "title": "The day the purchase order items are expected to ship", "description": "The day the purchase order items are expected to ship"}, {"enum": ["scheduledDeliveryDate"], "title": "The day scheduled for the delivery of the purchase order", "description": "The day scheduled for the delivery of the purchase order"}, {"enum": ["deliveryMethodCode"], "title": "The code representing the delivery method", "description": "The code representing the delivery method"}, {"enum": ["customerName"], "title": "The name of the customer to deliver to", "description": "The name of the customer to deliver to"}, {"enum": ["customerAddress1"], "title": "The first address of the customer", "description": "The first address of the customer"}, {"enum": ["customerAddress2"], "title": "The second address of the customer", "description": "The second address of the customer"}, {"enum": ["customerCity"], "title": "The city of the customer's address", "description": "The city of the customer's address"}, {"enum": ["customerState"], "title": "The state of the customer's address", "description": "The state of the customer's address"}, {"enum": ["customerPostalCode"], "title": "The postal code of the customer's address", "description": "The postal code of the customer's address"}, {"enum": ["customerCountry"], "title": "The country of the customer's address", "description": "The country of the customer's address"}, {"enum": ["salesChannelName"], "title": "The sales channel this purchase order was made from", "description": "The sales channel this purchase order was made from"}, {"enum": ["orderType"], "title": "The type of order that was placed", "description": "The type of order that was placed"}, {"enum": ["packingSlipUrl"], "title": "The URL to download the packing slip for this purchase order", "description": "The URL to download the packing slip for this purchase order"}, {"enum": ["open"], "title": "Whether the purchase order is open.", "description": "Whether the purchase order is open."}, {"enum": ["partNumber"], "title": "The part number of the product.", "description": "The part number of the product."}], "description": "Filterable fields for the PurchaseOrder class."}, "FilterConjunction": {"type": ["string", "null"], "anyOf": [{"enum": ["AND"], "title": "Used to perform logical conjunctions.", "description": "Used to perform logical conjunctions."}, {"enum": ["OR"], "title": "Used to perform logical disjunctions.", "description": "Used to perform logical disjunctions."}], "description": "The conjunction to add to the filter.\n\nAccepted values: AND, OR\nIf only one filter exists for the query this will be ignored. The default value is AND if none is provided."}, "orderingInput": {"type": ["object", "string", "null"], "properties": {"asc": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "desc": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}}, "description": "Allows for ordering of elements."}, "PurchaseOrder": {"type": ["object", "string", "null"], "properties": {"id": {"type": ["number", "null"], "title": "Int", "description": "The `Int` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1."}, "storePrefix": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "poNumber": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "poDate": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "supplierId": {"type": ["number", "null"], "title": "Int", "description": "The `Int` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1."}, "supplierName": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "supplierAddress1": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "supplierAddress2": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "supplierAddress3": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "supplierCity": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "supplierState": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "supplierPostalCode": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "estimatedShipDate": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "scheduledDeliveryDate": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "deliveryMethodCode": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "customerName": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "customerAddress1": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "customerAddress2": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "customerCity": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "customerState": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "customerPostalCode": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "customerCountry": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "salesChannelName": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "orderType": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "shippingInfo": {"type": ["object", "string", "null"], "properties": {"shipSpeed": {"type": ["string", "null"], "anyOf": [{"enum": ["SECOND_DAY_AIR"], "title": "2nd Day Air Delivery", "description": "2nd Day Air Delivery"}, {"enum": ["SECOND_DAY_AIR_FREE"], "title": "2-Day Delivery -- Free!", "description": "2-Day Delivery -- Free!"}, {"enum": ["FIVE_DAY_DIRECT"], "title": "Global 5-Day Direct Delivery", "description": "Global 5-Day Direct Delivery"}, {"enum": ["THREE_DAY"], "title": "3 Day Delivery", "description": "3 Day Delivery"}, {"enum": ["CONTAINER"], "title": "Container", "description": "Container"}, {"enum": ["EMAIL"], "title": "Zustellung per Email", "description": "Zustellung per Email"}, {"enum": ["FEDEX_HOME"], "title": "FedEx Home Delivery", "description": "FedEx Home Delivery"}, {"enum": ["GROUND"], "title": "Small Parcel Courier", "description": "Small Parcel Courier"}, {"enum": ["PAKETVERSAND"], "title": "Small Parcel Courier", "description": "Small Parcel Courier"}, {"enum": ["IMPERIAL_POOL_FREIGHT"], "title": "Imperial Pool Freight", "description": "Imperial Pool Freight"}, {"enum": ["NEXT_DAY"], "title": "Next Day Air", "description": "Next Day Air"}, {"enum": ["NEXT_DAY_OVERSEAS"], "title": "Next Day Air (AK,HI,PR)", "description": "Next Day Air (AK,HI,PR)"}, {"enum": ["NEXT_MORNING"], "title": "UK - SP - Next day before noon", "description": "UK - SP - Next day before noon"}, {"enum": ["NEXT_DAY_BEFORE_NINE"], "title": "UK - SP - Next day before 9am", "description": "UK - SP - Next day before 9am"}, {"enum": ["WILL_CALL"], "title": "Will Call", "description": "Will Call"}, {"enum": ["SATURDAY_DELIVERY"], "title": "UK - SP - Saturday delivery", "description": "UK - SP - Saturday delivery"}, {"enum": ["TRUCK_FREIGHT_CASKETS_ONE_DAY"], "title": "Casket Delivery - 1 Day", "description": "Casket Delivery - 1 Day"}, {"enum": ["TRUCK_FREIGHT_CASKETS_TWO_DAY"], "title": "Casket Delivery - 2 Day", "description": "Casket Delivery - 2 Day"}, {"enum": ["CURBSIDE_WITH_UNLOAD"], "title": "Curbside with unload service", "description": "Curbside with unload service"}, {"enum": ["TRUCK_LOAD"], "title": "Truck Load", "description": "Truck Load"}, {"enum": ["CURBSIDE"], "title": "Curbside without unload service", "description": "Curbside without unload service"}, {"enum": ["WHITE_GLOVE_BRONZE"], "title": "Spedition - frei Bordsteinkante", "description": "Spedition - frei Bordsteinkante"}, {"enum": ["WHITE_GLOVE_GOLD"], "title": "Room of Choice & Packaging Removal", "description": "Room of Choice & Packaging Removal"}, {"enum": ["WHITE_GLOVE_TWO_MAN"], "title": "Premium 2-Man Delivery", "description": "Premium 2-Man Delivery"}, {"enum": ["WHITE_GLOVE_PLATINUM"], "title": "Room of Choice Delivery with Installation", "description": "Room of Choice Delivery with Installation"}, {"enum": ["WHITE_GLOVE_SILVER"], "title": "Room of Choice", "description": "Room of Choice"}, {"enum": ["TRUCK_FREIGHT_THRESHOLD"], "title": "Truck Freight - Threshold", "description": "Truck Freight - Threshold"}, {"enum": ["STANDARD_VERSAND_SPERRGUT"], "title": "Standard-Versand Sperrgut", "description": "Standard-Versand Sperrgut"}, {"enum": ["ALMO"], "title": "ALMO - Room of Choice + Removal of Old Appliance", "description": "ALMO - Room of Choice + Removal of Old Appliance"}, {"enum": ["LARGE_PARCEL_COURIER"], "title": "Large Parcel Courier", "description": "Large Parcel Courier"}, {"enum": ["EUROPEAN_LINE_HAUL"], "title": "European Line Haul", "description": "European Line Haul"}, {"enum": ["ECONOMY"], "title": "Economy", "description": "Economy"}, {"enum": ["WHITE_GLOVE_ROOM_OF_CHOICE"], "title": "White Glove Delivery - Room of Choice", "description": "White Glove Delivery - Room of Choice"}, {"enum": ["TINY_PARCEL"], "title": "Small Parcel", "description": "Small Parcel"}, {"enum": ["GROUND_OVERSEA"], "title": "GROUND (AK,HI,PR)", "description": "GROUND (AK,HI,PR)"}, {"enum": ["LOW_COST_CARRIER"], "title": "Low Cost Carrier", "description": "Low Cost Carrier"}, {"enum": ["WHITE_GLOVE_INNOVEL"], "title": "Innovel Delivery Service", "description": "Innovel Delivery Service"}, {"enum": ["BACKYARD"], "title": "Backyard Drop-Off", "description": "Backyard Drop-Off"}, {"enum": ["CURBSIDE_DELIVERY"], "title": "Curbside Delivery", "description": "Curbside Delivery"}, {"enum": ["INSIDE_DELIVERY_PACKAGING_REMOVAL_REMOVAL_OF_OLD_APPLIANCE"], "title": "Inside Delivery - Packaging Removal & Removal of Old Appliance", "description": "Inside Delivery - Packaging Removal & Removal of Old Appliance"}, {"enum": ["ONE_MAN_PREMIUM"], "title": "One Man Premium", "description": "One Man Premium"}, {"enum": ["INSIDE_DELIVERY_PACKAGING_REMOVAL"], "title": "Inside Delivery - Packaging Removal", "description": "Inside Delivery - Packaging Removal"}, {"enum": ["THRESHOLD_DELIVERY"], "title": "Threshold Delivery", "description": "Threshold Delivery"}, {"enum": ["UK_1_MAN_48HRS"], "title": "Large Parcel Courier", "description": "Large Parcel Courier"}, {"enum": ["ALLIED_ROAD_EXPRESS"], "title": "Allied Road Express", "description": "Allied Road Express"}, {"enum": ["HUNTER_ROAD_EXPRESS"], "title": "Hunter Road Express", "description": "Hunter Road Express"}, {"enum": ["WHITE_GLOVE_CAPITAL_CITIES"], "title": "White Glove - Capital Cities", "description": "White Glove - Capital Cities"}, {"enum": ["SPEDITION_FREI_BORDSTEINKANTE"], "title": "Spedition - frei Bordsteinkante", "description": "Spedition - frei Bordsteinkante"}, {"enum": ["UK_1_MAN_LONG_DELIVERY"], "title": "Large Parcel Courier", "description": "Large Parcel Courier"}, {"enum": ["IN_HOME_MATTRESS_SET_UP_REMOVAL"], "title": "In Home Mattress Set Up & Removal", "description": "In Home Mattress Set Up & Removal"}, {"enum": ["WHITE_GLOVE_DELIVERY_ROOM_OF_CHOICE_W_INSTALLATION"], "title": "Room of Choice Delivery w/ Installation", "description": "Room of Choice Delivery w/ Installation"}, {"enum": ["WHITE_GLOVE_DELIVERY_ROOM_OF_CHOICE_W_INSTALLATION_HAUL_AWAY"], "title": "Room of Choice Delivery w/ Installation & Haul Away", "description": "Room of Choice Delivery w/ Installation & Haul Away"}, {"enum": ["WHITE_GLOVE_DELIVERY_ROOM_OF_CHOICE_W_HAUL_AWAY"], "title": "Room of Choice Delivery w/ Haul Away", "description": "Room of Choice Delivery w/ Haul Away"}, {"enum": ["ROOM_OF_CHOICE_DELIVERY_W_MOVE_TO_ANOTHER_ROOM"], "title": "Room of Choice Delivery w/ Move to Another Room", "description": "Room of Choice Delivery w/ Move to Another Room"}, {"enum": ["ROOM_OF_CHOICE_DELIVERY_W_INSTALL_MOVE_TO_ANOTHER_ROOM"], "title": "Room of Choice Delivery w/ Install & Move to Another Room", "description": "Room of Choice Delivery w/ Install & Move to Another Room"}, {"enum": ["GE_WG_DELIVERY"], "title": "Room of Choice Delivery", "description": "Room of Choice Delivery"}, {"enum": ["SAMSUNG_WG_DELIVERY"], "title": "Samsung Delivery Service", "description": "Samsung Delivery Service"}, {"enum": ["WAYFAIR_LARGE_APPLIANCES_DELIVERY"], "title": "Wayfair Large Appliances Delivery", "description": "Wayfair Large Appliances Delivery"}, {"enum": ["WAYFAIR_OFF_THE_SHELF"], "title": "Off The Shelf Item", "description": "Off The Shelf Item"}], "description": "The different ship speed delivery methods."}, "carrierCode": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "poolPointAgent": {"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "ID", "description": "The `ID` scalar type represents a unique identifier, often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\"4\"`) or integer (such as `4`) input value will be accepted as an ID."}, "name": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}}, "description": "A transportation agent"}, "crossDockAgent": {"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "ID", "description": "The `ID` scalar type represents a unique identifier, often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\"4\"`) or integer (such as `4`) input value will be accepted as an ID."}, "name": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}}, "description": "A transportation agent"}, "deliveryAgent": {"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "ID", "description": "The `ID` scalar type represents a unique identifier, often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\"4\"`) or integer (such as `4`) input value will be accepted as an ID."}, "name": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}}, "description": "A transportation agent"}}, "description": "Shipping information related to a purchase order"}, "packingSlipUrl": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "warehouse": {"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "ID", "description": "The `ID` scalar type represents a unique identifier, often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\"4\"`) or integer (such as `4`) input value will be accepted as an ID."}, "name": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "address": {"type": ["object", "string", "null"], "properties": {"name": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "address1": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "address2": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "address3": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "city": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "state": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "country": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "postalCode": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "phoneNumber": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}}, "description": "An address"}, "supplier": {"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "ID", "description": "The `ID` scalar type represents a unique identifier, often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\"4\"`) or integer (such as `4`) input value will be accepted as an ID."}, "name": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "shortName": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "status": {"type": ["string", "null"], "anyOf": [{"enum": ["ACTIVE"], "title": "Active Status", "description": "Active Status"}, {"enum": ["INACTIVE"], "title": "Inactive Status", "description": "Inactive Status"}, {"enum": ["BEING_ADDED"], "title": "Being Added Status", "description": "Being Added Status"}, {"enum": ["ON_HOLD"], "title": "On Hold Status", "description": "On Hold Status"}], "description": "Represents the status of the supplier"}, "websiteURL": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "currency": {"type": ["string", "null"], "anyOf": [{"enum": ["USD"], "title": "US dollars", "description": "US dollars"}, {"enum": ["GBP"], "title": "British pounds", "description": "British pounds"}, {"enum": ["EUR"], "title": "Euros", "description": "Euros"}, {"enum": ["CAD"], "title": "Canadian dollars", "description": "Canadian dollars"}, {"enum": ["AUD"], "title": "Australian dollars", "description": "Australian dollars"}], "description": "Represents the currency id of the supplier"}, "scopes": {"type": "array", "items": {"anyOf": [{"type": ["object", "string", "null"], "description": "An API scope defining specific permissions for API access"}, {"type": "null"}]}}, "warehouses": {"type": "array", "items": {"type": ["object", "string", "null"], "description": "Information for a supplier warehouse"}}}, "description": "A supplier entity."}}, "description": "Information for a supplier warehouse"}, "products": {"type": "array", "items": {"anyOf": [{"type": ["object", "string", "null"], "properties": {"partNumber": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "quantity": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "price": {"type": ["number", "null"], "title": "Float", "description": "The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point)."}, "pieceCount": {"type": ["number", "null"], "title": "Int", "description": "The `Int` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1."}, "totalCost": {"type": ["number", "null"], "title": "Float", "description": "The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point)."}, "name": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "weight": {"type": ["number", "null"], "title": "Float", "description": "The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point)."}, "totalWeight": {"type": ["number", "null"], "title": "Float", "description": "The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point)."}, "estShipDate": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "fillDate": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "sku": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "isCancelled": {"type": ["boolean", "null"], "title": "Boolean", "description": "The `Boolean` scalar type represents `true` or `false`."}, "isTscaCompliant": {"type": ["boolean", "null"], "title": "Boolean", "description": "The `Boolean` scalar type represents `true` or `false`."}, "twoDayGuaranteeDeliveryDeadline": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "event": {"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "ID", "description": "The `ID` scalar type represents a unique identifier, often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\"4\"`) or integer (such as `4`) input value will be accepted as an ID."}, "type": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "name": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "startDate": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "endDate": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}}, "description": "A sales event hosted on Wayfair's storefront websites"}, "customComment": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}}, "description": "A purchase order product."}, {"type": "null"}]}}, "shipTo": {"type": ["object", "string", "null"], "properties": {"name": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "address1": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "address2": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "address3": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "city": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "state": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "country": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "postalCode": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "phoneNumber": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}}, "description": "An address"}, "billTo": {"type": ["object", "string", "null"], "properties": {"name": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "address1": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "address2": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "address3": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "city": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "state": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "country": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "postalCode": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "phoneNumber": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}}, "description": "An address"}, "billingInfo": {"type": ["object", "string", "null"], "properties": {"vatNumber": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}}, "description": "Billing information"}}, "description": "A purchase order."}, "InventoryMutator": {"type": ["object", "string", "null"], "properties": {"save": {"type": ["object", "string", "null"], "properties": {"id": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "handle": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "status": {"type": ["string", "null"], "anyOf": [{"enum": ["NEW"], "title": "A new item. Processing has not yet begun.", "description": "A new item. Processing has not yet begun."}, {"enum": ["PROCESSING"], "title": "We are currently processing the item.", "description": "We are currently processing the item."}, {"enum": ["ERROR"], "title": "An error occurred during processing.", "description": "An error occurred during processing."}, {"enum": ["COMPLETE"], "title": "Processing completed without errors.", "description": "Processing completed without errors."}], "description": "Current state of a transaction of transaction item."}, "submitted_at": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "submittedAt": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "completed_at": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "completedAt": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "itemCount": {"type": ["object", "string", "null"], "title": "Int32", "description": "The `Int32` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1."}, "errorCount": {"type": ["object", "string", "null"], "title": "Int32", "description": "The `Int32` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1."}, "errors": {"type": "array", "items": {"anyOf": [{"type": ["object", "string", "null"], "properties": {"key": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "message": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}}, "description": "The status of a single record in a transaction"}, {"type": "null"}]}}, "completedCount": {"type": ["object", "string", "null"], "title": "Int32", "description": "The `Int32` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1."}, "completed": {"type": "array", "items": {"anyOf": [{"type": ["object", "string", "null"], "properties": {"key": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "message": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}}, "description": "The status of a single record in a transaction"}, {"type": "null"}]}}, "processingCount": {"type": ["object", "string", "null"], "title": "Int32", "description": "The `Int32` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1."}, "processing": {"type": "array", "items": {"anyOf": [{"type": ["object", "string", "null"], "properties": {"key": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "message": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}}, "description": "The status of a single record in a transaction"}, {"type": "null"}]}}}, "description": "The status of a transaction made"}}, "description": "Mutator object capable of running mutations on inventory."}, "inventoryInput": {"type": ["object", "string", "null"], "properties": {"supplierId": {"type": ["object", "string", "null"], "title": "Int32", "description": "The `Int32` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1."}, "supplierPartNumber": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "quantityOnHand": {"type": ["object", "string", "null"], "title": "Int32", "description": "The `Int32` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1."}, "quantityBackordered": {"type": ["object", "string", "null"], "title": "Int32", "description": "The `Int32` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1."}, "quantityOnOrder": {"type": ["object", "string", "null"], "title": "Int32", "description": "The `Int32` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1."}, "itemNextAvailabilityDate": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "productNameAndOptions": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "discontinued": {"type": ["boolean", "null"], "title": "Boolean", "description": "The `Boolean` scalar type represents `true` or `false`."}, "supplier_id": {"type": ["object", "string", "null"], "title": "Int32", "description": "The `Int32` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1."}, "supplier_part_number": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "quantity_on_hand": {"type": ["object", "string", "null"], "title": "Int32", "description": "The `Int32` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1."}, "quantity_backordered": {"type": ["object", "string", "null"], "title": "Int32", "description": "The `Int32` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1."}, "quantity_on_order": {"type": ["object", "string", "null"], "title": "Int32", "description": "The `Int32` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1."}, "item_next_availability_date": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "product_name_and_options": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}}, "description": "The inventory information for a specific part."}, "inventoryFeedKind": {"type": ["string", "null"], "anyOf": [{"enum": ["DIFFERENTIAL"], "title": "A differential listing of inventory.", "description": "A differential listing of inventory."}, {"enum": ["TRUE_UP"], "title": "A complete listing of inventory for all listed products.", "description": "A complete listing of inventory for all listed products."}], "description": "The feed kind represents whether this is a differential or true up feed"}, "TransactionStatus": {"type": ["object", "string", "null"], "properties": {"id": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "handle": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "status": {"type": ["string", "null"], "anyOf": [{"enum": ["NEW"], "title": "A new item. Processing has not yet begun.", "description": "A new item. Processing has not yet begun."}, {"enum": ["PROCESSING"], "title": "We are currently processing the item.", "description": "We are currently processing the item."}, {"enum": ["ERROR"], "title": "An error occurred during processing.", "description": "An error occurred during processing."}, {"enum": ["COMPLETE"], "title": "Processing completed without errors.", "description": "Processing completed without errors."}], "description": "Current state of a transaction of transaction item."}, "submitted_at": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "submittedAt": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "completed_at": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "completedAt": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "itemCount": {"type": ["object", "string", "null"], "title": "Int32", "description": "The `Int32` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1."}, "errorCount": {"type": ["object", "string", "null"], "title": "Int32", "description": "The `Int32` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1."}, "errors": {"type": "array", "items": {"anyOf": [{"type": ["object", "string", "null"], "properties": {"key": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "message": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}}, "description": "The status of a single record in a transaction"}, {"type": "null"}]}}, "completedCount": {"type": ["object", "string", "null"], "title": "Int32", "description": "The `Int32` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1."}, "completed": {"type": "array", "items": {"anyOf": [{"type": ["object", "string", "null"], "properties": {"key": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "message": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}}, "description": "The status of a single record in a transaction"}, {"type": "null"}]}}, "processingCount": {"type": ["object", "string", "null"], "title": "Int32", "description": "The `Int32` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1."}, "processing": {"type": "array", "items": {"anyOf": [{"type": ["object", "string", "null"], "properties": {"key": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "message": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}}, "description": "The status of a single record in a transaction"}, {"type": "null"}]}}}, "description": "The status of a transaction made"}, "TransactionState": {"type": ["string", "null"], "anyOf": [{"enum": ["NEW"], "title": "A new item. Processing has not yet begun.", "description": "A new item. Processing has not yet begun."}, {"enum": ["PROCESSING"], "title": "We are currently processing the item.", "description": "We are currently processing the item."}, {"enum": ["ERROR"], "title": "An error occurred during processing.", "description": "An error occurred during processing."}, {"enum": ["COMPLETE"], "title": "Processing completed without errors.", "description": "Processing completed without errors."}], "description": "Current state of a transaction of transaction item."}, "ItemStatus": {"type": ["object", "string", "null"], "properties": {"key": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "message": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}}, "description": "The status of a single record in a transaction"}, "PurchaseOrderMutator": {"type": ["object", "string", "null"], "properties": {"backorder": {"type": ["object", "string", "null"], "properties": {"id": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "handle": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "status": {"type": ["string", "null"], "anyOf": [{"enum": ["NEW"], "title": "A new item. Processing has not yet begun.", "description": "A new item. Processing has not yet begun."}, {"enum": ["PROCESSING"], "title": "We are currently processing the item.", "description": "We are currently processing the item."}, {"enum": ["ERROR"], "title": "An error occurred during processing.", "description": "An error occurred during processing."}, {"enum": ["COMPLETE"], "title": "Processing completed without errors.", "description": "Processing completed without errors."}], "description": "Current state of a transaction of transaction item."}, "submitted_at": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "submittedAt": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "completed_at": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "completedAt": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "itemCount": {"type": ["object", "string", "null"], "title": "Int32", "description": "The `Int32` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1."}, "errorCount": {"type": ["object", "string", "null"], "title": "Int32", "description": "The `Int32` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1."}, "errors": {"type": "array", "items": {"anyOf": [{"type": ["object", "string", "null"], "properties": {"key": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "message": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}}, "description": "The status of a single record in a transaction"}, {"type": "null"}]}}, "completedCount": {"type": ["object", "string", "null"], "title": "Int32", "description": "The `Int32` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1."}, "completed": {"type": "array", "items": {"anyOf": [{"type": ["object", "string", "null"], "properties": {"key": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "message": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}}, "description": "The status of a single record in a transaction"}, {"type": "null"}]}}, "processingCount": {"type": ["object", "string", "null"], "title": "Int32", "description": "The `Int32` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1."}, "processing": {"type": "array", "items": {"anyOf": [{"type": ["object", "string", "null"], "properties": {"key": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "message": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}}, "description": "The status of a single record in a transaction"}, {"type": "null"}]}}}, "description": "The status of a transaction made"}, "accept": {"type": ["object", "string", "null"], "properties": {"id": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "handle": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "status": {"type": ["string", "null"], "anyOf": [{"enum": ["NEW"], "title": "A new item. Processing has not yet begun.", "description": "A new item. Processing has not yet begun."}, {"enum": ["PROCESSING"], "title": "We are currently processing the item.", "description": "We are currently processing the item."}, {"enum": ["ERROR"], "title": "An error occurred during processing.", "description": "An error occurred during processing."}, {"enum": ["COMPLETE"], "title": "Processing completed without errors.", "description": "Processing completed without errors."}], "description": "Current state of a transaction of transaction item."}, "submitted_at": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "submittedAt": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "completed_at": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "completedAt": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "itemCount": {"type": ["object", "string", "null"], "title": "Int32", "description": "The `Int32` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1."}, "errorCount": {"type": ["object", "string", "null"], "title": "Int32", "description": "The `Int32` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1."}, "errors": {"type": "array", "items": {"anyOf": [{"type": ["object", "string", "null"], "properties": {"key": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "message": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}}, "description": "The status of a single record in a transaction"}, {"type": "null"}]}}, "completedCount": {"type": ["object", "string", "null"], "title": "Int32", "description": "The `Int32` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1."}, "completed": {"type": "array", "items": {"anyOf": [{"type": ["object", "string", "null"], "properties": {"key": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "message": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}}, "description": "The status of a single record in a transaction"}, {"type": "null"}]}}, "processingCount": {"type": ["object", "string", "null"], "title": "Int32", "description": "The `Int32` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1."}, "processing": {"type": "array", "items": {"anyOf": [{"type": ["object", "string", "null"], "properties": {"key": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "message": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}}, "description": "The status of a single record in a transaction"}, {"type": "null"}]}}}, "description": "The status of a transaction made"}, "reject": {"type": ["object", "string", "null"], "properties": {"id": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "handle": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "status": {"type": ["string", "null"], "anyOf": [{"enum": ["NEW"], "title": "A new item. Processing has not yet begun.", "description": "A new item. Processing has not yet begun."}, {"enum": ["PROCESSING"], "title": "We are currently processing the item.", "description": "We are currently processing the item."}, {"enum": ["ERROR"], "title": "An error occurred during processing.", "description": "An error occurred during processing."}, {"enum": ["COMPLETE"], "title": "Processing completed without errors.", "description": "Processing completed without errors."}], "description": "Current state of a transaction of transaction item."}, "submitted_at": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "submittedAt": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "completed_at": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "completedAt": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "itemCount": {"type": ["object", "string", "null"], "title": "Int32", "description": "The `Int32` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1."}, "errorCount": {"type": ["object", "string", "null"], "title": "Int32", "description": "The `Int32` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1."}, "errors": {"type": "array", "items": {"anyOf": [{"type": ["object", "string", "null"], "properties": {"key": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "message": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}}, "description": "The status of a single record in a transaction"}, {"type": "null"}]}}, "completedCount": {"type": ["object", "string", "null"], "title": "Int32", "description": "The `Int32` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1."}, "completed": {"type": "array", "items": {"anyOf": [{"type": ["object", "string", "null"], "properties": {"key": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "message": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}}, "description": "The status of a single record in a transaction"}, {"type": "null"}]}}, "processingCount": {"type": ["object", "string", "null"], "title": "Int32", "description": "The `Int32` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1."}, "processing": {"type": "array", "items": {"anyOf": [{"type": ["object", "string", "null"], "properties": {"key": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "message": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}}, "description": "The status of a single record in a transaction"}, {"type": "null"}]}}}, "description": "The status of a transaction made"}, "shipment": {"type": ["object", "string", "null"], "properties": {"id": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "handle": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "status": {"type": ["string", "null"], "anyOf": [{"enum": ["NEW"], "title": "A new item. Processing has not yet begun.", "description": "A new item. Processing has not yet begun."}, {"enum": ["PROCESSING"], "title": "We are currently processing the item.", "description": "We are currently processing the item."}, {"enum": ["ERROR"], "title": "An error occurred during processing.", "description": "An error occurred during processing."}, {"enum": ["COMPLETE"], "title": "Processing completed without errors.", "description": "Processing completed without errors."}], "description": "Current state of a transaction of transaction item."}, "submitted_at": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "submittedAt": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "completed_at": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "completedAt": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "itemCount": {"type": ["object", "string", "null"], "title": "Int32", "description": "The `Int32` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1."}, "errorCount": {"type": ["object", "string", "null"], "title": "Int32", "description": "The `Int32` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1."}, "errors": {"type": "array", "items": {"anyOf": [{"type": ["object", "string", "null"], "properties": {"key": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "message": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}}, "description": "The status of a single record in a transaction"}, {"type": "null"}]}}, "completedCount": {"type": ["object", "string", "null"], "title": "Int32", "description": "The `Int32` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1."}, "completed": {"type": "array", "items": {"anyOf": [{"type": ["object", "string", "null"], "properties": {"key": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "message": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}}, "description": "The status of a single record in a transaction"}, {"type": "null"}]}}, "processingCount": {"type": ["object", "string", "null"], "title": "Int32", "description": "The `Int32` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1."}, "processing": {"type": "array", "items": {"anyOf": [{"type": ["object", "string", "null"], "properties": {"key": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "message": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}}, "description": "The status of a single record in a transaction"}, {"type": "null"}]}}}, "description": "The status of a transaction made"}, "register": {"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "ID", "description": "The `ID` scalar type represents a unique identifier, often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\"4\"`) or integer (such as `4`) input value will be accepted as an ID."}, "eventDate": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "pickupDate": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "poNumber": {"type": ["object", "string", "null"], "title": "Int32", "description": "The `Int32` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1."}, "billOfLading": {"type": ["object", "string", "null"], "properties": {"url": {"type": ["object", "string", "null"], "title": "URL", "description": "A URL as described by IEFT RFC 1738 (https://tools.ietf.org/html/rfc1738)"}}, "description": "Information about a specific Bill of Lading"}, "consolidatedShippingLabel": {"type": ["object", "string", "null"], "properties": {"url": {"type": ["object", "string", "null"], "title": "URL", "description": "A URL as described by IEFT RFC 1738 (https://tools.ietf.org/html/rfc1738)"}}, "description": "Information about a specific shipping label"}, "customsDocument": {"type": ["object", "string", "null"], "properties": {"url": {"type": ["object", "string", "null"], "title": "URL", "description": "A URL as described by IEFT RFC 1738 (https://tools.ietf.org/html/rfc1738)"}}, "description": "Information about a specific customs document"}, "generatedShippingLabels": {"type": "array", "items": {"anyOf": [{"type": ["object", "string", "null"], "properties": {"poNumber": {"type": ["object", "string", "null"], "title": "Int32", "description": "The `Int32` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1."}, "fullPoNumber": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "numberOfLabels": {"type": ["object", "string", "null"], "title": "Int32", "description": "The `Int32` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1."}, "carrier": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "carrierCode": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "trackingNumber": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}}, "description": "Information about generated shipping label"}, {"type": "null"}]}}, "shippingLabelInfo": {"type": "array", "items": {"anyOf": [{"type": ["object", "string", "null"], "properties": {"carrier": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "carrierCode": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "trackingNumber": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}}, "description": "Interface for a Shipping Label - this contains all the common properties a label should have."}, {"type": "null"}]}}, "purchaseOrder": {"type": ["object", "string", "null"], "properties": {"id": {"type": ["number", "null"], "title": "Int", "description": "The `Int` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1."}, "storePrefix": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "poNumber": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "poDate": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "supplierId": {"type": ["number", "null"], "title": "Int", "description": "The `Int` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1."}, "supplierName": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "supplierAddress1": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "supplierAddress2": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "supplierAddress3": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "supplierCity": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "supplierState": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "supplierPostalCode": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "estimatedShipDate": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "scheduledDeliveryDate": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "deliveryMethodCode": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "customerName": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "customerAddress1": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "customerAddress2": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "customerCity": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "customerState": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "customerPostalCode": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "customerCountry": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "salesChannelName": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "orderType": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "shippingInfo": {"type": ["object", "string", "null"], "description": "Shipping information related to a purchase order"}, "packingSlipUrl": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "warehouse": {"type": ["object", "string", "null"], "description": "Information for a supplier warehouse"}, "products": {"type": "array", "items": {"anyOf": [{"type": ["object", "string", "null"], "description": "A purchase order product."}, {"type": "null"}]}}, "shipTo": {"type": ["object", "string", "null"], "description": "An address"}, "billTo": {"type": ["object", "string", "null"], "description": "An address"}, "billingInfo": {"type": ["object", "string", "null"], "description": "Billing information"}}, "description": "A purchase order."}, "shippingUnits": {"type": "array", "items": {"type": ["object", "string", "null"], "properties": {"groupIdentifier": {"type": ["object", "string", "null"], "title": "PositiveInt", "description": "The `PositiveInt` scalar type represents non-fractional signed whole\n    numeric values. PositiveInt can represent values between 1 and 2^31 - 1\n    inclusive"}, "sequenceIdentifier": {"type": ["object", "string", "null"], "title": "PositiveInt", "description": "The `PositiveInt` scalar type represents non-fractional signed whole\n    numeric values. PositiveInt can represent values between 1 and 2^31 - 1\n    inclusive"}, "part": {"type": ["object", "string", "null"], "description": "Information about a product that a specific supplier has provided."}}, "description": "A unit that is being shipped out. In this sense, a unit is a single quantity of a single product part in a single box"}}}, "description": "This type includes all the information that resulted from the generation of labels for a purchase order."}, "acknowledgeCastleGate": {"type": ["object", "string", "null"], "properties": {"id": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "handle": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "status": {"type": ["string", "null"], "anyOf": [{"enum": ["NEW"], "title": "A new item. Processing has not yet begun.", "description": "A new item. Processing has not yet begun."}, {"enum": ["PROCESSING"], "title": "We are currently processing the item.", "description": "We are currently processing the item."}, {"enum": ["ERROR"], "title": "An error occurred during processing.", "description": "An error occurred during processing."}, {"enum": ["COMPLETE"], "title": "Processing completed without errors.", "description": "Processing completed without errors."}], "description": "Current state of a transaction of transaction item."}, "submitted_at": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "submittedAt": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "completed_at": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "completedAt": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "itemCount": {"type": ["object", "string", "null"], "title": "Int32", "description": "The `Int32` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1."}, "errorCount": {"type": ["object", "string", "null"], "title": "Int32", "description": "The `Int32` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1."}, "errors": {"type": "array", "items": {"anyOf": [{"type": ["object", "string", "null"], "properties": {"key": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "message": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}}, "description": "The status of a single record in a transaction"}, {"type": "null"}]}}, "completedCount": {"type": ["object", "string", "null"], "title": "Int32", "description": "The `Int32` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1."}, "completed": {"type": "array", "items": {"anyOf": [{"type": ["object", "string", "null"], "properties": {"key": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "message": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}}, "description": "The status of a single record in a transaction"}, {"type": "null"}]}}, "processingCount": {"type": ["object", "string", "null"], "title": "Int32", "description": "The `Int32` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1."}, "processing": {"type": "array", "items": {"anyOf": [{"type": ["object", "string", "null"], "properties": {"key": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "message": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}}, "description": "The status of a single record in a transaction"}, {"type": "null"}]}}}, "description": "The status of a transaction made"}, "acknowledgeCastleGateWarehouseShippingAdvice": {"type": ["object", "string", "null"], "properties": {"id": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "handle": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "status": {"type": ["string", "null"], "anyOf": [{"enum": ["NEW"], "title": "A new item. Processing has not yet begun.", "description": "A new item. Processing has not yet begun."}, {"enum": ["PROCESSING"], "title": "We are currently processing the item.", "description": "We are currently processing the item."}, {"enum": ["ERROR"], "title": "An error occurred during processing.", "description": "An error occurred during processing."}, {"enum": ["COMPLETE"], "title": "Processing completed without errors.", "description": "Processing completed without errors."}], "description": "Current state of a transaction of transaction item."}, "submitted_at": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "submittedAt": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "completed_at": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "completedAt": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "itemCount": {"type": ["object", "string", "null"], "title": "Int32", "description": "The `Int32` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1."}, "errorCount": {"type": ["object", "string", "null"], "title": "Int32", "description": "The `Int32` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1."}, "errors": {"type": "array", "items": {"anyOf": [{"type": ["object", "string", "null"], "properties": {"key": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "message": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}}, "description": "The status of a single record in a transaction"}, {"type": "null"}]}}, "completedCount": {"type": ["object", "string", "null"], "title": "Int32", "description": "The `Int32` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1."}, "completed": {"type": "array", "items": {"anyOf": [{"type": ["object", "string", "null"], "properties": {"key": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "message": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}}, "description": "The status of a single record in a transaction"}, {"type": "null"}]}}, "processingCount": {"type": ["object", "string", "null"], "title": "Int32", "description": "The `Int32` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1."}, "processing": {"type": "array", "items": {"anyOf": [{"type": ["object", "string", "null"], "properties": {"key": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "message": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}}, "description": "The status of a single record in a transaction"}, {"type": "null"}]}}}, "description": "The status of a transaction made"}}, "description": "Mutator object capable of running mutations on purchase orders."}, "BackorderedLineItemInput": {"type": ["object", "string", "null"], "properties": {"partNumber": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "quantity": {"type": ["object", "string", "null"], "title": "Int64", "description": "The `Int64` scalar type represents non-fractional signed whole numeric values. Int can represent values between PHP_INT_MIN AND PHP_INT_MAX."}, "unitPrice": {"type": ["number", "null"], "title": "Float", "description": "The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point)."}, "newShipDate": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}}, "description": "An input for a backordered purchase order line item"}, "Int64": {"type": ["object", "string", "null"], "title": "Int64", "description": "The `Int64` scalar type represents non-fractional signed whole numeric values. Int can represent values between PHP_INT_MIN AND PHP_INT_MAX."}, "AcceptedLineItemInput": {"type": ["object", "string", "null"], "properties": {"partNumber": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "quantity": {"type": ["object", "string", "null"], "title": "Int32", "description": "The `Int32` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1."}, "unitPrice": {"type": ["number", "null"], "title": "Float", "description": "The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point)."}, "estimatedShipDate": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}}, "description": "An input for an accepted purchase order line item"}, "RejectLineItemInput": {"type": ["object", "string", "null"], "properties": {"partNumber": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "quantity": {"type": ["object", "string", "null"], "title": "Int32", "description": "The `Int32` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1."}}, "description": "An input for a rejected purchase order line item"}, "ShipNoticeInput": {"type": ["object", "string", "null"], "properties": {"poNumber": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "supplierId": {"type": ["object", "string", "null"], "title": "ID", "description": "The `ID` scalar type represents a unique identifier, often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\"4\"`) or integer (such as `4`) input value will be accepted as an ID."}, "packageCount": {"type": ["object", "string", "null"], "title": "PositiveInt", "description": "The `PositiveInt` scalar type represents non-fractional signed whole\n    numeric values. PositiveInt can represent values between 1 and 2^31 - 1\n    inclusive"}, "weight": {"type": ["number", "null"], "title": "Float", "description": "The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point)."}, "volume": {"type": ["number", "null"], "title": "Float", "description": "The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point)."}, "carrierCode": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "shipSpeed": {"type": ["string", "null"], "anyOf": [{"enum": ["SECOND_DAY_AIR"], "title": "2nd Day Air Delivery", "description": "2nd Day Air Delivery"}, {"enum": ["SECOND_DAY_AIR_FREE"], "title": "2-Day Delivery -- Free!", "description": "2-Day Delivery -- Free!"}, {"enum": ["FIVE_DAY_DIRECT"], "title": "Global 5-Day Direct Delivery", "description": "Global 5-Day Direct Delivery"}, {"enum": ["THREE_DAY"], "title": "3 Day Delivery", "description": "3 Day Delivery"}, {"enum": ["CONTAINER"], "title": "Container", "description": "Container"}, {"enum": ["EMAIL"], "title": "Zustellung per Email", "description": "Zustellung per Email"}, {"enum": ["FEDEX_HOME"], "title": "FedEx Home Delivery", "description": "FedEx Home Delivery"}, {"enum": ["GROUND"], "title": "Small Parcel Courier", "description": "Small Parcel Courier"}, {"enum": ["PAKETVERSAND"], "title": "Small Parcel Courier", "description": "Small Parcel Courier"}, {"enum": ["IMPERIAL_POOL_FREIGHT"], "title": "Imperial Pool Freight", "description": "Imperial Pool Freight"}, {"enum": ["NEXT_DAY"], "title": "Next Day Air", "description": "Next Day Air"}, {"enum": ["NEXT_DAY_OVERSEAS"], "title": "Next Day Air (AK,HI,PR)", "description": "Next Day Air (AK,HI,PR)"}, {"enum": ["NEXT_MORNING"], "title": "UK - SP - Next day before noon", "description": "UK - SP - Next day before noon"}, {"enum": ["NEXT_DAY_BEFORE_NINE"], "title": "UK - SP - Next day before 9am", "description": "UK - SP - Next day before 9am"}, {"enum": ["WILL_CALL"], "title": "Will Call", "description": "Will Call"}, {"enum": ["SATURDAY_DELIVERY"], "title": "UK - SP - Saturday delivery", "description": "UK - SP - Saturday delivery"}, {"enum": ["TRUCK_FREIGHT_CASKETS_ONE_DAY"], "title": "Casket Delivery - 1 Day", "description": "Casket Delivery - 1 Day"}, {"enum": ["TRUCK_FREIGHT_CASKETS_TWO_DAY"], "title": "Casket Delivery - 2 Day", "description": "Casket Delivery - 2 Day"}, {"enum": ["CURBSIDE_WITH_UNLOAD"], "title": "Curbside with unload service", "description": "Curbside with unload service"}, {"enum": ["TRUCK_LOAD"], "title": "Truck Load", "description": "Truck Load"}, {"enum": ["CURBSIDE"], "title": "Curbside without unload service", "description": "Curbside without unload service"}, {"enum": ["WHITE_GLOVE_BRONZE"], "title": "Spedition - frei Bordsteinkante", "description": "Spedition - frei Bordsteinkante"}, {"enum": ["WHITE_GLOVE_GOLD"], "title": "Room of Choice & Packaging Removal", "description": "Room of Choice & Packaging Removal"}, {"enum": ["WHITE_GLOVE_TWO_MAN"], "title": "Premium 2-Man Delivery", "description": "Premium 2-Man Delivery"}, {"enum": ["WHITE_GLOVE_PLATINUM"], "title": "Room of Choice Delivery with Installation", "description": "Room of Choice Delivery with Installation"}, {"enum": ["WHITE_GLOVE_SILVER"], "title": "Room of Choice", "description": "Room of Choice"}, {"enum": ["TRUCK_FREIGHT_THRESHOLD"], "title": "Truck Freight - Threshold", "description": "Truck Freight - Threshold"}, {"enum": ["STANDARD_VERSAND_SPERRGUT"], "title": "Standard-Versand Sperrgut", "description": "Standard-Versand Sperrgut"}, {"enum": ["ALMO"], "title": "ALMO - Room of Choice + Removal of Old Appliance", "description": "ALMO - Room of Choice + Removal of Old Appliance"}, {"enum": ["LARGE_PARCEL_COURIER"], "title": "Large Parcel Courier", "description": "Large Parcel Courier"}, {"enum": ["EUROPEAN_LINE_HAUL"], "title": "European Line Haul", "description": "European Line Haul"}, {"enum": ["ECONOMY"], "title": "Economy", "description": "Economy"}, {"enum": ["WHITE_GLOVE_ROOM_OF_CHOICE"], "title": "White Glove Delivery - Room of Choice", "description": "White Glove Delivery - Room of Choice"}, {"enum": ["TINY_PARCEL"], "title": "Small Parcel", "description": "Small Parcel"}, {"enum": ["GROUND_OVERSEA"], "title": "GROUND (AK,HI,PR)", "description": "GROUND (AK,HI,PR)"}, {"enum": ["LOW_COST_CARRIER"], "title": "Low Cost Carrier", "description": "Low Cost Carrier"}, {"enum": ["WHITE_GLOVE_INNOVEL"], "title": "Innovel Delivery Service", "description": "Innovel Delivery Service"}, {"enum": ["BACKYARD"], "title": "Backyard Drop-Off", "description": "Backyard Drop-Off"}, {"enum": ["CURBSIDE_DELIVERY"], "title": "Curbside Delivery", "description": "Curbside Delivery"}, {"enum": ["INSIDE_DELIVERY_PACKAGING_REMOVAL_REMOVAL_OF_OLD_APPLIANCE"], "title": "Inside Delivery - Packaging Removal & Removal of Old Appliance", "description": "Inside Delivery - Packaging Removal & Removal of Old Appliance"}, {"enum": ["ONE_MAN_PREMIUM"], "title": "One Man Premium", "description": "One Man Premium"}, {"enum": ["INSIDE_DELIVERY_PACKAGING_REMOVAL"], "title": "Inside Delivery - Packaging Removal", "description": "Inside Delivery - Packaging Removal"}, {"enum": ["THRESHOLD_DELIVERY"], "title": "Threshold Delivery", "description": "Threshold Delivery"}, {"enum": ["UK_1_MAN_48HRS"], "title": "Large Parcel Courier", "description": "Large Parcel Courier"}, {"enum": ["ALLIED_ROAD_EXPRESS"], "title": "Allied Road Express", "description": "Allied Road Express"}, {"enum": ["HUNTER_ROAD_EXPRESS"], "title": "Hunter Road Express", "description": "Hunter Road Express"}, {"enum": ["WHITE_GLOVE_CAPITAL_CITIES"], "title": "White Glove - Capital Cities", "description": "White Glove - Capital Cities"}, {"enum": ["SPEDITION_FREI_BORDSTEINKANTE"], "title": "Spedition - frei Bordsteinkante", "description": "Spedition - frei Bordsteinkante"}, {"enum": ["UK_1_MAN_LONG_DELIVERY"], "title": "Large Parcel Courier", "description": "Large Parcel Courier"}, {"enum": ["IN_HOME_MATTRESS_SET_UP_REMOVAL"], "title": "In Home Mattress Set Up & Removal", "description": "In Home Mattress Set Up & Removal"}, {"enum": ["WHITE_GLOVE_DELIVERY_ROOM_OF_CHOICE_W_INSTALLATION"], "title": "Room of Choice Delivery w/ Installation", "description": "Room of Choice Delivery w/ Installation"}, {"enum": ["WHITE_GLOVE_DELIVERY_ROOM_OF_CHOICE_W_INSTALLATION_HAUL_AWAY"], "title": "Room of Choice Delivery w/ Installation & Haul Away", "description": "Room of Choice Delivery w/ Installation & Haul Away"}, {"enum": ["WHITE_GLOVE_DELIVERY_ROOM_OF_CHOICE_W_HAUL_AWAY"], "title": "Room of Choice Delivery w/ Haul Away", "description": "Room of Choice Delivery w/ Haul Away"}, {"enum": ["ROOM_OF_CHOICE_DELIVERY_W_MOVE_TO_ANOTHER_ROOM"], "title": "Room of Choice Delivery w/ Move to Another Room", "description": "Room of Choice Delivery w/ Move to Another Room"}, {"enum": ["ROOM_OF_CHOICE_DELIVERY_W_INSTALL_MOVE_TO_ANOTHER_ROOM"], "title": "Room of Choice Delivery w/ Install & Move to Another Room", "description": "Room of Choice Delivery w/ Install & Move to Another Room"}, {"enum": ["GE_WG_DELIVERY"], "title": "Room of Choice Delivery", "description": "Room of Choice Delivery"}, {"enum": ["SAMSUNG_WG_DELIVERY"], "title": "Samsung Delivery Service", "description": "Samsung Delivery Service"}, {"enum": ["WAYFAIR_LARGE_APPLIANCES_DELIVERY"], "title": "Wayfair Large Appliances Delivery", "description": "Wayfair Large Appliances Delivery"}, {"enum": ["WAYFAIR_OFF_THE_SHELF"], "title": "Off The Shelf Item", "description": "Off The Shelf Item"}], "description": "The different ship speed delivery methods."}, "trackingNumber": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "shipDate": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "sourceAddress": {"type": ["object", "string", "null"], "properties": {"name": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "streetAddress1": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "streetAddress2": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "city": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "state": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "postalCode": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "country": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}}, "description": "An address"}, "destinationAddress": {"type": ["object", "string", "null"], "properties": {"name": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "streetAddress1": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "streetAddress2": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "city": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "state": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "postalCode": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "country": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}}, "description": "An address"}, "smallParcelShipments": {"type": "array", "items": {"type": ["object", "string", "null"], "properties": {"package": {"type": ["object", "string", "null"], "properties": {"code": {"type": ["object", "string", "null"], "description": "A tracking code that will go on a package including the type and the value"}, "weight": {"type": ["number", "null"], "title": "Float", "description": "The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point)."}}, "description": "A package that a purchase order or part of a purchase order is shipped in"}, "items": {"type": "array", "items": {"type": ["object", "string", "null"], "properties": {"partNumber": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "quantity": {"type": ["object", "string", "null"], "title": "PositiveInt", "description": "The `PositiveInt` scalar type represents non-fractional signed whole\n    numeric values. PositiveInt can represent values between 1 and 2^31 - 1\n    inclusive"}}, "description": "A line item that is shipped in a small parcel package"}, "description": "A list of items that are in this small parcel package"}}, "description": "A small parcel package and the items in the package"}, "description": "A list of the small parcel packages that were shipped"}, "largeParcelShipments": {"type": "array", "items": {"type": ["object", "string", "null"], "properties": {"partNumber": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "packages": {"type": "array", "items": {"type": ["object", "string", "null"], "properties": {"code": {"type": ["object", "string", "null"], "description": "A tracking code that will go on a package including the type and the value"}, "weight": {"type": ["number", "null"], "title": "Float", "description": "The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point)."}}, "description": "A package that a purchase order or part of a purchase order is shipped in"}, "description": "The packages that the large parcel item is being sent in"}}, "description": "A large parcel item and the packages it is split into"}, "description": "A list of the large parcel items and their packages that were shipped"}}, "description": "A notice that a purchase order has shipped. This includes all necessary information about that shipment."}, "PositiveInt": {"type": ["object", "string", "null"], "title": "PositiveInt", "description": "The `PositiveInt` scalar type represents non-fractional signed whole\n    numeric values. PositiveInt can represent values between 1 and 2^31 - 1\n    inclusive"}, "AddressInput": {"type": ["object", "string", "null"], "properties": {"name": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "streetAddress1": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "streetAddress2": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "city": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "state": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "postalCode": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "country": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}}, "description": "An address"}, "SmallParcelShipmentInput": {"type": ["object", "string", "null"], "properties": {"package": {"type": ["object", "string", "null"], "properties": {"code": {"type": ["object", "string", "null"], "properties": {"type": {"type": ["string", "null"], "anyOf": [{"enum": ["TRACKING_NUMBER"], "title": "A simple package tracking number", "description": "A simple package tracking number"}, {"enum": ["UCC_128"], "title": "A UCC-128 code", "description": "A UCC-128 code"}], "description": "Types of package tracking codes"}, "value": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}}, "description": "A tracking code that will go on a package including the type and the value"}, "weight": {"type": ["number", "null"], "title": "Float", "description": "The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point)."}}, "description": "A package that a purchase order or part of a purchase order is shipped in"}, "items": {"type": "array", "items": {"type": ["object", "string", "null"], "properties": {"partNumber": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "quantity": {"type": ["object", "string", "null"], "title": "PositiveInt", "description": "The `PositiveInt` scalar type represents non-fractional signed whole\n    numeric values. PositiveInt can represent values between 1 and 2^31 - 1\n    inclusive"}}, "description": "A line item that is shipped in a small parcel package"}, "description": "A list of items that are in this small parcel package"}}, "description": "A small parcel package and the items in the package"}, "PurchaseOrderPackageInput": {"type": ["object", "string", "null"], "properties": {"code": {"type": ["object", "string", "null"], "properties": {"type": {"type": ["string", "null"], "anyOf": [{"enum": ["TRACKING_NUMBER"], "title": "A simple package tracking number", "description": "A simple package tracking number"}, {"enum": ["UCC_128"], "title": "A UCC-128 code", "description": "A UCC-128 code"}], "description": "Types of package tracking codes"}, "value": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}}, "description": "A tracking code that will go on a package including the type and the value"}, "weight": {"type": ["number", "null"], "title": "Float", "description": "The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point)."}}, "description": "A package that a purchase order or part of a purchase order is shipped in"}, "PackageTrackingCode": {"type": ["object", "string", "null"], "properties": {"type": {"type": ["string", "null"], "anyOf": [{"enum": ["TRACKING_NUMBER"], "title": "A simple package tracking number", "description": "A simple package tracking number"}, {"enum": ["UCC_128"], "title": "A UCC-128 code", "description": "A UCC-128 code"}], "description": "Types of package tracking codes"}, "value": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}}, "description": "A tracking code that will go on a package including the type and the value"}, "PackageTrackingCodeTypeEnum": {"type": ["string", "null"], "anyOf": [{"enum": ["TRACKING_NUMBER"], "title": "A simple package tracking number", "description": "A simple package tracking number"}, {"enum": ["UCC_128"], "title": "A UCC-128 code", "description": "A UCC-128 code"}], "description": "Types of package tracking codes"}, "SmallParcelItemInput": {"type": ["object", "string", "null"], "properties": {"partNumber": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "quantity": {"type": ["object", "string", "null"], "title": "PositiveInt", "description": "The `PositiveInt` scalar type represents non-fractional signed whole\n    numeric values. PositiveInt can represent values between 1 and 2^31 - 1\n    inclusive"}}, "description": "A line item that is shipped in a small parcel package"}, "LargeParcelShipmentInput": {"type": ["object", "string", "null"], "properties": {"partNumber": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "packages": {"type": "array", "items": {"type": ["object", "string", "null"], "properties": {"code": {"type": ["object", "string", "null"], "properties": {"type": {"type": ["string", "null"], "anyOf": [{"enum": ["TRACKING_NUMBER"], "title": "A simple package tracking number", "description": "A simple package tracking number"}, {"enum": ["UCC_128"], "title": "A UCC-128 code", "description": "A UCC-128 code"}], "description": "Types of package tracking codes"}, "value": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}}, "description": "A tracking code that will go on a package including the type and the value"}, "weight": {"type": ["number", "null"], "title": "Float", "description": "The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point)."}}, "description": "A package that a purchase order or part of a purchase order is shipped in"}, "description": "The packages that the large parcel item is being sent in"}}, "description": "A large parcel item and the packages it is split into"}, "RegistrationInput": {"type": ["object", "string", "null"], "properties": {"poNumber": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "warehouseId": {"type": ["object", "string", "null"], "title": "ID", "description": "The `ID` scalar type represents a unique identifier, often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\"4\"`) or integer (such as `4`) input value will be accepted as an ID."}, "requestForPickupDate": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "shippingUnits": {"type": "array", "items": {"type": ["object", "string", "null"], "properties": {"partNumber": {"type": ["object", "string", "null"], "title": "NonEmptyString", "description": "The `NonEmptyString` scalar type represents a non-empty string"}, "unitType": {"type": ["string", "null"], "anyOf": [{"enum": ["CARTON"], "title": "A carton (box) unit.", "description": "A carton (box) unit."}, {"enum": ["BAG"], "title": "A sealed plastic bag unit.", "description": "A sealed plastic bag unit."}, {"enum": ["ROLL"], "title": "A rolled-up unit.", "description": "A rolled-up unit."}, {"enum": ["OTHER"], "title": "Any shipping unit that cannot be defined as a carton, roll, or bag.", "description": "Any shipping unit that cannot be defined as a carton, roll, or bag."}], "description": "The types of packaging units that can be shipped"}, "weight": {"type": ["object", "string", "null"], "properties": {"value": {"type": ["number", "null"], "title": "Float", "description": "The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point)."}, "unit": {"type": ["string", "null"], "anyOf": [{"enum": ["POUNDS"], "title": "Pounds (lbs)", "description": "Pounds (lbs)"}, {"enum": ["KILOGRAMS"], "title": "Kilograms (kg)", "description": "Kilograms (kg)"}], "description": "An enumeration of the different weight units that are supported"}}, "description": "An input for weight measurements"}, "dimensions": {"type": ["object", "string", "null"], "properties": {"length": {"type": ["object", "string", "null"], "description": "An input for 1D-measurements (length and unit)"}, "width": {"type": ["object", "string", "null"], "description": "An input for 1D-measurements (length and unit)"}, "height": {"type": ["object", "string", "null"], "description": "An input for 1D-measurements (length and unit)"}}, "description": "An input for a set of 3D (L x W x H) dimensions"}, "freightClass": {"type": ["string", "null"], "anyOf": [{"enum": ["CODE_500"], "title": "Less than 1 lb - Bags of gold dust, ping pong balls.", "description": "Less than 1 lb - Bags of gold dust, ping pong balls."}, {"enum": ["CODE_400"], "title": "1-2 lbs - Deer antlers.", "description": "1-2 lbs - Deer antlers."}, {"enum": ["CODE_300"], "title": "2-3 lbs - Wood cabinets, tables, chairs setup, model boats.", "description": "2-3 lbs - Wood cabinets, tables, chairs setup, model boats."}, {"enum": ["CODE_250"], "title": "3-4 lbs - Bamboo furniture, mattress and box spring, plasma TV.", "description": "3-4 lbs - Bamboo furniture, mattress and box spring, plasma TV."}, {"enum": ["CODE_200"], "title": "4-5 lbs - Auto sheet metal parts, aircraft parts, aluminum table, packaged mattresses.", "description": "4-5 lbs - Auto sheet metal parts, aircraft parts, aluminum table, packaged mattresses."}, {"enum": ["CODE_175"], "title": "5-6 lbs - Clothing, couches stuffed furniture.", "description": "5-6 lbs - Clothing, couches stuffed furniture."}, {"enum": ["CODE_150"], "title": "6-7 lbs - Auto sheet metal parts, bookcases.", "description": "6-7 lbs - Auto sheet metal parts, bookcases."}, {"enum": ["CODE_125"], "title": "7-8 lbs - Small Household appliances.", "description": "7-8 lbs - Small Household appliances."}, {"enum": ["CODE_110"], "title": "8-9 lbs - Cabinets, framed artwork, table saws.", "description": "8-9 lbs - Cabinets, framed artwork, table saws."}, {"enum": ["CODE_100"], "title": "9-10.5 lbs - Boat covers, car covers, canvas, wine cases, caskets.", "description": "9-10.5 lbs - Boat covers, car covers, canvas, wine cases, caskets."}, {"enum": ["CODE_92_5"], "title": "10.5-12 lbs - Computers, monitors, refrigerators.", "description": "10.5-12 lbs - Computers, monitors, refrigerators."}, {"enum": ["CODE_85"], "title": "12-13.5 lbs - Crated machinery, cast iron stoves.", "description": "12-13.5 lbs - Crated machinery, cast iron stoves."}, {"enum": ["CODE_77_5"], "title": "13.5-15 lbs - Tires, bathroom fixtures.", "description": "13.5-15 lbs - Tires, bathroom fixtures."}, {"enum": ["CODE_70"], "title": "15-22.5 lbs - Car accessories & car parts, food items, automobile engines.", "description": "15-22.5 lbs - Car accessories & car parts, food items, automobile engines."}, {"enum": ["CODE_65"], "title": "22.5-30 lbs - Car accessories & car parts, bottled beverages, books in boxes.", "description": "22.5-30 lbs - Car accessories & car parts, bottled beverages, books in boxes."}, {"enum": ["CODE_60"], "title": "30-35 lbs - Car accessories & car parts.", "description": "30-35 lbs - Car accessories & car parts."}, {"enum": ["CODE_55"], "title": "35-50 lbs - Bricks, cement, mortar, hardwood flooring.", "description": "35-50 lbs - Bricks, cement, mortar, hardwood flooring."}, {"enum": ["CODE_50"], "title": "Over 50 lbs - Fits on standard shrink-wrapped 4X4 pallet, very durable.", "description": "Over 50 lbs - Fits on standard shrink-wrapped 4X4 pallet, very durable."}], "description": "Enumeration of shipping freight classes, broadly categorized as weight range per cubic foot. E.g., class 500 is used to represent freight with a weight density of 0-1 lbs per cubic foot."}, "palletInfo": {"type": ["object", "string", "null"], "properties": {"weight": {"type": ["object", "string", "null"], "description": "An input for weight measurements"}}, "description": "An input for information required to process palletized shipping units"}, "groupIdentifier": {"type": ["object", "string", "null"], "title": "PositiveInt", "description": "The `PositiveInt` scalar type represents non-fractional signed whole\n    numeric values. PositiveInt can represent values between 1 and 2^31 - 1\n    inclusive"}, "sequenceIdentifier": {"type": ["object", "string", "null"], "title": "PositiveInt", "description": "The `PositiveInt` scalar type represents non-fractional signed whole\n    numeric values. PositiveInt can represent values between 1 and 2^31 - 1\n    inclusive"}}, "description": "An input representing a shipping unit."}, "description": "The individual shipping units associated with the purchase order.Defaults to the shipping data found in Wayfair's catalog."}, "packageUnits": {"type": "array", "items": {"type": ["object", "string", "null"], "properties": {"unitType": {"type": ["string", "null"], "anyOf": [{"enum": ["CARTON"], "title": "A carton (box) unit.", "description": "A carton (box) unit."}, {"enum": ["BAG"], "title": "A sealed plastic bag unit.", "description": "A sealed plastic bag unit."}, {"enum": ["ROLL"], "title": "A rolled-up unit.", "description": "A rolled-up unit."}, {"enum": ["OTHER"], "title": "Any shipping unit that cannot be defined as a carton, roll, or bag.", "description": "Any shipping unit that cannot be defined as a carton, roll, or bag."}], "description": "The types of packaging units that can be shipped"}, "weight": {"type": ["object", "string", "null"], "properties": {"value": {"type": ["number", "null"], "title": "Float", "description": "The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point)."}, "unit": {"type": ["string", "null"], "anyOf": [{"enum": ["POUNDS"], "title": "Pounds (lbs)", "description": "Pounds (lbs)"}, {"enum": ["KILOGRAMS"], "title": "Kilograms (kg)", "description": "Kilograms (kg)"}], "description": "An enumeration of the different weight units that are supported"}}, "description": "An input for weight measurements"}, "dimensions": {"type": ["object", "string", "null"], "properties": {"length": {"type": ["object", "string", "null"], "description": "An input for 1D-measurements (length and unit)"}, "width": {"type": ["object", "string", "null"], "description": "An input for 1D-measurements (length and unit)"}, "height": {"type": ["object", "string", "null"], "description": "An input for 1D-measurements (length and unit)"}}, "description": "An input for a set of 3D (L x W x H) dimensions"}, "freightClass": {"type": ["string", "null"], "anyOf": [{"enum": ["CODE_500"], "title": "Less than 1 lb - Bags of gold dust, ping pong balls.", "description": "Less than 1 lb - Bags of gold dust, ping pong balls."}, {"enum": ["CODE_400"], "title": "1-2 lbs - Deer antlers.", "description": "1-2 lbs - Deer antlers."}, {"enum": ["CODE_300"], "title": "2-3 lbs - Wood cabinets, tables, chairs setup, model boats.", "description": "2-3 lbs - Wood cabinets, tables, chairs setup, model boats."}, {"enum": ["CODE_250"], "title": "3-4 lbs - Bamboo furniture, mattress and box spring, plasma TV.", "description": "3-4 lbs - Bamboo furniture, mattress and box spring, plasma TV."}, {"enum": ["CODE_200"], "title": "4-5 lbs - Auto sheet metal parts, aircraft parts, aluminum table, packaged mattresses.", "description": "4-5 lbs - Auto sheet metal parts, aircraft parts, aluminum table, packaged mattresses."}, {"enum": ["CODE_175"], "title": "5-6 lbs - Clothing, couches stuffed furniture.", "description": "5-6 lbs - Clothing, couches stuffed furniture."}, {"enum": ["CODE_150"], "title": "6-7 lbs - Auto sheet metal parts, bookcases.", "description": "6-7 lbs - Auto sheet metal parts, bookcases."}, {"enum": ["CODE_125"], "title": "7-8 lbs - Small Household appliances.", "description": "7-8 lbs - Small Household appliances."}, {"enum": ["CODE_110"], "title": "8-9 lbs - Cabinets, framed artwork, table saws.", "description": "8-9 lbs - Cabinets, framed artwork, table saws."}, {"enum": ["CODE_100"], "title": "9-10.5 lbs - Boat covers, car covers, canvas, wine cases, caskets.", "description": "9-10.5 lbs - Boat covers, car covers, canvas, wine cases, caskets."}, {"enum": ["CODE_92_5"], "title": "10.5-12 lbs - Computers, monitors, refrigerators.", "description": "10.5-12 lbs - Computers, monitors, refrigerators."}, {"enum": ["CODE_85"], "title": "12-13.5 lbs - Crated machinery, cast iron stoves.", "description": "12-13.5 lbs - Crated machinery, cast iron stoves."}, {"enum": ["CODE_77_5"], "title": "13.5-15 lbs - Tires, bathroom fixtures.", "description": "13.5-15 lbs - Tires, bathroom fixtures."}, {"enum": ["CODE_70"], "title": "15-22.5 lbs - Car accessories & car parts, food items, automobile engines.", "description": "15-22.5 lbs - Car accessories & car parts, food items, automobile engines."}, {"enum": ["CODE_65"], "title": "22.5-30 lbs - Car accessories & car parts, bottled beverages, books in boxes.", "description": "22.5-30 lbs - Car accessories & car parts, bottled beverages, books in boxes."}, {"enum": ["CODE_60"], "title": "30-35 lbs - Car accessories & car parts.", "description": "30-35 lbs - Car accessories & car parts."}, {"enum": ["CODE_55"], "title": "35-50 lbs - Bricks, cement, mortar, hardwood flooring.", "description": "35-50 lbs - Bricks, cement, mortar, hardwood flooring."}, {"enum": ["CODE_50"], "title": "Over 50 lbs - Fits on standard shrink-wrapped 4X4 pallet, very durable.", "description": "Over 50 lbs - Fits on standard shrink-wrapped 4X4 pallet, very durable."}], "description": "Enumeration of shipping freight classes, broadly categorized as weight range per cubic foot. E.g., class 500 is used to represent freight with a weight density of 0-1 lbs per cubic foot."}, "containedParts": {"type": "array", "items": {"type": ["object", "string", "null"], "properties": {"partNumber": {"type": ["object", "string", "null"], "title": "NonEmptyString", "description": "The `NonEmptyString` scalar type represents a non-empty string"}, "groupIdentifier": {"type": ["object", "string", "null"], "title": "PositiveInt", "description": "The `PositiveInt` scalar type represents non-fractional signed whole\n    numeric values. PositiveInt can represent values between 1 and 2^31 - 1\n    inclusive"}}, "description": "An input representing a product part that is packaged for shipping."}, "description": "The products that should be in a single package."}}, "description": "An input representing a shipping package unit."}, "description": "The individual package units associated with the purchase order.Meaning of this field is the same as the shippingUnits, only the structure is different."}}, "description": "An input for registering package shipments with Wayfair"}, "ShippingUnitInput": {"type": ["object", "string", "null"], "properties": {"partNumber": {"type": ["object", "string", "null"], "title": "NonEmptyString", "description": "The `NonEmptyString` scalar type represents a non-empty string"}, "unitType": {"type": ["string", "null"], "anyOf": [{"enum": ["CARTON"], "title": "A carton (box) unit.", "description": "A carton (box) unit."}, {"enum": ["BAG"], "title": "A sealed plastic bag unit.", "description": "A sealed plastic bag unit."}, {"enum": ["ROLL"], "title": "A rolled-up unit.", "description": "A rolled-up unit."}, {"enum": ["OTHER"], "title": "Any shipping unit that cannot be defined as a carton, roll, or bag.", "description": "Any shipping unit that cannot be defined as a carton, roll, or bag."}], "description": "The types of packaging units that can be shipped"}, "weight": {"type": ["object", "string", "null"], "properties": {"value": {"type": ["number", "null"], "title": "Float", "description": "The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point)."}, "unit": {"type": ["string", "null"], "anyOf": [{"enum": ["POUNDS"], "title": "Pounds (lbs)", "description": "Pounds (lbs)"}, {"enum": ["KILOGRAMS"], "title": "Kilograms (kg)", "description": "Kilograms (kg)"}], "description": "An enumeration of the different weight units that are supported"}}, "description": "An input for weight measurements"}, "dimensions": {"type": ["object", "string", "null"], "properties": {"length": {"type": ["object", "string", "null"], "properties": {"value": {"type": ["number", "null"], "title": "Float", "description": "The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point)."}, "unit": {"type": ["string", "null"], "anyOf": [{"enum": ["INCHES"], "title": "Inches", "description": "Inches"}, {"enum": ["CENTIMETERS"], "title": "Centimeters", "description": "Centimeters"}], "description": "Units that can be used to measure a length"}}, "description": "An input for 1D-measurements (length and unit)"}, "width": {"type": ["object", "string", "null"], "properties": {"value": {"type": ["number", "null"], "title": "Float", "description": "The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point)."}, "unit": {"type": ["string", "null"], "anyOf": [{"enum": ["INCHES"], "title": "Inches", "description": "Inches"}, {"enum": ["CENTIMETERS"], "title": "Centimeters", "description": "Centimeters"}], "description": "Units that can be used to measure a length"}}, "description": "An input for 1D-measurements (length and unit)"}, "height": {"type": ["object", "string", "null"], "properties": {"value": {"type": ["number", "null"], "title": "Float", "description": "The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point)."}, "unit": {"type": ["string", "null"], "anyOf": [{"enum": ["INCHES"], "title": "Inches", "description": "Inches"}, {"enum": ["CENTIMETERS"], "title": "Centimeters", "description": "Centimeters"}], "description": "Units that can be used to measure a length"}}, "description": "An input for 1D-measurements (length and unit)"}}, "description": "An input for a set of 3D (L x W x H) dimensions"}, "freightClass": {"type": ["string", "null"], "anyOf": [{"enum": ["CODE_500"], "title": "Less than 1 lb - Bags of gold dust, ping pong balls.", "description": "Less than 1 lb - Bags of gold dust, ping pong balls."}, {"enum": ["CODE_400"], "title": "1-2 lbs - Deer antlers.", "description": "1-2 lbs - Deer antlers."}, {"enum": ["CODE_300"], "title": "2-3 lbs - Wood cabinets, tables, chairs setup, model boats.", "description": "2-3 lbs - Wood cabinets, tables, chairs setup, model boats."}, {"enum": ["CODE_250"], "title": "3-4 lbs - Bamboo furniture, mattress and box spring, plasma TV.", "description": "3-4 lbs - Bamboo furniture, mattress and box spring, plasma TV."}, {"enum": ["CODE_200"], "title": "4-5 lbs - Auto sheet metal parts, aircraft parts, aluminum table, packaged mattresses.", "description": "4-5 lbs - Auto sheet metal parts, aircraft parts, aluminum table, packaged mattresses."}, {"enum": ["CODE_175"], "title": "5-6 lbs - Clothing, couches stuffed furniture.", "description": "5-6 lbs - Clothing, couches stuffed furniture."}, {"enum": ["CODE_150"], "title": "6-7 lbs - Auto sheet metal parts, bookcases.", "description": "6-7 lbs - Auto sheet metal parts, bookcases."}, {"enum": ["CODE_125"], "title": "7-8 lbs - Small Household appliances.", "description": "7-8 lbs - Small Household appliances."}, {"enum": ["CODE_110"], "title": "8-9 lbs - Cabinets, framed artwork, table saws.", "description": "8-9 lbs - Cabinets, framed artwork, table saws."}, {"enum": ["CODE_100"], "title": "9-10.5 lbs - Boat covers, car covers, canvas, wine cases, caskets.", "description": "9-10.5 lbs - Boat covers, car covers, canvas, wine cases, caskets."}, {"enum": ["CODE_92_5"], "title": "10.5-12 lbs - Computers, monitors, refrigerators.", "description": "10.5-12 lbs - Computers, monitors, refrigerators."}, {"enum": ["CODE_85"], "title": "12-13.5 lbs - Crated machinery, cast iron stoves.", "description": "12-13.5 lbs - Crated machinery, cast iron stoves."}, {"enum": ["CODE_77_5"], "title": "13.5-15 lbs - Tires, bathroom fixtures.", "description": "13.5-15 lbs - Tires, bathroom fixtures."}, {"enum": ["CODE_70"], "title": "15-22.5 lbs - Car accessories & car parts, food items, automobile engines.", "description": "15-22.5 lbs - Car accessories & car parts, food items, automobile engines."}, {"enum": ["CODE_65"], "title": "22.5-30 lbs - Car accessories & car parts, bottled beverages, books in boxes.", "description": "22.5-30 lbs - Car accessories & car parts, bottled beverages, books in boxes."}, {"enum": ["CODE_60"], "title": "30-35 lbs - Car accessories & car parts.", "description": "30-35 lbs - Car accessories & car parts."}, {"enum": ["CODE_55"], "title": "35-50 lbs - Bricks, cement, mortar, hardwood flooring.", "description": "35-50 lbs - Bricks, cement, mortar, hardwood flooring."}, {"enum": ["CODE_50"], "title": "Over 50 lbs - Fits on standard shrink-wrapped 4X4 pallet, very durable.", "description": "Over 50 lbs - Fits on standard shrink-wrapped 4X4 pallet, very durable."}], "description": "Enumeration of shipping freight classes, broadly categorized as weight range per cubic foot. E.g., class 500 is used to represent freight with a weight density of 0-1 lbs per cubic foot."}, "palletInfo": {"type": ["object", "string", "null"], "properties": {"weight": {"type": ["object", "string", "null"], "properties": {"value": {"type": ["number", "null"], "title": "Float", "description": "The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point)."}, "unit": {"type": ["string", "null"], "anyOf": [{"enum": ["POUNDS"], "title": "Pounds (lbs)", "description": "Pounds (lbs)"}, {"enum": ["KILOGRAMS"], "title": "Kilograms (kg)", "description": "Kilograms (kg)"}], "description": "An enumeration of the different weight units that are supported"}}, "description": "An input for weight measurements"}}, "description": "An input for information required to process palletized shipping units"}, "groupIdentifier": {"type": ["object", "string", "null"], "title": "PositiveInt", "description": "The `PositiveInt` scalar type represents non-fractional signed whole\n    numeric values. PositiveInt can represent values between 1 and 2^31 - 1\n    inclusive"}, "sequenceIdentifier": {"type": ["object", "string", "null"], "title": "PositiveInt", "description": "The `PositiveInt` scalar type represents non-fractional signed whole\n    numeric values. PositiveInt can represent values between 1 and 2^31 - 1\n    inclusive"}}, "description": "An input representing a shipping unit."}, "NonEmptyString": {"type": ["object", "string", "null"], "title": "NonEmptyString", "description": "The `NonEmptyString` scalar type represents a non-empty string"}, "ShippingUnitType": {"type": ["string", "null"], "anyOf": [{"enum": ["CARTON"], "title": "A carton (box) unit.", "description": "A carton (box) unit."}, {"enum": ["BAG"], "title": "A sealed plastic bag unit.", "description": "A sealed plastic bag unit."}, {"enum": ["ROLL"], "title": "A rolled-up unit.", "description": "A rolled-up unit."}, {"enum": ["OTHER"], "title": "Any shipping unit that cannot be defined as a carton, roll, or bag.", "description": "Any shipping unit that cannot be defined as a carton, roll, or bag."}], "description": "The types of packaging units that can be shipped"}, "WeightInput": {"type": ["object", "string", "null"], "properties": {"value": {"type": ["number", "null"], "title": "Float", "description": "The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point)."}, "unit": {"type": ["string", "null"], "anyOf": [{"enum": ["POUNDS"], "title": "Pounds (lbs)", "description": "Pounds (lbs)"}, {"enum": ["KILOGRAMS"], "title": "Kilograms (kg)", "description": "Kilograms (kg)"}], "description": "An enumeration of the different weight units that are supported"}}, "description": "An input for weight measurements"}, "WeightUnit": {"type": ["string", "null"], "anyOf": [{"enum": ["POUNDS"], "title": "Pounds (lbs)", "description": "Pounds (lbs)"}, {"enum": ["KILOGRAMS"], "title": "Kilograms (kg)", "description": "Kilograms (kg)"}], "description": "An enumeration of the different weight units that are supported"}, "DimensionInput": {"type": ["object", "string", "null"], "properties": {"length": {"type": ["object", "string", "null"], "properties": {"value": {"type": ["number", "null"], "title": "Float", "description": "The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point)."}, "unit": {"type": ["string", "null"], "anyOf": [{"enum": ["INCHES"], "title": "Inches", "description": "Inches"}, {"enum": ["CENTIMETERS"], "title": "Centimeters", "description": "Centimeters"}], "description": "Units that can be used to measure a length"}}, "description": "An input for 1D-measurements (length and unit)"}, "width": {"type": ["object", "string", "null"], "properties": {"value": {"type": ["number", "null"], "title": "Float", "description": "The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point)."}, "unit": {"type": ["string", "null"], "anyOf": [{"enum": ["INCHES"], "title": "Inches", "description": "Inches"}, {"enum": ["CENTIMETERS"], "title": "Centimeters", "description": "Centimeters"}], "description": "Units that can be used to measure a length"}}, "description": "An input for 1D-measurements (length and unit)"}, "height": {"type": ["object", "string", "null"], "properties": {"value": {"type": ["number", "null"], "title": "Float", "description": "The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point)."}, "unit": {"type": ["string", "null"], "anyOf": [{"enum": ["INCHES"], "title": "Inches", "description": "Inches"}, {"enum": ["CENTIMETERS"], "title": "Centimeters", "description": "Centimeters"}], "description": "Units that can be used to measure a length"}}, "description": "An input for 1D-measurements (length and unit)"}}, "description": "An input for a set of 3D (L x W x H) dimensions"}, "MeasurementInput": {"type": ["object", "string", "null"], "properties": {"value": {"type": ["number", "null"], "title": "Float", "description": "The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point)."}, "unit": {"type": ["string", "null"], "anyOf": [{"enum": ["INCHES"], "title": "Inches", "description": "Inches"}, {"enum": ["CENTIMETERS"], "title": "Centimeters", "description": "Centimeters"}], "description": "Units that can be used to measure a length"}}, "description": "An input for 1D-measurements (length and unit)"}, "LengthUnit": {"type": ["string", "null"], "anyOf": [{"enum": ["INCHES"], "title": "Inches", "description": "Inches"}, {"enum": ["CENTIMETERS"], "title": "Centimeters", "description": "Centimeters"}], "description": "Units that can be used to measure a length"}, "FreightClass": {"type": ["string", "null"], "anyOf": [{"enum": ["CODE_500"], "title": "Less than 1 lb - Bags of gold dust, ping pong balls.", "description": "Less than 1 lb - Bags of gold dust, ping pong balls."}, {"enum": ["CODE_400"], "title": "1-2 lbs - Deer antlers.", "description": "1-2 lbs - Deer antlers."}, {"enum": ["CODE_300"], "title": "2-3 lbs - Wood cabinets, tables, chairs setup, model boats.", "description": "2-3 lbs - Wood cabinets, tables, chairs setup, model boats."}, {"enum": ["CODE_250"], "title": "3-4 lbs - Bamboo furniture, mattress and box spring, plasma TV.", "description": "3-4 lbs - Bamboo furniture, mattress and box spring, plasma TV."}, {"enum": ["CODE_200"], "title": "4-5 lbs - Auto sheet metal parts, aircraft parts, aluminum table, packaged mattresses.", "description": "4-5 lbs - Auto sheet metal parts, aircraft parts, aluminum table, packaged mattresses."}, {"enum": ["CODE_175"], "title": "5-6 lbs - Clothing, couches stuffed furniture.", "description": "5-6 lbs - Clothing, couches stuffed furniture."}, {"enum": ["CODE_150"], "title": "6-7 lbs - Auto sheet metal parts, bookcases.", "description": "6-7 lbs - Auto sheet metal parts, bookcases."}, {"enum": ["CODE_125"], "title": "7-8 lbs - Small Household appliances.", "description": "7-8 lbs - Small Household appliances."}, {"enum": ["CODE_110"], "title": "8-9 lbs - Cabinets, framed artwork, table saws.", "description": "8-9 lbs - Cabinets, framed artwork, table saws."}, {"enum": ["CODE_100"], "title": "9-10.5 lbs - Boat covers, car covers, canvas, wine cases, caskets.", "description": "9-10.5 lbs - Boat covers, car covers, canvas, wine cases, caskets."}, {"enum": ["CODE_92_5"], "title": "10.5-12 lbs - Computers, monitors, refrigerators.", "description": "10.5-12 lbs - Computers, monitors, refrigerators."}, {"enum": ["CODE_85"], "title": "12-13.5 lbs - Crated machinery, cast iron stoves.", "description": "12-13.5 lbs - Crated machinery, cast iron stoves."}, {"enum": ["CODE_77_5"], "title": "13.5-15 lbs - Tires, bathroom fixtures.", "description": "13.5-15 lbs - Tires, bathroom fixtures."}, {"enum": ["CODE_70"], "title": "15-22.5 lbs - Car accessories & car parts, food items, automobile engines.", "description": "15-22.5 lbs - Car accessories & car parts, food items, automobile engines."}, {"enum": ["CODE_65"], "title": "22.5-30 lbs - Car accessories & car parts, bottled beverages, books in boxes.", "description": "22.5-30 lbs - Car accessories & car parts, bottled beverages, books in boxes."}, {"enum": ["CODE_60"], "title": "30-35 lbs - Car accessories & car parts.", "description": "30-35 lbs - Car accessories & car parts."}, {"enum": ["CODE_55"], "title": "35-50 lbs - Bricks, cement, mortar, hardwood flooring.", "description": "35-50 lbs - Bricks, cement, mortar, hardwood flooring."}, {"enum": ["CODE_50"], "title": "Over 50 lbs - Fits on standard shrink-wrapped 4X4 pallet, very durable.", "description": "Over 50 lbs - Fits on standard shrink-wrapped 4X4 pallet, very durable."}], "description": "Enumeration of shipping freight classes, broadly categorized as weight range per cubic foot. E.g., class 500 is used to represent freight with a weight density of 0-1 lbs per cubic foot."}, "PalletInput": {"type": ["object", "string", "null"], "properties": {"weight": {"type": ["object", "string", "null"], "properties": {"value": {"type": ["number", "null"], "title": "Float", "description": "The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point)."}, "unit": {"type": ["string", "null"], "anyOf": [{"enum": ["POUNDS"], "title": "Pounds (lbs)", "description": "Pounds (lbs)"}, {"enum": ["KILOGRAMS"], "title": "Kilograms (kg)", "description": "Kilograms (kg)"}], "description": "An enumeration of the different weight units that are supported"}}, "description": "An input for weight measurements"}}, "description": "An input for information required to process palletized shipping units"}, "PackageUnit": {"type": ["object", "string", "null"], "properties": {"unitType": {"type": ["string", "null"], "anyOf": [{"enum": ["CARTON"], "title": "A carton (box) unit.", "description": "A carton (box) unit."}, {"enum": ["BAG"], "title": "A sealed plastic bag unit.", "description": "A sealed plastic bag unit."}, {"enum": ["ROLL"], "title": "A rolled-up unit.", "description": "A rolled-up unit."}, {"enum": ["OTHER"], "title": "Any shipping unit that cannot be defined as a carton, roll, or bag.", "description": "Any shipping unit that cannot be defined as a carton, roll, or bag."}], "description": "The types of packaging units that can be shipped"}, "weight": {"type": ["object", "string", "null"], "properties": {"value": {"type": ["number", "null"], "title": "Float", "description": "The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point)."}, "unit": {"type": ["string", "null"], "anyOf": [{"enum": ["POUNDS"], "title": "Pounds (lbs)", "description": "Pounds (lbs)"}, {"enum": ["KILOGRAMS"], "title": "Kilograms (kg)", "description": "Kilograms (kg)"}], "description": "An enumeration of the different weight units that are supported"}}, "description": "An input for weight measurements"}, "dimensions": {"type": ["object", "string", "null"], "properties": {"length": {"type": ["object", "string", "null"], "properties": {"value": {"type": ["number", "null"], "title": "Float", "description": "The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point)."}, "unit": {"type": ["string", "null"], "anyOf": [{"enum": ["INCHES"], "title": "Inches", "description": "Inches"}, {"enum": ["CENTIMETERS"], "title": "Centimeters", "description": "Centimeters"}], "description": "Units that can be used to measure a length"}}, "description": "An input for 1D-measurements (length and unit)"}, "width": {"type": ["object", "string", "null"], "properties": {"value": {"type": ["number", "null"], "title": "Float", "description": "The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point)."}, "unit": {"type": ["string", "null"], "anyOf": [{"enum": ["INCHES"], "title": "Inches", "description": "Inches"}, {"enum": ["CENTIMETERS"], "title": "Centimeters", "description": "Centimeters"}], "description": "Units that can be used to measure a length"}}, "description": "An input for 1D-measurements (length and unit)"}, "height": {"type": ["object", "string", "null"], "properties": {"value": {"type": ["number", "null"], "title": "Float", "description": "The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point)."}, "unit": {"type": ["string", "null"], "anyOf": [{"enum": ["INCHES"], "title": "Inches", "description": "Inches"}, {"enum": ["CENTIMETERS"], "title": "Centimeters", "description": "Centimeters"}], "description": "Units that can be used to measure a length"}}, "description": "An input for 1D-measurements (length and unit)"}}, "description": "An input for a set of 3D (L x W x H) dimensions"}, "freightClass": {"type": ["string", "null"], "anyOf": [{"enum": ["CODE_500"], "title": "Less than 1 lb - Bags of gold dust, ping pong balls.", "description": "Less than 1 lb - Bags of gold dust, ping pong balls."}, {"enum": ["CODE_400"], "title": "1-2 lbs - Deer antlers.", "description": "1-2 lbs - Deer antlers."}, {"enum": ["CODE_300"], "title": "2-3 lbs - Wood cabinets, tables, chairs setup, model boats.", "description": "2-3 lbs - Wood cabinets, tables, chairs setup, model boats."}, {"enum": ["CODE_250"], "title": "3-4 lbs - Bamboo furniture, mattress and box spring, plasma TV.", "description": "3-4 lbs - Bamboo furniture, mattress and box spring, plasma TV."}, {"enum": ["CODE_200"], "title": "4-5 lbs - Auto sheet metal parts, aircraft parts, aluminum table, packaged mattresses.", "description": "4-5 lbs - Auto sheet metal parts, aircraft parts, aluminum table, packaged mattresses."}, {"enum": ["CODE_175"], "title": "5-6 lbs - Clothing, couches stuffed furniture.", "description": "5-6 lbs - Clothing, couches stuffed furniture."}, {"enum": ["CODE_150"], "title": "6-7 lbs - Auto sheet metal parts, bookcases.", "description": "6-7 lbs - Auto sheet metal parts, bookcases."}, {"enum": ["CODE_125"], "title": "7-8 lbs - Small Household appliances.", "description": "7-8 lbs - Small Household appliances."}, {"enum": ["CODE_110"], "title": "8-9 lbs - Cabinets, framed artwork, table saws.", "description": "8-9 lbs - Cabinets, framed artwork, table saws."}, {"enum": ["CODE_100"], "title": "9-10.5 lbs - Boat covers, car covers, canvas, wine cases, caskets.", "description": "9-10.5 lbs - Boat covers, car covers, canvas, wine cases, caskets."}, {"enum": ["CODE_92_5"], "title": "10.5-12 lbs - Computers, monitors, refrigerators.", "description": "10.5-12 lbs - Computers, monitors, refrigerators."}, {"enum": ["CODE_85"], "title": "12-13.5 lbs - Crated machinery, cast iron stoves.", "description": "12-13.5 lbs - Crated machinery, cast iron stoves."}, {"enum": ["CODE_77_5"], "title": "13.5-15 lbs - Tires, bathroom fixtures.", "description": "13.5-15 lbs - Tires, bathroom fixtures."}, {"enum": ["CODE_70"], "title": "15-22.5 lbs - Car accessories & car parts, food items, automobile engines.", "description": "15-22.5 lbs - Car accessories & car parts, food items, automobile engines."}, {"enum": ["CODE_65"], "title": "22.5-30 lbs - Car accessories & car parts, bottled beverages, books in boxes.", "description": "22.5-30 lbs - Car accessories & car parts, bottled beverages, books in boxes."}, {"enum": ["CODE_60"], "title": "30-35 lbs - Car accessories & car parts.", "description": "30-35 lbs - Car accessories & car parts."}, {"enum": ["CODE_55"], "title": "35-50 lbs - Bricks, cement, mortar, hardwood flooring.", "description": "35-50 lbs - Bricks, cement, mortar, hardwood flooring."}, {"enum": ["CODE_50"], "title": "Over 50 lbs - Fits on standard shrink-wrapped 4X4 pallet, very durable.", "description": "Over 50 lbs - Fits on standard shrink-wrapped 4X4 pallet, very durable."}], "description": "Enumeration of shipping freight classes, broadly categorized as weight range per cubic foot. E.g., class 500 is used to represent freight with a weight density of 0-1 lbs per cubic foot."}, "containedParts": {"type": "array", "items": {"type": ["object", "string", "null"], "properties": {"partNumber": {"type": ["object", "string", "null"], "title": "NonEmptyString", "description": "The `NonEmptyString` scalar type represents a non-empty string"}, "groupIdentifier": {"type": ["object", "string", "null"], "title": "PositiveInt", "description": "The `PositiveInt` scalar type represents non-fractional signed whole\n    numeric values. PositiveInt can represent values between 1 and 2^31 - 1\n    inclusive"}}, "description": "An input representing a product part that is packaged for shipping."}, "description": "The products that should be in a single package."}}, "description": "An input representing a shipping package unit."}, "PackageUnitType": {"type": ["string", "null"], "anyOf": [{"enum": ["CARTON"], "title": "A carton (box) unit.", "description": "A carton (box) unit."}, {"enum": ["BAG"], "title": "A sealed plastic bag unit.", "description": "A sealed plastic bag unit."}, {"enum": ["ROLL"], "title": "A rolled-up unit.", "description": "A rolled-up unit."}, {"enum": ["OTHER"], "title": "Any shipping unit that cannot be defined as a carton, roll, or bag.", "description": "Any shipping unit that cannot be defined as a carton, roll, or bag."}], "description": "The types of packaging units that can be shipped"}, "ContainedPart": {"type": ["object", "string", "null"], "properties": {"partNumber": {"type": ["object", "string", "null"], "title": "NonEmptyString", "description": "The `NonEmptyString` scalar type represents a non-empty string"}, "groupIdentifier": {"type": ["object", "string", "null"], "title": "PositiveInt", "description": "The `PositiveInt` scalar type represents non-fractional signed whole\n    numeric values. PositiveInt can represent values between 1 and 2^31 - 1\n    inclusive"}}, "description": "An input representing a product part that is packaged for shipping."}, "LabelGenerationEvent": {"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "ID", "description": "The `ID` scalar type represents a unique identifier, often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\"4\"`) or integer (such as `4`) input value will be accepted as an ID."}, "eventDate": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "pickupDate": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "poNumber": {"type": ["object", "string", "null"], "title": "Int32", "description": "The `Int32` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1."}, "billOfLading": {"type": ["object", "string", "null"], "properties": {"url": {"type": ["object", "string", "null"], "title": "URL", "description": "A URL as described by IEFT RFC 1738 (https://tools.ietf.org/html/rfc1738)"}}, "description": "Information about a specific Bill of Lading"}, "consolidatedShippingLabel": {"type": ["object", "string", "null"], "properties": {"url": {"type": ["object", "string", "null"], "title": "URL", "description": "A URL as described by IEFT RFC 1738 (https://tools.ietf.org/html/rfc1738)"}}, "description": "Information about a specific shipping label"}, "customsDocument": {"type": ["object", "string", "null"], "properties": {"url": {"type": ["object", "string", "null"], "title": "URL", "description": "A URL as described by IEFT RFC 1738 (https://tools.ietf.org/html/rfc1738)"}}, "description": "Information about a specific customs document"}, "generatedShippingLabels": {"type": "array", "items": {"anyOf": [{"type": ["object", "string", "null"], "properties": {"poNumber": {"type": ["object", "string", "null"], "title": "Int32", "description": "The `Int32` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1."}, "fullPoNumber": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "numberOfLabels": {"type": ["object", "string", "null"], "title": "Int32", "description": "The `Int32` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1."}, "carrier": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "carrierCode": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "trackingNumber": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}}, "description": "Information about generated shipping label"}, {"type": "null"}]}}, "shippingLabelInfo": {"type": "array", "items": {"anyOf": [{"type": ["object", "string", "null"], "properties": {"carrier": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "carrierCode": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "trackingNumber": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}}, "description": "Interface for a Shipping Label - this contains all the common properties a label should have."}, {"type": "null"}]}}, "purchaseOrder": {"type": ["object", "string", "null"], "properties": {"id": {"type": ["number", "null"], "title": "Int", "description": "The `Int` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1."}, "storePrefix": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "poNumber": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "poDate": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "supplierId": {"type": ["number", "null"], "title": "Int", "description": "The `Int` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1."}, "supplierName": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "supplierAddress1": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "supplierAddress2": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "supplierAddress3": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "supplierCity": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "supplierState": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "supplierPostalCode": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "estimatedShipDate": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "scheduledDeliveryDate": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "deliveryMethodCode": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "customerName": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "customerAddress1": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "customerAddress2": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "customerCity": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "customerState": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "customerPostalCode": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "customerCountry": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "salesChannelName": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "orderType": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "shippingInfo": {"type": ["object", "string", "null"], "properties": {"shipSpeed": {"type": ["string", "null"], "anyOf": [{"enum": ["SECOND_DAY_AIR"], "title": "2nd Day Air Delivery", "description": "2nd Day Air Delivery"}, {"enum": ["SECOND_DAY_AIR_FREE"], "title": "2-Day Delivery -- Free!", "description": "2-Day Delivery -- Free!"}, {"enum": ["FIVE_DAY_DIRECT"], "title": "Global 5-Day Direct Delivery", "description": "Global 5-Day Direct Delivery"}, {"enum": ["THREE_DAY"], "title": "3 Day Delivery", "description": "3 Day Delivery"}, {"enum": ["CONTAINER"], "title": "Container", "description": "Container"}, {"enum": ["EMAIL"], "title": "Zustellung per Email", "description": "Zustellung per Email"}, {"enum": ["FEDEX_HOME"], "title": "FedEx Home Delivery", "description": "FedEx Home Delivery"}, {"enum": ["GROUND"], "title": "Small Parcel Courier", "description": "Small Parcel Courier"}, {"enum": ["PAKETVERSAND"], "title": "Small Parcel Courier", "description": "Small Parcel Courier"}, {"enum": ["IMPERIAL_POOL_FREIGHT"], "title": "Imperial Pool Freight", "description": "Imperial Pool Freight"}, {"enum": ["NEXT_DAY"], "title": "Next Day Air", "description": "Next Day Air"}, {"enum": ["NEXT_DAY_OVERSEAS"], "title": "Next Day Air (AK,HI,PR)", "description": "Next Day Air (AK,HI,PR)"}, {"enum": ["NEXT_MORNING"], "title": "UK - SP - Next day before noon", "description": "UK - SP - Next day before noon"}, {"enum": ["NEXT_DAY_BEFORE_NINE"], "title": "UK - SP - Next day before 9am", "description": "UK - SP - Next day before 9am"}, {"enum": ["WILL_CALL"], "title": "Will Call", "description": "Will Call"}, {"enum": ["SATURDAY_DELIVERY"], "title": "UK - SP - Saturday delivery", "description": "UK - SP - Saturday delivery"}, {"enum": ["TRUCK_FREIGHT_CASKETS_ONE_DAY"], "title": "Casket Delivery - 1 Day", "description": "Casket Delivery - 1 Day"}, {"enum": ["TRUCK_FREIGHT_CASKETS_TWO_DAY"], "title": "Casket Delivery - 2 Day", "description": "Casket Delivery - 2 Day"}, {"enum": ["CURBSIDE_WITH_UNLOAD"], "title": "Curbside with unload service", "description": "Curbside with unload service"}, {"enum": ["TRUCK_LOAD"], "title": "Truck Load", "description": "Truck Load"}, {"enum": ["CURBSIDE"], "title": "Curbside without unload service", "description": "Curbside without unload service"}, {"enum": ["WHITE_GLOVE_BRONZE"], "title": "Spedition - frei Bordsteinkante", "description": "Spedition - frei Bordsteinkante"}, {"enum": ["WHITE_GLOVE_GOLD"], "title": "Room of Choice & Packaging Removal", "description": "Room of Choice & Packaging Removal"}, {"enum": ["WHITE_GLOVE_TWO_MAN"], "title": "Premium 2-Man Delivery", "description": "Premium 2-Man Delivery"}, {"enum": ["WHITE_GLOVE_PLATINUM"], "title": "Room of Choice Delivery with Installation", "description": "Room of Choice Delivery with Installation"}, {"enum": ["WHITE_GLOVE_SILVER"], "title": "Room of Choice", "description": "Room of Choice"}, {"enum": ["TRUCK_FREIGHT_THRESHOLD"], "title": "Truck Freight - Threshold", "description": "Truck Freight - Threshold"}, {"enum": ["STANDARD_VERSAND_SPERRGUT"], "title": "Standard-Versand Sperrgut", "description": "Standard-Versand Sperrgut"}, {"enum": ["ALMO"], "title": "ALMO - Room of Choice + Removal of Old Appliance", "description": "ALMO - Room of Choice + Removal of Old Appliance"}, {"enum": ["LARGE_PARCEL_COURIER"], "title": "Large Parcel Courier", "description": "Large Parcel Courier"}, {"enum": ["EUROPEAN_LINE_HAUL"], "title": "European Line Haul", "description": "European Line Haul"}, {"enum": ["ECONOMY"], "title": "Economy", "description": "Economy"}, {"enum": ["WHITE_GLOVE_ROOM_OF_CHOICE"], "title": "White Glove Delivery - Room of Choice", "description": "White Glove Delivery - Room of Choice"}, {"enum": ["TINY_PARCEL"], "title": "Small Parcel", "description": "Small Parcel"}, {"enum": ["GROUND_OVERSEA"], "title": "GROUND (AK,HI,PR)", "description": "GROUND (AK,HI,PR)"}, {"enum": ["LOW_COST_CARRIER"], "title": "Low Cost Carrier", "description": "Low Cost Carrier"}, {"enum": ["WHITE_GLOVE_INNOVEL"], "title": "Innovel Delivery Service", "description": "Innovel Delivery Service"}, {"enum": ["BACKYARD"], "title": "Backyard Drop-Off", "description": "Backyard Drop-Off"}, {"enum": ["CURBSIDE_DELIVERY"], "title": "Curbside Delivery", "description": "Curbside Delivery"}, {"enum": ["INSIDE_DELIVERY_PACKAGING_REMOVAL_REMOVAL_OF_OLD_APPLIANCE"], "title": "Inside Delivery - Packaging Removal & Removal of Old Appliance", "description": "Inside Delivery - Packaging Removal & Removal of Old Appliance"}, {"enum": ["ONE_MAN_PREMIUM"], "title": "One Man Premium", "description": "One Man Premium"}, {"enum": ["INSIDE_DELIVERY_PACKAGING_REMOVAL"], "title": "Inside Delivery - Packaging Removal", "description": "Inside Delivery - Packaging Removal"}, {"enum": ["THRESHOLD_DELIVERY"], "title": "Threshold Delivery", "description": "Threshold Delivery"}, {"enum": ["UK_1_MAN_48HRS"], "title": "Large Parcel Courier", "description": "Large Parcel Courier"}, {"enum": ["ALLIED_ROAD_EXPRESS"], "title": "Allied Road Express", "description": "Allied Road Express"}, {"enum": ["HUNTER_ROAD_EXPRESS"], "title": "Hunter Road Express", "description": "Hunter Road Express"}, {"enum": ["WHITE_GLOVE_CAPITAL_CITIES"], "title": "White Glove - Capital Cities", "description": "White Glove - Capital Cities"}, {"enum": ["SPEDITION_FREI_BORDSTEINKANTE"], "title": "Spedition - frei Bordsteinkante", "description": "Spedition - frei Bordsteinkante"}, {"enum": ["UK_1_MAN_LONG_DELIVERY"], "title": "Large Parcel Courier", "description": "Large Parcel Courier"}, {"enum": ["IN_HOME_MATTRESS_SET_UP_REMOVAL"], "title": "In Home Mattress Set Up & Removal", "description": "In Home Mattress Set Up & Removal"}, {"enum": ["WHITE_GLOVE_DELIVERY_ROOM_OF_CHOICE_W_INSTALLATION"], "title": "Room of Choice Delivery w/ Installation", "description": "Room of Choice Delivery w/ Installation"}, {"enum": ["WHITE_GLOVE_DELIVERY_ROOM_OF_CHOICE_W_INSTALLATION_HAUL_AWAY"], "title": "Room of Choice Delivery w/ Installation & Haul Away", "description": "Room of Choice Delivery w/ Installation & Haul Away"}, {"enum": ["WHITE_GLOVE_DELIVERY_ROOM_OF_CHOICE_W_HAUL_AWAY"], "title": "Room of Choice Delivery w/ Haul Away", "description": "Room of Choice Delivery w/ Haul Away"}, {"enum": ["ROOM_OF_CHOICE_DELIVERY_W_MOVE_TO_ANOTHER_ROOM"], "title": "Room of Choice Delivery w/ Move to Another Room", "description": "Room of Choice Delivery w/ Move to Another Room"}, {"enum": ["ROOM_OF_CHOICE_DELIVERY_W_INSTALL_MOVE_TO_ANOTHER_ROOM"], "title": "Room of Choice Delivery w/ Install & Move to Another Room", "description": "Room of Choice Delivery w/ Install & Move to Another Room"}, {"enum": ["GE_WG_DELIVERY"], "title": "Room of Choice Delivery", "description": "Room of Choice Delivery"}, {"enum": ["SAMSUNG_WG_DELIVERY"], "title": "Samsung Delivery Service", "description": "Samsung Delivery Service"}, {"enum": ["WAYFAIR_LARGE_APPLIANCES_DELIVERY"], "title": "Wayfair Large Appliances Delivery", "description": "Wayfair Large Appliances Delivery"}, {"enum": ["WAYFAIR_OFF_THE_SHELF"], "title": "Off The Shelf Item", "description": "Off The Shelf Item"}], "description": "The different ship speed delivery methods."}, "carrierCode": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "poolPointAgent": {"type": ["object", "string", "null"], "description": "A transportation agent"}, "crossDockAgent": {"type": ["object", "string", "null"], "description": "A transportation agent"}, "deliveryAgent": {"type": ["object", "string", "null"], "description": "A transportation agent"}}, "description": "Shipping information related to a purchase order"}, "packingSlipUrl": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "warehouse": {"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "ID", "description": "The `ID` scalar type represents a unique identifier, often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\"4\"`) or integer (such as `4`) input value will be accepted as an ID."}, "name": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "address": {"type": ["object", "string", "null"], "description": "An address"}, "supplier": {"type": ["object", "string", "null"], "description": "A supplier entity."}}, "description": "Information for a supplier warehouse"}, "products": {"type": "array", "items": {"anyOf": [{"type": ["object", "string", "null"], "properties": {"partNumber": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "quantity": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "price": {"type": ["number", "null"], "title": "Float", "description": "The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point)."}, "pieceCount": {"type": ["number", "null"], "title": "Int", "description": "The `Int` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1."}, "totalCost": {"type": ["number", "null"], "title": "Float", "description": "The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point)."}, "name": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "weight": {"type": ["number", "null"], "title": "Float", "description": "The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point)."}, "totalWeight": {"type": ["number", "null"], "title": "Float", "description": "The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point)."}, "estShipDate": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "fillDate": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "sku": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "isCancelled": {"type": ["boolean", "null"], "title": "Boolean", "description": "The `Boolean` scalar type represents `true` or `false`."}, "isTscaCompliant": {"type": ["boolean", "null"], "title": "Boolean", "description": "The `Boolean` scalar type represents `true` or `false`."}, "twoDayGuaranteeDeliveryDeadline": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "event": {"type": ["object", "string", "null"], "description": "A sales event hosted on Wayfair's storefront websites"}, "customComment": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}}, "description": "A purchase order product."}, {"type": "null"}]}}, "shipTo": {"type": ["object", "string", "null"], "properties": {"name": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "address1": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "address2": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "address3": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "city": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "state": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "country": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "postalCode": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "phoneNumber": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}}, "description": "An address"}, "billTo": {"type": ["object", "string", "null"], "properties": {"name": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "address1": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "address2": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "address3": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "city": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "state": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "country": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "postalCode": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "phoneNumber": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}}, "description": "An address"}, "billingInfo": {"type": ["object", "string", "null"], "properties": {"vatNumber": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}}, "description": "Billing information"}}, "description": "A purchase order."}, "shippingUnits": {"type": "array", "items": {"type": ["object", "string", "null"], "properties": {"groupIdentifier": {"type": ["object", "string", "null"], "title": "PositiveInt", "description": "The `PositiveInt` scalar type represents non-fractional signed whole\n    numeric values. PositiveInt can represent values between 1 and 2^31 - 1\n    inclusive"}, "sequenceIdentifier": {"type": ["object", "string", "null"], "title": "PositiveInt", "description": "The `PositiveInt` scalar type represents non-fractional signed whole\n    numeric values. PositiveInt can represent values between 1 and 2^31 - 1\n    inclusive"}, "part": {"type": ["object", "string", "null"], "properties": {"upc": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "supplierPartNumber": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "manufacturerModelNumber": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "leadTime": {"type": ["number", "null"], "title": "Int", "description": "The `Int` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1."}, "replacementPartLeadTime": {"type": ["number", "null"], "title": "Int", "description": "The `Int` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1."}, "mapPrice": {"type": ["object", "string", "null"], "description": "Some amount of money"}, "retailPrice": {"type": ["object", "string", "null"], "description": "Some amount of money"}, "products": {"type": "array", "items": {"type": ["object", "string", "null"], "description": "A purchasable product listed on Wayfair's site with all of its attributes and option specific information"}}, "supplier": {"type": ["object", "string", "null"], "description": "A supplier entity."}, "manufacturer": {"type": ["object", "string", "null"], "description": "A manufacturer of a product"}, "manufacturerPartId": {"type": ["object", "string", "null"], "title": "Int32", "description": "The `Int32` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1."}}, "description": "Information about a product that a specific supplier has provided."}}, "description": "A unit that is being shipped out. In this sense, a unit is a single quantity of a single product part in a single box"}}}, "description": "This type includes all the information that resulted from the generation of labels for a purchase order."}, "BillOfLading": {"type": ["object", "string", "null"], "properties": {"url": {"type": ["object", "string", "null"], "title": "URL", "description": "A URL as described by IEFT RFC 1738 (https://tools.ietf.org/html/rfc1738)"}}, "description": "Information about a specific Bill of Lading"}, "URL": {"type": ["object", "string", "null"], "title": "URL", "description": "A URL as described by IEFT RFC 1738 (https://tools.ietf.org/html/rfc1738)"}, "ShippingLabel": {"type": ["object", "string", "null"], "properties": {"url": {"type": ["object", "string", "null"], "title": "URL", "description": "A URL as described by IEFT RFC 1738 (https://tools.ietf.org/html/rfc1738)"}}, "description": "Information about a specific shipping label"}, "CustomsDocument": {"type": ["object", "string", "null"], "properties": {"url": {"type": ["object", "string", "null"], "title": "URL", "description": "A URL as described by IEFT RFC 1738 (https://tools.ietf.org/html/rfc1738)"}}, "description": "Information about a specific customs document"}, "ShippingLabelInfo": {"type": ["object", "string", "null"], "properties": {"poNumber": {"type": ["object", "string", "null"], "title": "Int32", "description": "The `Int32` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1."}, "fullPoNumber": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "numberOfLabels": {"type": ["object", "string", "null"], "title": "Int32", "description": "The `Int32` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1."}, "carrier": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "carrierCode": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "trackingNumber": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}}, "description": "Information about generated shipping label"}, "ShippingLabelInterface": {"type": ["object", "string", "null"], "properties": {"carrier": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "carrierCode": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "trackingNumber": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}}, "description": "Interface for a Shipping Label - this contains all the common properties a label should have."}, "ShippingUnit": {"type": ["object", "string", "null"], "properties": {"groupIdentifier": {"type": ["object", "string", "null"], "title": "PositiveInt", "description": "The `PositiveInt` scalar type represents non-fractional signed whole\n    numeric values. PositiveInt can represent values between 1 and 2^31 - 1\n    inclusive"}, "sequenceIdentifier": {"type": ["object", "string", "null"], "title": "PositiveInt", "description": "The `PositiveInt` scalar type represents non-fractional signed whole\n    numeric values. PositiveInt can represent values between 1 and 2^31 - 1\n    inclusive"}, "part": {"type": ["object", "string", "null"], "properties": {"upc": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "supplierPartNumber": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "manufacturerModelNumber": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "leadTime": {"type": ["number", "null"], "title": "Int", "description": "The `Int` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1."}, "replacementPartLeadTime": {"type": ["number", "null"], "title": "Int", "description": "The `Int` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1."}, "mapPrice": {"type": ["object", "string", "null"], "properties": {"amount": {"type": ["number", "null"], "title": "Float", "description": "The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point)."}, "currency": {"type": ["string", "null"], "anyOf": [{"enum": ["US_DOLLAR"], "title": "US Dollar", "description": "US Dollar"}, {"enum": ["BRITISH_POUND"], "title": "British Pound", "description": "British Pound"}, {"enum": ["EURO"], "title": "Euro", "description": "Euro"}, {"enum": ["CANADIAN_DOLLAR"], "title": "Canadian Dollar", "description": "Canadian Dollar"}, {"enum": ["AUSTRALIAN_DOLLAR"], "title": "Australian Dollar", "description": "Australian Dollar"}], "description": "Types of currency"}}, "description": "Some amount of money"}, "retailPrice": {"type": ["object", "string", "null"], "properties": {"amount": {"type": ["number", "null"], "title": "Float", "description": "The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point)."}, "currency": {"type": ["string", "null"], "anyOf": [{"enum": ["US_DOLLAR"], "title": "US Dollar", "description": "US Dollar"}, {"enum": ["BRITISH_POUND"], "title": "British Pound", "description": "British Pound"}, {"enum": ["EURO"], "title": "Euro", "description": "Euro"}, {"enum": ["CANADIAN_DOLLAR"], "title": "Canadian Dollar", "description": "Canadian Dollar"}, {"enum": ["AUSTRALIAN_DOLLAR"], "title": "Australian Dollar", "description": "Australian Dollar"}], "description": "Types of currency"}}, "description": "Some amount of money"}, "products": {"type": "array", "items": {"type": ["object", "string", "null"], "properties": {"url": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "imageUrl": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "displayDimensions": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "optionCombination": {"type": "array", "items": {"type": ["object", "string", "null"], "description": "This type contains the essential information about a single product option."}}, "product": {"type": ["object", "string", "null"], "description": "A product that Wayfair has on site."}, "parts": {"type": "array", "items": {"type": ["object", "string", "null"], "description": "Information about a product that a specific supplier has provided."}}}, "description": "A purchasable product listed on Wayfair's site with all of its attributes and option specific information"}}, "supplier": {"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "ID", "description": "The `ID` scalar type represents a unique identifier, often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\"4\"`) or integer (such as `4`) input value will be accepted as an ID."}, "name": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "shortName": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "status": {"type": ["string", "null"], "anyOf": [{"enum": ["ACTIVE"], "title": "Active Status", "description": "Active Status"}, {"enum": ["INACTIVE"], "title": "Inactive Status", "description": "Inactive Status"}, {"enum": ["BEING_ADDED"], "title": "Being Added Status", "description": "Being Added Status"}, {"enum": ["ON_HOLD"], "title": "On Hold Status", "description": "On Hold Status"}], "description": "Represents the status of the supplier"}, "websiteURL": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "currency": {"type": ["string", "null"], "anyOf": [{"enum": ["USD"], "title": "US dollars", "description": "US dollars"}, {"enum": ["GBP"], "title": "British pounds", "description": "British pounds"}, {"enum": ["EUR"], "title": "Euros", "description": "Euros"}, {"enum": ["CAD"], "title": "Canadian dollars", "description": "Canadian dollars"}, {"enum": ["AUD"], "title": "Australian dollars", "description": "Australian dollars"}], "description": "Represents the currency id of the supplier"}, "scopes": {"type": "array", "items": {"anyOf": [{"type": ["object", "string", "null"], "description": "An API scope defining specific permissions for API access"}, {"type": "null"}]}}, "warehouses": {"type": "array", "items": {"type": ["object", "string", "null"], "description": "Information for a supplier warehouse"}}}, "description": "A supplier entity."}, "manufacturer": {"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "ID", "description": "The `ID` scalar type represents a unique identifier, often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\"4\"`) or integer (such as `4`) input value will be accepted as an ID."}, "name": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "address": {"type": ["object", "string", "null"], "description": "An address"}, "hasWhitelabeling": {"type": ["boolean", "null"], "title": "Boolean", "description": "The `Boolean` scalar type represents `true` or `false`."}}, "description": "A manufacturer of a product"}, "manufacturerPartId": {"type": ["object", "string", "null"], "title": "Int32", "description": "The `Int32` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1."}}, "description": "Information about a product that a specific supplier has provided."}}, "description": "A unit that is being shipped out. In this sense, a unit is a single quantity of a single product part in a single box"}, "Part": {"type": ["object", "string", "null"], "properties": {"upc": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "supplierPartNumber": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "manufacturerModelNumber": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "leadTime": {"type": ["number", "null"], "title": "Int", "description": "The `Int` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1."}, "replacementPartLeadTime": {"type": ["number", "null"], "title": "Int", "description": "The `Int` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1."}, "mapPrice": {"type": ["object", "string", "null"], "properties": {"amount": {"type": ["number", "null"], "title": "Float", "description": "The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point)."}, "currency": {"type": ["string", "null"], "anyOf": [{"enum": ["US_DOLLAR"], "title": "US Dollar", "description": "US Dollar"}, {"enum": ["BRITISH_POUND"], "title": "British Pound", "description": "British Pound"}, {"enum": ["EURO"], "title": "Euro", "description": "Euro"}, {"enum": ["CANADIAN_DOLLAR"], "title": "Canadian Dollar", "description": "Canadian Dollar"}, {"enum": ["AUSTRALIAN_DOLLAR"], "title": "Australian Dollar", "description": "Australian Dollar"}], "description": "Types of currency"}}, "description": "Some amount of money"}, "retailPrice": {"type": ["object", "string", "null"], "properties": {"amount": {"type": ["number", "null"], "title": "Float", "description": "The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point)."}, "currency": {"type": ["string", "null"], "anyOf": [{"enum": ["US_DOLLAR"], "title": "US Dollar", "description": "US Dollar"}, {"enum": ["BRITISH_POUND"], "title": "British Pound", "description": "British Pound"}, {"enum": ["EURO"], "title": "Euro", "description": "Euro"}, {"enum": ["CANADIAN_DOLLAR"], "title": "Canadian Dollar", "description": "Canadian Dollar"}, {"enum": ["AUSTRALIAN_DOLLAR"], "title": "Australian Dollar", "description": "Australian Dollar"}], "description": "Types of currency"}}, "description": "Some amount of money"}, "products": {"type": "array", "items": {"type": ["object", "string", "null"], "properties": {"url": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "imageUrl": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "displayDimensions": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "optionCombination": {"type": "array", "items": {"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "ID", "description": "The `ID` scalar type represents a unique identifier, often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\"4\"`) or integer (such as `4`) input value will be accepted as an ID."}, "category": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "name": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}}, "description": "This type contains the essential information about a single product option."}}, "product": {"type": ["object", "string", "null"], "properties": {"sku": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "name": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "url": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "imageUrl": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "averageOverallRating": {"type": ["number", "null"], "title": "Float", "description": "The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point)."}, "minimumOrderQuantity": {"type": ["number", "null"], "title": "Int", "description": "The `Int` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1."}, "setQuantity": {"type": ["number", "null"], "title": "Int", "description": "The `Int` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1."}, "displaySetQuantity": {"type": ["number", "null"], "title": "Int", "description": "The `Int` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1."}, "status": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "statusDetail": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "harmonizedSystemCode": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "canadaCode": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "minimumHeight": {"type": ["object", "string", "null"], "description": "The size of some item in one direction."}, "maximumHeight": {"type": ["object", "string", "null"], "description": "The size of some item in one direction."}, "minimumWidth": {"type": ["object", "string", "null"], "description": "The size of some item in one direction."}, "maximumWidth": {"type": ["object", "string", "null"], "description": "The size of some item in one direction."}, "minimumDepth": {"type": ["object", "string", "null"], "description": "The size of some item in one direction."}, "maximumDepth": {"type": ["object", "string", "null"], "description": "The size of some item in one direction."}, "class": {"type": ["object", "string", "null"], "description": "This type contains the essential information for a single Wayfair product class."}, "manufacturer": {"type": ["object", "string", "null"], "description": "A manufacturer of a product"}, "collection": {"type": ["object", "string", "null"], "description": "A collection of related products."}, "options": {"type": "array", "items": {"type": ["object", "string", "null"], "description": "This type contains the essential information about a single product option."}}, "variations": {"type": "array", "items": {"type": ["object", "string", "null"], "description": "A purchasable product listed on Wayfair's site with all of its attributes and option specific information"}}, "returnPolicy": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}}, "description": "A product that Wayfair has on site."}, "parts": {"type": "array", "items": {"type": ["object", "string", "null"], "properties": {"upc": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "supplierPartNumber": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "manufacturerModelNumber": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "leadTime": {"type": ["number", "null"], "title": "Int", "description": "The `Int` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1."}, "replacementPartLeadTime": {"type": ["number", "null"], "title": "Int", "description": "The `Int` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1."}, "mapPrice": {"type": ["object", "string", "null"], "description": "Some amount of money"}, "retailPrice": {"type": ["object", "string", "null"], "description": "Some amount of money"}, "products": {"type": "array", "items": {"type": ["object", "string", "null"], "description": "A purchasable product listed on Wayfair's site with all of its attributes and option specific information"}}, "supplier": {"type": ["object", "string", "null"], "description": "A supplier entity."}, "manufacturer": {"type": ["object", "string", "null"], "description": "A manufacturer of a product"}, "manufacturerPartId": {"type": ["object", "string", "null"], "title": "Int32", "description": "The `Int32` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1."}}, "description": "Information about a product that a specific supplier has provided."}}}, "description": "A purchasable product listed on Wayfair's site with all of its attributes and option specific information"}}, "supplier": {"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "ID", "description": "The `ID` scalar type represents a unique identifier, often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\"4\"`) or integer (such as `4`) input value will be accepted as an ID."}, "name": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "shortName": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "status": {"type": ["string", "null"], "anyOf": [{"enum": ["ACTIVE"], "title": "Active Status", "description": "Active Status"}, {"enum": ["INACTIVE"], "title": "Inactive Status", "description": "Inactive Status"}, {"enum": ["BEING_ADDED"], "title": "Being Added Status", "description": "Being Added Status"}, {"enum": ["ON_HOLD"], "title": "On Hold Status", "description": "On Hold Status"}], "description": "Represents the status of the supplier"}, "websiteURL": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "currency": {"type": ["string", "null"], "anyOf": [{"enum": ["USD"], "title": "US dollars", "description": "US dollars"}, {"enum": ["GBP"], "title": "British pounds", "description": "British pounds"}, {"enum": ["EUR"], "title": "Euros", "description": "Euros"}, {"enum": ["CAD"], "title": "Canadian dollars", "description": "Canadian dollars"}, {"enum": ["AUD"], "title": "Australian dollars", "description": "Australian dollars"}], "description": "Represents the currency id of the supplier"}, "scopes": {"type": "array", "items": {"anyOf": [{"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "ID", "description": "The `ID` scalar type represents a unique identifier, often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\"4\"`) or integer (such as `4`) input value will be accepted as an ID."}, "name": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "permissionName": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "description": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}}, "description": "An API scope defining specific permissions for API access"}, {"type": "null"}]}}, "warehouses": {"type": "array", "items": {"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "ID", "description": "The `ID` scalar type represents a unique identifier, often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\"4\"`) or integer (such as `4`) input value will be accepted as an ID."}, "name": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "address": {"type": ["object", "string", "null"], "description": "An address"}, "supplier": {"type": ["object", "string", "null"], "description": "A supplier entity."}}, "description": "Information for a supplier warehouse"}}}, "description": "A supplier entity."}, "manufacturer": {"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "ID", "description": "The `ID` scalar type represents a unique identifier, often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\"4\"`) or integer (such as `4`) input value will be accepted as an ID."}, "name": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "address": {"type": ["object", "string", "null"], "properties": {"name": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "address1": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "address2": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "address3": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "city": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "state": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "country": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "postalCode": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "phoneNumber": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}}, "description": "An address"}, "hasWhitelabeling": {"type": ["boolean", "null"], "title": "Boolean", "description": "The `Boolean` scalar type represents `true` or `false`."}}, "description": "A manufacturer of a product"}, "manufacturerPartId": {"type": ["object", "string", "null"], "title": "Int32", "description": "The `Int32` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1."}}, "description": "Information about a product that a specific supplier has provided."}, "Money": {"type": ["object", "string", "null"], "properties": {"amount": {"type": ["number", "null"], "title": "Float", "description": "The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point)."}, "currency": {"type": ["string", "null"], "anyOf": [{"enum": ["US_DOLLAR"], "title": "US Dollar", "description": "US Dollar"}, {"enum": ["BRITISH_POUND"], "title": "British Pound", "description": "British Pound"}, {"enum": ["EURO"], "title": "Euro", "description": "Euro"}, {"enum": ["CANADIAN_DOLLAR"], "title": "Canadian Dollar", "description": "Canadian Dollar"}, {"enum": ["AUSTRALIAN_DOLLAR"], "title": "Australian Dollar", "description": "Australian Dollar"}], "description": "Types of currency"}}, "description": "Some amount of money"}, "Currency": {"type": ["string", "null"], "anyOf": [{"enum": ["US_DOLLAR"], "title": "US Dollar", "description": "US Dollar"}, {"enum": ["BRITISH_POUND"], "title": "British Pound", "description": "British Pound"}, {"enum": ["EURO"], "title": "Euro", "description": "Euro"}, {"enum": ["CANADIAN_DOLLAR"], "title": "Canadian Dollar", "description": "Canadian Dollar"}, {"enum": ["AUSTRALIAN_DOLLAR"], "title": "Australian Dollar", "description": "Australian Dollar"}], "description": "Types of currency"}, "ProductVariation": {"type": ["object", "string", "null"], "properties": {"url": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "imageUrl": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "displayDimensions": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "optionCombination": {"type": "array", "items": {"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "ID", "description": "The `ID` scalar type represents a unique identifier, often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\"4\"`) or integer (such as `4`) input value will be accepted as an ID."}, "category": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "name": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}}, "description": "This type contains the essential information about a single product option."}}, "product": {"type": ["object", "string", "null"], "properties": {"sku": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "name": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "url": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "imageUrl": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "averageOverallRating": {"type": ["number", "null"], "title": "Float", "description": "The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point)."}, "minimumOrderQuantity": {"type": ["number", "null"], "title": "Int", "description": "The `Int` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1."}, "setQuantity": {"type": ["number", "null"], "title": "Int", "description": "The `Int` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1."}, "displaySetQuantity": {"type": ["number", "null"], "title": "Int", "description": "The `Int` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1."}, "status": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "statusDetail": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "harmonizedSystemCode": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "canadaCode": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "minimumHeight": {"type": ["object", "string", "null"], "properties": {"amount": {"type": ["number", "null"], "title": "Float", "description": "The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point)."}, "unit": {"type": ["string", "null"], "anyOf": [{"enum": ["INCHES"], "title": "Inches", "description": "Inches"}, {"enum": ["CENTIMETERS"], "title": "Centimeters", "description": "Centimeters"}], "description": "Units that can be used to measure a length"}}, "description": "The size of some item in one direction."}, "maximumHeight": {"type": ["object", "string", "null"], "properties": {"amount": {"type": ["number", "null"], "title": "Float", "description": "The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point)."}, "unit": {"type": ["string", "null"], "anyOf": [{"enum": ["INCHES"], "title": "Inches", "description": "Inches"}, {"enum": ["CENTIMETERS"], "title": "Centimeters", "description": "Centimeters"}], "description": "Units that can be used to measure a length"}}, "description": "The size of some item in one direction."}, "minimumWidth": {"type": ["object", "string", "null"], "properties": {"amount": {"type": ["number", "null"], "title": "Float", "description": "The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point)."}, "unit": {"type": ["string", "null"], "anyOf": [{"enum": ["INCHES"], "title": "Inches", "description": "Inches"}, {"enum": ["CENTIMETERS"], "title": "Centimeters", "description": "Centimeters"}], "description": "Units that can be used to measure a length"}}, "description": "The size of some item in one direction."}, "maximumWidth": {"type": ["object", "string", "null"], "properties": {"amount": {"type": ["number", "null"], "title": "Float", "description": "The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point)."}, "unit": {"type": ["string", "null"], "anyOf": [{"enum": ["INCHES"], "title": "Inches", "description": "Inches"}, {"enum": ["CENTIMETERS"], "title": "Centimeters", "description": "Centimeters"}], "description": "Units that can be used to measure a length"}}, "description": "The size of some item in one direction."}, "minimumDepth": {"type": ["object", "string", "null"], "properties": {"amount": {"type": ["number", "null"], "title": "Float", "description": "The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point)."}, "unit": {"type": ["string", "null"], "anyOf": [{"enum": ["INCHES"], "title": "Inches", "description": "Inches"}, {"enum": ["CENTIMETERS"], "title": "Centimeters", "description": "Centimeters"}], "description": "Units that can be used to measure a length"}}, "description": "The size of some item in one direction."}, "maximumDepth": {"type": ["object", "string", "null"], "properties": {"amount": {"type": ["number", "null"], "title": "Float", "description": "The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point)."}, "unit": {"type": ["string", "null"], "anyOf": [{"enum": ["INCHES"], "title": "Inches", "description": "Inches"}, {"enum": ["CENTIMETERS"], "title": "Centimeters", "description": "Centimeters"}], "description": "Units that can be used to measure a length"}}, "description": "The size of some item in one direction."}, "class": {"type": ["object", "string", "null"], "properties": {"id": {"type": ["number", "null"], "title": "Int", "description": "The `Int` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1."}, "name": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "categoryId": {"type": ["number", "null"], "title": "Int", "description": "The `Int` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1."}, "categoryName": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "options": {"type": "array", "items": {"anyOf": [{"type": ["object", "string", "null"], "description": "This type contains the essential information for a single Wayfair product class option."}, {"type": "null"}]}}, "attributes": {"type": "array", "items": {"anyOf": [{"type": ["object", "string", "null"], "description": "A single attribute in a class schema"}, {"type": "null"}]}}}, "description": "This type contains the essential information for a single Wayfair product class."}, "manufacturer": {"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "ID", "description": "The `ID` scalar type represents a unique identifier, often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\"4\"`) or integer (such as `4`) input value will be accepted as an ID."}, "name": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "address": {"type": ["object", "string", "null"], "description": "An address"}, "hasWhitelabeling": {"type": ["boolean", "null"], "title": "Boolean", "description": "The `Boolean` scalar type represents `true` or `false`."}}, "description": "A manufacturer of a product"}, "collection": {"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "ID", "description": "The `ID` scalar type represents a unique identifier, often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\"4\"`) or integer (such as `4`) input value will be accepted as an ID."}, "name": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "description": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "products": {"type": "array", "items": {"type": ["object", "string", "null"], "description": "A product that Wayfair has on site."}}}, "description": "A collection of related products."}, "options": {"type": "array", "items": {"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "ID", "description": "The `ID` scalar type represents a unique identifier, often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\"4\"`) or integer (such as `4`) input value will be accepted as an ID."}, "category": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "name": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}}, "description": "This type contains the essential information about a single product option."}}, "variations": {"type": "array", "items": {"type": ["object", "string", "null"], "properties": {"url": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "imageUrl": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "displayDimensions": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "optionCombination": {"type": "array", "items": {"type": ["object", "string", "null"], "description": "This type contains the essential information about a single product option."}}, "product": {"type": ["object", "string", "null"], "description": "A product that Wayfair has on site."}, "parts": {"type": "array", "items": {"type": ["object", "string", "null"], "description": "Information about a product that a specific supplier has provided."}}}, "description": "A purchasable product listed on Wayfair's site with all of its attributes and option specific information"}}, "returnPolicy": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}}, "description": "A product that Wayfair has on site."}, "parts": {"type": "array", "items": {"type": ["object", "string", "null"], "properties": {"upc": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "supplierPartNumber": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "manufacturerModelNumber": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "leadTime": {"type": ["number", "null"], "title": "Int", "description": "The `Int` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1."}, "replacementPartLeadTime": {"type": ["number", "null"], "title": "Int", "description": "The `Int` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1."}, "mapPrice": {"type": ["object", "string", "null"], "properties": {"amount": {"type": ["number", "null"], "title": "Float", "description": "The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point)."}, "currency": {"type": ["string", "null"], "anyOf": [{"enum": ["US_DOLLAR"], "title": "US Dollar", "description": "US Dollar"}, {"enum": ["BRITISH_POUND"], "title": "British Pound", "description": "British Pound"}, {"enum": ["EURO"], "title": "Euro", "description": "Euro"}, {"enum": ["CANADIAN_DOLLAR"], "title": "Canadian Dollar", "description": "Canadian Dollar"}, {"enum": ["AUSTRALIAN_DOLLAR"], "title": "Australian Dollar", "description": "Australian Dollar"}], "description": "Types of currency"}}, "description": "Some amount of money"}, "retailPrice": {"type": ["object", "string", "null"], "properties": {"amount": {"type": ["number", "null"], "title": "Float", "description": "The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point)."}, "currency": {"type": ["string", "null"], "anyOf": [{"enum": ["US_DOLLAR"], "title": "US Dollar", "description": "US Dollar"}, {"enum": ["BRITISH_POUND"], "title": "British Pound", "description": "British Pound"}, {"enum": ["EURO"], "title": "Euro", "description": "Euro"}, {"enum": ["CANADIAN_DOLLAR"], "title": "Canadian Dollar", "description": "Canadian Dollar"}, {"enum": ["AUSTRALIAN_DOLLAR"], "title": "Australian Dollar", "description": "Australian Dollar"}], "description": "Types of currency"}}, "description": "Some amount of money"}, "products": {"type": "array", "items": {"type": ["object", "string", "null"], "properties": {"url": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "imageUrl": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "displayDimensions": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "optionCombination": {"type": "array", "items": {"type": ["object", "string", "null"], "description": "This type contains the essential information about a single product option."}}, "product": {"type": ["object", "string", "null"], "description": "A product that Wayfair has on site."}, "parts": {"type": "array", "items": {"type": ["object", "string", "null"], "description": "Information about a product that a specific supplier has provided."}}}, "description": "A purchasable product listed on Wayfair's site with all of its attributes and option specific information"}}, "supplier": {"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "ID", "description": "The `ID` scalar type represents a unique identifier, often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\"4\"`) or integer (such as `4`) input value will be accepted as an ID."}, "name": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "shortName": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "status": {"type": ["string", "null"], "anyOf": [{"enum": ["ACTIVE"], "title": "Active Status", "description": "Active Status"}, {"enum": ["INACTIVE"], "title": "Inactive Status", "description": "Inactive Status"}, {"enum": ["BEING_ADDED"], "title": "Being Added Status", "description": "Being Added Status"}, {"enum": ["ON_HOLD"], "title": "On Hold Status", "description": "On Hold Status"}], "description": "Represents the status of the supplier"}, "websiteURL": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "currency": {"type": ["string", "null"], "anyOf": [{"enum": ["USD"], "title": "US dollars", "description": "US dollars"}, {"enum": ["GBP"], "title": "British pounds", "description": "British pounds"}, {"enum": ["EUR"], "title": "Euros", "description": "Euros"}, {"enum": ["CAD"], "title": "Canadian dollars", "description": "Canadian dollars"}, {"enum": ["AUD"], "title": "Australian dollars", "description": "Australian dollars"}], "description": "Represents the currency id of the supplier"}, "scopes": {"type": "array", "items": {"anyOf": [{"type": ["object", "string", "null"], "description": "An API scope defining specific permissions for API access"}, {"type": "null"}]}}, "warehouses": {"type": "array", "items": {"type": ["object", "string", "null"], "description": "Information for a supplier warehouse"}}}, "description": "A supplier entity."}, "manufacturer": {"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "ID", "description": "The `ID` scalar type represents a unique identifier, often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\"4\"`) or integer (such as `4`) input value will be accepted as an ID."}, "name": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "address": {"type": ["object", "string", "null"], "description": "An address"}, "hasWhitelabeling": {"type": ["boolean", "null"], "title": "Boolean", "description": "The `Boolean` scalar type represents `true` or `false`."}}, "description": "A manufacturer of a product"}, "manufacturerPartId": {"type": ["object", "string", "null"], "title": "Int32", "description": "The `Int32` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1."}}, "description": "Information about a product that a specific supplier has provided."}}}, "description": "A purchasable product listed on Wayfair's site with all of its attributes and option specific information"}, "ImageSizeInput": {"type": ["object", "string", "null"], "properties": {"height": {"type": ["number", "null"], "title": "Int", "description": "The `Int` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1."}, "weight": {"type": ["number", "null"], "title": "Int", "description": "The `Int` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1."}, "width": {"type": ["number", "null"], "title": "Int", "description": "The `Int` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1."}}, "description": "The size of the image in pixels"}, "ProductOption": {"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "ID", "description": "The `ID` scalar type represents a unique identifier, often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\"4\"`) or integer (such as `4`) input value will be accepted as an ID."}, "category": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "name": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}}, "description": "This type contains the essential information about a single product option."}, "WayfairProduct": {"type": ["object", "string", "null"], "properties": {"sku": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "name": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "url": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "imageUrl": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "averageOverallRating": {"type": ["number", "null"], "title": "Float", "description": "The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point)."}, "minimumOrderQuantity": {"type": ["number", "null"], "title": "Int", "description": "The `Int` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1."}, "setQuantity": {"type": ["number", "null"], "title": "Int", "description": "The `Int` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1."}, "displaySetQuantity": {"type": ["number", "null"], "title": "Int", "description": "The `Int` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1."}, "status": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "statusDetail": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "harmonizedSystemCode": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "canadaCode": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "minimumHeight": {"type": ["object", "string", "null"], "properties": {"amount": {"type": ["number", "null"], "title": "Float", "description": "The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point)."}, "unit": {"type": ["string", "null"], "anyOf": [{"enum": ["INCHES"], "title": "Inches", "description": "Inches"}, {"enum": ["CENTIMETERS"], "title": "Centimeters", "description": "Centimeters"}], "description": "Units that can be used to measure a length"}}, "description": "The size of some item in one direction."}, "maximumHeight": {"type": ["object", "string", "null"], "properties": {"amount": {"type": ["number", "null"], "title": "Float", "description": "The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point)."}, "unit": {"type": ["string", "null"], "anyOf": [{"enum": ["INCHES"], "title": "Inches", "description": "Inches"}, {"enum": ["CENTIMETERS"], "title": "Centimeters", "description": "Centimeters"}], "description": "Units that can be used to measure a length"}}, "description": "The size of some item in one direction."}, "minimumWidth": {"type": ["object", "string", "null"], "properties": {"amount": {"type": ["number", "null"], "title": "Float", "description": "The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point)."}, "unit": {"type": ["string", "null"], "anyOf": [{"enum": ["INCHES"], "title": "Inches", "description": "Inches"}, {"enum": ["CENTIMETERS"], "title": "Centimeters", "description": "Centimeters"}], "description": "Units that can be used to measure a length"}}, "description": "The size of some item in one direction."}, "maximumWidth": {"type": ["object", "string", "null"], "properties": {"amount": {"type": ["number", "null"], "title": "Float", "description": "The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point)."}, "unit": {"type": ["string", "null"], "anyOf": [{"enum": ["INCHES"], "title": "Inches", "description": "Inches"}, {"enum": ["CENTIMETERS"], "title": "Centimeters", "description": "Centimeters"}], "description": "Units that can be used to measure a length"}}, "description": "The size of some item in one direction."}, "minimumDepth": {"type": ["object", "string", "null"], "properties": {"amount": {"type": ["number", "null"], "title": "Float", "description": "The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point)."}, "unit": {"type": ["string", "null"], "anyOf": [{"enum": ["INCHES"], "title": "Inches", "description": "Inches"}, {"enum": ["CENTIMETERS"], "title": "Centimeters", "description": "Centimeters"}], "description": "Units that can be used to measure a length"}}, "description": "The size of some item in one direction."}, "maximumDepth": {"type": ["object", "string", "null"], "properties": {"amount": {"type": ["number", "null"], "title": "Float", "description": "The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point)."}, "unit": {"type": ["string", "null"], "anyOf": [{"enum": ["INCHES"], "title": "Inches", "description": "Inches"}, {"enum": ["CENTIMETERS"], "title": "Centimeters", "description": "Centimeters"}], "description": "Units that can be used to measure a length"}}, "description": "The size of some item in one direction."}, "class": {"type": ["object", "string", "null"], "properties": {"id": {"type": ["number", "null"], "title": "Int", "description": "The `Int` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1."}, "name": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "categoryId": {"type": ["number", "null"], "title": "Int", "description": "The `Int` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1."}, "categoryName": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "options": {"type": "array", "items": {"anyOf": [{"type": ["object", "string", "null"], "properties": {"categoryName": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "rank": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}}, "description": "This type contains the essential information for a single Wayfair product class option."}, {"type": "null"}]}}, "attributes": {"type": "array", "items": {"anyOf": [{"type": ["object", "string", "null"], "properties": {"id": {"type": ["number", "null"], "title": "Int", "description": "The `Int` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1."}, "name": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "parentId": {"type": ["number", "null"], "title": "Int", "description": "The `Int` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1."}, "priority": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "dataType": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "definition": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "displayRank": {"type": ["number", "null"], "title": "Int", "description": "The `Int` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1."}, "unavailable": {"type": ["number", "null"], "title": "Int", "description": "The `Int` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1."}, "doesNotApply": {"type": ["number", "null"], "title": "Int", "description": "The `Int` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1."}, "enumValues": {"type": "array", "items": {"anyOf": [{"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, {"type": "null"}]}}}, "description": "A single attribute in a class schema"}, {"type": "null"}]}}}, "description": "This type contains the essential information for a single Wayfair product class."}, "manufacturer": {"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "ID", "description": "The `ID` scalar type represents a unique identifier, often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\"4\"`) or integer (such as `4`) input value will be accepted as an ID."}, "name": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "address": {"type": ["object", "string", "null"], "properties": {"name": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "address1": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "address2": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "address3": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "city": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "state": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "country": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "postalCode": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "phoneNumber": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}}, "description": "An address"}, "hasWhitelabeling": {"type": ["boolean", "null"], "title": "Boolean", "description": "The `Boolean` scalar type represents `true` or `false`."}}, "description": "A manufacturer of a product"}, "collection": {"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "ID", "description": "The `ID` scalar type represents a unique identifier, often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\"4\"`) or integer (such as `4`) input value will be accepted as an ID."}, "name": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "description": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "products": {"type": "array", "items": {"type": ["object", "string", "null"], "properties": {"sku": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "name": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "url": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "imageUrl": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "averageOverallRating": {"type": ["number", "null"], "title": "Float", "description": "The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point)."}, "minimumOrderQuantity": {"type": ["number", "null"], "title": "Int", "description": "The `Int` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1."}, "setQuantity": {"type": ["number", "null"], "title": "Int", "description": "The `Int` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1."}, "displaySetQuantity": {"type": ["number", "null"], "title": "Int", "description": "The `Int` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1."}, "status": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "statusDetail": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "harmonizedSystemCode": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "canadaCode": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "minimumHeight": {"type": ["object", "string", "null"], "description": "The size of some item in one direction."}, "maximumHeight": {"type": ["object", "string", "null"], "description": "The size of some item in one direction."}, "minimumWidth": {"type": ["object", "string", "null"], "description": "The size of some item in one direction."}, "maximumWidth": {"type": ["object", "string", "null"], "description": "The size of some item in one direction."}, "minimumDepth": {"type": ["object", "string", "null"], "description": "The size of some item in one direction."}, "maximumDepth": {"type": ["object", "string", "null"], "description": "The size of some item in one direction."}, "class": {"type": ["object", "string", "null"], "description": "This type contains the essential information for a single Wayfair product class."}, "manufacturer": {"type": ["object", "string", "null"], "description": "A manufacturer of a product"}, "collection": {"type": ["object", "string", "null"], "description": "A collection of related products."}, "options": {"type": "array", "items": {"type": ["object", "string", "null"], "description": "This type contains the essential information about a single product option."}}, "variations": {"type": "array", "items": {"type": ["object", "string", "null"], "description": "A purchasable product listed on Wayfair's site with all of its attributes and option specific information"}}, "returnPolicy": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}}, "description": "A product that Wayfair has on site."}}}, "description": "A collection of related products."}, "options": {"type": "array", "items": {"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "ID", "description": "The `ID` scalar type represents a unique identifier, often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\"4\"`) or integer (such as `4`) input value will be accepted as an ID."}, "category": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "name": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}}, "description": "This type contains the essential information about a single product option."}}, "variations": {"type": "array", "items": {"type": ["object", "string", "null"], "properties": {"url": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "imageUrl": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "displayDimensions": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "optionCombination": {"type": "array", "items": {"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "ID", "description": "The `ID` scalar type represents a unique identifier, often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\"4\"`) or integer (such as `4`) input value will be accepted as an ID."}, "category": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "name": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}}, "description": "This type contains the essential information about a single product option."}}, "product": {"type": ["object", "string", "null"], "properties": {"sku": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "name": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "url": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "imageUrl": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "averageOverallRating": {"type": ["number", "null"], "title": "Float", "description": "The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point)."}, "minimumOrderQuantity": {"type": ["number", "null"], "title": "Int", "description": "The `Int` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1."}, "setQuantity": {"type": ["number", "null"], "title": "Int", "description": "The `Int` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1."}, "displaySetQuantity": {"type": ["number", "null"], "title": "Int", "description": "The `Int` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1."}, "status": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "statusDetail": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "harmonizedSystemCode": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "canadaCode": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "minimumHeight": {"type": ["object", "string", "null"], "description": "The size of some item in one direction."}, "maximumHeight": {"type": ["object", "string", "null"], "description": "The size of some item in one direction."}, "minimumWidth": {"type": ["object", "string", "null"], "description": "The size of some item in one direction."}, "maximumWidth": {"type": ["object", "string", "null"], "description": "The size of some item in one direction."}, "minimumDepth": {"type": ["object", "string", "null"], "description": "The size of some item in one direction."}, "maximumDepth": {"type": ["object", "string", "null"], "description": "The size of some item in one direction."}, "class": {"type": ["object", "string", "null"], "description": "This type contains the essential information for a single Wayfair product class."}, "manufacturer": {"type": ["object", "string", "null"], "description": "A manufacturer of a product"}, "collection": {"type": ["object", "string", "null"], "description": "A collection of related products."}, "options": {"type": "array", "items": {"type": ["object", "string", "null"], "description": "This type contains the essential information about a single product option."}}, "variations": {"type": "array", "items": {"type": ["object", "string", "null"], "description": "A purchasable product listed on Wayfair's site with all of its attributes and option specific information"}}, "returnPolicy": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}}, "description": "A product that Wayfair has on site."}, "parts": {"type": "array", "items": {"type": ["object", "string", "null"], "properties": {"upc": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "supplierPartNumber": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "manufacturerModelNumber": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "leadTime": {"type": ["number", "null"], "title": "Int", "description": "The `Int` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1."}, "replacementPartLeadTime": {"type": ["number", "null"], "title": "Int", "description": "The `Int` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1."}, "mapPrice": {"type": ["object", "string", "null"], "description": "Some amount of money"}, "retailPrice": {"type": ["object", "string", "null"], "description": "Some amount of money"}, "products": {"type": "array", "items": {"type": ["object", "string", "null"], "description": "A purchasable product listed on Wayfair's site with all of its attributes and option specific information"}}, "supplier": {"type": ["object", "string", "null"], "description": "A supplier entity."}, "manufacturer": {"type": ["object", "string", "null"], "description": "A manufacturer of a product"}, "manufacturerPartId": {"type": ["object", "string", "null"], "title": "Int32", "description": "The `Int32` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1."}}, "description": "Information about a product that a specific supplier has provided."}}}, "description": "A purchasable product listed on Wayfair's site with all of its attributes and option specific information"}}, "returnPolicy": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}}, "description": "A product that Wayfair has on site."}, "Dimension": {"type": ["object", "string", "null"], "properties": {"amount": {"type": ["number", "null"], "title": "Float", "description": "The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point)."}, "unit": {"type": ["string", "null"], "anyOf": [{"enum": ["INCHES"], "title": "Inches", "description": "Inches"}, {"enum": ["CENTIMETERS"], "title": "Centimeters", "description": "Centimeters"}], "description": "Units that can be used to measure a length"}}, "description": "The size of some item in one direction."}, "ProductClass": {"type": ["object", "string", "null"], "properties": {"id": {"type": ["number", "null"], "title": "Int", "description": "The `Int` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1."}, "name": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "categoryId": {"type": ["number", "null"], "title": "Int", "description": "The `Int` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1."}, "categoryName": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "options": {"type": "array", "items": {"anyOf": [{"type": ["object", "string", "null"], "properties": {"categoryName": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "rank": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}}, "description": "This type contains the essential information for a single Wayfair product class option."}, {"type": "null"}]}}, "attributes": {"type": "array", "items": {"anyOf": [{"type": ["object", "string", "null"], "properties": {"id": {"type": ["number", "null"], "title": "Int", "description": "The `Int` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1."}, "name": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "parentId": {"type": ["number", "null"], "title": "Int", "description": "The `Int` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1."}, "priority": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "dataType": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "definition": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "displayRank": {"type": ["number", "null"], "title": "Int", "description": "The `Int` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1."}, "unavailable": {"type": ["number", "null"], "title": "Int", "description": "The `Int` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1."}, "doesNotApply": {"type": ["number", "null"], "title": "Int", "description": "The `Int` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1."}, "enumValues": {"type": "array", "items": {"anyOf": [{"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, {"type": "null"}]}}}, "description": "A single attribute in a class schema"}, {"type": "null"}]}}}, "description": "This type contains the essential information for a single Wayfair product class."}, "ProductClassOption": {"type": ["object", "string", "null"], "properties": {"categoryName": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "rank": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}}, "description": "This type contains the essential information for a single Wayfair product class option."}, "ProductClassAttribute": {"type": ["object", "string", "null"], "properties": {"id": {"type": ["number", "null"], "title": "Int", "description": "The `Int` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1."}, "name": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "parentId": {"type": ["number", "null"], "title": "Int", "description": "The `Int` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1."}, "priority": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "dataType": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "definition": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "displayRank": {"type": ["number", "null"], "title": "Int", "description": "The `Int` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1."}, "unavailable": {"type": ["number", "null"], "title": "Int", "description": "The `Int` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1."}, "doesNotApply": {"type": ["number", "null"], "title": "Int", "description": "The `Int` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1."}, "enumValues": {"type": "array", "items": {"anyOf": [{"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, {"type": "null"}]}}}, "description": "A single attribute in a class schema"}, "Manufacturer": {"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "ID", "description": "The `ID` scalar type represents a unique identifier, often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\"4\"`) or integer (such as `4`) input value will be accepted as an ID."}, "name": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "address": {"type": ["object", "string", "null"], "properties": {"name": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "address1": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "address2": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "address3": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "city": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "state": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "country": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "postalCode": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "phoneNumber": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}}, "description": "An address"}, "hasWhitelabeling": {"type": ["boolean", "null"], "title": "Boolean", "description": "The `Boolean` scalar type represents `true` or `false`."}}, "description": "A manufacturer of a product"}, "ProductCollection": {"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "ID", "description": "The `ID` scalar type represents a unique identifier, often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\"4\"`) or integer (such as `4`) input value will be accepted as an ID."}, "name": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "description": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "products": {"type": "array", "items": {"type": ["object", "string", "null"], "properties": {"sku": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "name": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "url": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "imageUrl": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "averageOverallRating": {"type": ["number", "null"], "title": "Float", "description": "The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point)."}, "minimumOrderQuantity": {"type": ["number", "null"], "title": "Int", "description": "The `Int` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1."}, "setQuantity": {"type": ["number", "null"], "title": "Int", "description": "The `Int` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1."}, "displaySetQuantity": {"type": ["number", "null"], "title": "Int", "description": "The `Int` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1."}, "status": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "statusDetail": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "harmonizedSystemCode": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "canadaCode": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "minimumHeight": {"type": ["object", "string", "null"], "properties": {"amount": {"type": ["number", "null"], "title": "Float", "description": "The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point)."}, "unit": {"type": ["string", "null"], "anyOf": [{"enum": ["INCHES"], "title": "Inches", "description": "Inches"}, {"enum": ["CENTIMETERS"], "title": "Centimeters", "description": "Centimeters"}], "description": "Units that can be used to measure a length"}}, "description": "The size of some item in one direction."}, "maximumHeight": {"type": ["object", "string", "null"], "properties": {"amount": {"type": ["number", "null"], "title": "Float", "description": "The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point)."}, "unit": {"type": ["string", "null"], "anyOf": [{"enum": ["INCHES"], "title": "Inches", "description": "Inches"}, {"enum": ["CENTIMETERS"], "title": "Centimeters", "description": "Centimeters"}], "description": "Units that can be used to measure a length"}}, "description": "The size of some item in one direction."}, "minimumWidth": {"type": ["object", "string", "null"], "properties": {"amount": {"type": ["number", "null"], "title": "Float", "description": "The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point)."}, "unit": {"type": ["string", "null"], "anyOf": [{"enum": ["INCHES"], "title": "Inches", "description": "Inches"}, {"enum": ["CENTIMETERS"], "title": "Centimeters", "description": "Centimeters"}], "description": "Units that can be used to measure a length"}}, "description": "The size of some item in one direction."}, "maximumWidth": {"type": ["object", "string", "null"], "properties": {"amount": {"type": ["number", "null"], "title": "Float", "description": "The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point)."}, "unit": {"type": ["string", "null"], "anyOf": [{"enum": ["INCHES"], "title": "Inches", "description": "Inches"}, {"enum": ["CENTIMETERS"], "title": "Centimeters", "description": "Centimeters"}], "description": "Units that can be used to measure a length"}}, "description": "The size of some item in one direction."}, "minimumDepth": {"type": ["object", "string", "null"], "properties": {"amount": {"type": ["number", "null"], "title": "Float", "description": "The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point)."}, "unit": {"type": ["string", "null"], "anyOf": [{"enum": ["INCHES"], "title": "Inches", "description": "Inches"}, {"enum": ["CENTIMETERS"], "title": "Centimeters", "description": "Centimeters"}], "description": "Units that can be used to measure a length"}}, "description": "The size of some item in one direction."}, "maximumDepth": {"type": ["object", "string", "null"], "properties": {"amount": {"type": ["number", "null"], "title": "Float", "description": "The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point)."}, "unit": {"type": ["string", "null"], "anyOf": [{"enum": ["INCHES"], "title": "Inches", "description": "Inches"}, {"enum": ["CENTIMETERS"], "title": "Centimeters", "description": "Centimeters"}], "description": "Units that can be used to measure a length"}}, "description": "The size of some item in one direction."}, "class": {"type": ["object", "string", "null"], "properties": {"id": {"type": ["number", "null"], "title": "Int", "description": "The `Int` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1."}, "name": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "categoryId": {"type": ["number", "null"], "title": "Int", "description": "The `Int` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1."}, "categoryName": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "options": {"type": "array", "items": {"anyOf": [{"type": ["object", "string", "null"], "description": "This type contains the essential information for a single Wayfair product class option."}, {"type": "null"}]}}, "attributes": {"type": "array", "items": {"anyOf": [{"type": ["object", "string", "null"], "description": "A single attribute in a class schema"}, {"type": "null"}]}}}, "description": "This type contains the essential information for a single Wayfair product class."}, "manufacturer": {"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "ID", "description": "The `ID` scalar type represents a unique identifier, often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\"4\"`) or integer (such as `4`) input value will be accepted as an ID."}, "name": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "address": {"type": ["object", "string", "null"], "description": "An address"}, "hasWhitelabeling": {"type": ["boolean", "null"], "title": "Boolean", "description": "The `Boolean` scalar type represents `true` or `false`."}}, "description": "A manufacturer of a product"}, "collection": {"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "ID", "description": "The `ID` scalar type represents a unique identifier, often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\"4\"`) or integer (such as `4`) input value will be accepted as an ID."}, "name": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "description": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "products": {"type": "array", "items": {"type": ["object", "string", "null"], "description": "A product that Wayfair has on site."}}}, "description": "A collection of related products."}, "options": {"type": "array", "items": {"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "ID", "description": "The `ID` scalar type represents a unique identifier, often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\"4\"`) or integer (such as `4`) input value will be accepted as an ID."}, "category": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "name": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}}, "description": "This type contains the essential information about a single product option."}}, "variations": {"type": "array", "items": {"type": ["object", "string", "null"], "properties": {"url": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "imageUrl": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "displayDimensions": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "optionCombination": {"type": "array", "items": {"type": ["object", "string", "null"], "description": "This type contains the essential information about a single product option."}}, "product": {"type": ["object", "string", "null"], "description": "A product that Wayfair has on site."}, "parts": {"type": "array", "items": {"type": ["object", "string", "null"], "description": "Information about a product that a specific supplier has provided."}}}, "description": "A purchasable product listed on Wayfair's site with all of its attributes and option specific information"}}, "returnPolicy": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}}, "description": "A product that Wayfair has on site."}}}, "description": "A collection of related products."}, "B2bArInvoice": {"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "Int32", "description": "The `Int32` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1."}, "description": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "status": {"type": ["string", "null"], "anyOf": [{"enum": ["NEW"], "title": "Recently created or unprocessed", "description": "Recently created or unprocessed"}, {"enum": ["PENDING_APPROVAL"], "title": "Sent for approval but not approved yet", "description": "Sent for approval but not approved yet"}, {"enum": ["APPROVED"], "title": "Approved by the requested approver", "description": "Approved by the requested approver"}, {"enum": ["SENT_TO_RECIPIENT"], "title": "Sent to the intended recipient(s)", "description": "Sent to the intended recipient(s)"}, {"enum": ["PENDING_PAYMENT"], "title": "Is waiting for payment or to be reconciled", "description": "Is waiting for payment or to be reconciled"}, {"enum": ["PARTIALLY_PAID"], "title": "Is partially paid for and still to be matched against payment(s)", "description": "Is partially paid for and still to be matched against payment(s)"}, {"enum": ["FULLY_PAID"], "title": "Is fully paid for and matched/reconciled against payment(s)", "description": "Is fully paid for and matched/reconciled against payment(s)"}, {"enum": ["REJECTED"], "title": "Rejected in the process of approval", "description": "Rejected in the process of approval"}, {"enum": ["CANCELLED"], "title": "Cancelled due to some reason", "description": "Cancelled due to some reason"}], "description": "Enumerates all the statuses an AR Invoice can be in at any given point."}, "revenueSource": {"type": ["string", "null"], "anyOf": [{"enum": ["B2B"], "title": "Business to business type", "description": "Business to business type"}, {"enum": ["CASTLEGATE"], "title": "Castlegate or fulfillment services", "description": "Castlegate or fulfillment services"}, {"enum": ["SPONSORED_PRODUCTS"], "title": "Sponsored products type", "description": "Sponsored products type"}, {"enum": ["MAAS_MEDIA"], "title": "Maas media type", "description": "Maas media type"}, {"enum": ["LIQUIDATION"], "title": "Liquidation type", "description": "Liquidation type"}, {"enum": ["GIFT_CARD"], "title": "Gift card type", "description": "Gift card type"}], "description": "Types of different revenue sources or streams."}, "dueBy": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "paidOn": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "currency": {"type": ["string", "null"], "anyOf": [{"enum": ["US_DOLLAR"], "title": "US Dollar", "description": "US Dollar"}, {"enum": ["BRITISH_POUND"], "title": "British Pound", "description": "British Pound"}, {"enum": ["EURO"], "title": "Euro", "description": "Euro"}, {"enum": ["CANADIAN_DOLLAR"], "title": "Canadian Dollar", "description": "Canadian Dollar"}, {"enum": ["AUSTRALIAN_DOLLAR"], "title": "Australian Dollar", "description": "Australian Dollar"}], "description": "Types of currency"}, "invoiceAmount": {"type": ["number", "null"], "title": "Float", "description": "The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point)."}, "taxTotalAmount": {"type": ["number", "null"], "title": "Float", "description": "The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point)."}, "originalInvoiceTotalAmount": {"type": ["number", "null"], "title": "Float", "description": "The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point)."}, "originalTaxTotalAmount": {"type": ["number", "null"], "title": "Float", "description": "The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point)."}, "paidAmount": {"type": ["number", "null"], "title": "Float", "description": "The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point)."}, "dueAmount": {"type": ["number", "null"], "title": "Float", "description": "The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point)."}, "details": {"type": "array", "items": {"anyOf": [{"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "Int64", "description": "The `Int64` scalar type represents non-fractional signed whole numeric values. Int can represent values between PHP_INT_MIN AND PHP_INT_MAX."}, "quantity": {"type": ["number", "null"], "title": "Float", "description": "The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point)."}, "unitAmount": {"type": ["number", "null"], "title": "Float", "description": "The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point)."}, "itemAmount": {"type": ["number", "null"], "title": "Float", "description": "The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point)."}, "description": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "taxes": {"type": "array", "items": {"anyOf": [{"type": ["object", "string", "null"], "properties": {"type": {"type": ["string", "null"], "anyOf": [{"enum": ["SalesTax"], "title": "Sales Tax", "description": "Sales Tax"}, {"enum": ["SellersUseTax"], "title": "Sellers Use Tax", "description": "Sellers Use Tax"}, {"enum": ["EcoFee"], "title": "Eco Fee", "description": "Eco Fee"}, {"enum": ["SHP"], "title": "Shipment Tax", "description": "Shipment Tax"}, {"enum": ["GST"], "title": "GST Tax", "description": "GST Tax"}, {"enum": ["PST"], "title": "PST Tax", "description": "PST Tax"}, {"enum": ["QST"], "title": "QST Tax", "description": "QST Tax"}, {"enum": ["HST"], "title": "HST Tax", "description": "HST Tax"}, {"enum": ["VAT"], "title": "VAT Tax", "description": "VAT Tax"}, {"enum": ["NA"], "title": "Not Available", "description": "Not Available"}], "description": "An enumeration of Tax Types"}, "value": {"type": ["number", "null"], "title": "Float", "description": "The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point)."}}, "description": "The calculated tax amounts per type"}, {"type": "null"}]}}}, "description": "Detail of an AR Invoice - this contains all the common properties an invoice detail/line item should have"}, {"type": "null"}]}}, "documents": {"type": "array", "items": {"anyOf": [{"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "Int32", "description": "The `Int32` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1."}, "name": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "createdOn": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "type": {"type": ["string", "null"], "anyOf": [{"enum": ["pdf"], "title": "PDF form of an AR Invoice", "description": "PDF form of an AR Invoice"}, {"enum": ["csv"], "title": "CSV form of an AR Invoice", "description": "CSV form of an AR Invoice"}], "description": "Types of tangible readable AR Invoice document"}, "path": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "remoteStorageDownloadAdminUrl": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "remoteStoragePath": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}}, "description": "A document related to an AR Invoice"}, {"type": "null"}]}}, "customer": {"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "ID", "description": "The `ID` scalar type represents a unique identifier, often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\"4\"`) or integer (such as `4`) input value will be accepted as an ID."}, "firstName": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "lastName": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "postalCode": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "email": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "contactAtPhone": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}}, "description": "A customer"}, "orders": {"type": "array", "items": {"anyOf": [{"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "Int64", "description": "The `Int64` scalar type represents non-fractional signed whole numeric values. Int can represent values between PHP_INT_MIN AND PHP_INT_MAX."}}, "description": "Order entity, which denotes a customer placed order in one of the Wayfair customer facing sites."}, {"type": "null"}]}}, "orderPayments": {"type": "array", "items": {"anyOf": [{"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "Int64", "description": "The `Int64` scalar type represents non-fractional signed whole numeric values. Int can represent values between PHP_INT_MIN AND PHP_INT_MAX."}}, "description": "Payment related to a customer placed order"}, {"type": "null"}]}}, "communications": {"type": "array", "items": {"anyOf": [{"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "Int64", "description": "The `Int64` scalar type represents non-fractional signed whole numeric values. Int can represent values between PHP_INT_MIN AND PHP_INT_MAX."}, "type": {"type": ["string", "null"], "anyOf": [{"enum": ["UNSPECIFIED"], "title": "A communication for which no type was specified", "description": "A communication for which no type was specified"}, {"enum": ["INITIAL_COMMUNICATION"], "title": "An initial communication containing the invoice and payment information", "description": "An initial communication containing the invoice and payment information"}, {"enum": ["CANCELLATION_COMMUNICATION"], "title": "A cancellation communication containing the cancelled invoice information", "description": "A cancellation communication containing the cancelled invoice information"}, {"enum": ["NETTABLE_REMOVED"], "title": "A communication sent out when the netting status of an invoice is turned off", "description": "A communication sent out when the netting status of an invoice is turned off"}], "description": "Types of different revenue communications."}, "queuedOn": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "emailMessage": {"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "Int64", "description": "The `Int64` scalar type represents non-fractional signed whole numeric values. Int can represent values between PHP_INT_MIN AND PHP_INT_MAX."}}, "description": "An email communication"}}, "description": "A revenue invoice communication"}, {"type": "null"}]}}, "creator": {"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "Int64", "description": "The `Int64` scalar type represents non-fractional signed whole numeric values. Int can represent values between PHP_INT_MIN AND PHP_INT_MAX."}, "type": {"type": ["string", "null"], "anyOf": [{"enum": ["SUPPLIER"], "title": "Supplier type creator", "description": "Supplier type creator"}, {"enum": ["ADMIN_USER"], "title": "Admin user as a creator", "description": "Admin user as a creator"}, {"enum": ["EXTRANET_USER"], "title": "An extranet user as a creator", "description": "An extranet user as a creator"}, {"enum": ["INTERNAL"], "title": "An internal user as a creator", "description": "An internal user as a creator"}], "description": "Enumerates all the types of an AR Invoice creator."}}, "description": "A revenue invoice creator"}, "createdOn": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "effectiveOn": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "isReconciled": {"type": ["boolean", "null"], "title": "Boolean", "description": "The `Boolean` scalar type represents `true` or `false`."}, "reconciledBy": {"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "Int32", "description": "The `Int32` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1."}, "type": {"type": ["string", "null"], "anyOf": [{"enum": ["ADMIN_USER"], "title": "An admin user or employee logged in, having a valid Employee ID", "description": "An admin user or employee logged in, having a valid Employee ID"}, {"enum": ["AP_PAYMENT_PROCESSOR"], "title": "Automated accounts payable payment processor", "description": "Automated accounts payable payment processor"}], "description": "Types of different reconcilers that can potentially perform reconciliation of different AR components"}}, "description": "Represents a AR reconciler entity - who is responsible for reconciling the AR components"}, "nettable": {"type": ["boolean", "null"], "title": "Boolean", "description": "The `Boolean` scalar type represents `true` or `false`."}, "originallyNettable": {"type": ["boolean", "null"], "title": "Boolean", "description": "The `Boolean` scalar type represents `true` or `false`."}, "invoiceReceipientsEmailAddresses": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "payments": {"type": "array", "items": {"anyOf": [{"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "Int32", "description": "The `Int32` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1."}, "status": {"type": ["string", "null"], "anyOf": [{"enum": ["NEW"], "title": "Recently created or unprocessed", "description": "Recently created or unprocessed"}, {"enum": ["PARTIALLY_MATCHED"], "title": "Partially matched i.e. still available for reconciliation", "description": "Partially matched i.e. still available for reconciliation"}, {"enum": ["FULLY_MATCHED"], "title": "Fully matched i.e. reconciled completely", "description": "Fully matched i.e. reconciled completely"}, {"enum": ["VOID"], "title": "Voided", "description": "Voided"}], "description": "Enumerates all the statuses an AR Payment can be in at any given point."}, "revenueSource": {"type": ["string", "null"], "anyOf": [{"enum": ["B2B"], "title": "Business to business type", "description": "Business to business type"}, {"enum": ["CASTLEGATE"], "title": "Castlegate or fulfillment services", "description": "Castlegate or fulfillment services"}, {"enum": ["SPONSORED_PRODUCTS"], "title": "Sponsored products type", "description": "Sponsored products type"}, {"enum": ["MAAS_MEDIA"], "title": "Maas media type", "description": "Maas media type"}, {"enum": ["LIQUIDATION"], "title": "Liquidation type", "description": "Liquidation type"}, {"enum": ["GIFT_CARD"], "title": "Gift card type", "description": "Gift card type"}], "description": "Types of different revenue sources or streams."}, "amount": {"type": ["number", "null"], "title": "Float", "description": "The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point)."}, "currency": {"type": ["string", "null"], "anyOf": [{"enum": ["US_DOLLAR"], "title": "US Dollar", "description": "US Dollar"}, {"enum": ["BRITISH_POUND"], "title": "British Pound", "description": "British Pound"}, {"enum": ["EURO"], "title": "Euro", "description": "Euro"}, {"enum": ["CANADIAN_DOLLAR"], "title": "Canadian Dollar", "description": "Canadian Dollar"}, {"enum": ["AUSTRALIAN_DOLLAR"], "title": "Australian Dollar", "description": "Australian Dollar"}], "description": "Types of currency"}, "reference": {"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "Int64", "description": "The `Int64` scalar type represents non-fractional signed whole numeric values. Int can represent values between PHP_INT_MIN AND PHP_INT_MAX."}, "type": {"type": ["string", "null"], "anyOf": [{"enum": ["SELF"], "title": "Self if the payment was created directly by itself and there is no external reference", "description": "Self if the payment was created directly by itself and there is no external reference"}, {"enum": ["CLASSIFICATION_TOOL"], "title": "An admin classification tool", "description": "An admin classification tool"}, {"enum": ["AP_VOUCHER"], "title": "An accounts payable voucher or payment that was cut for a vendor to pay our AP balances", "description": "An accounts payable voucher or payment that was cut for a vendor to pay our AP balances"}, {"enum": ["CREDIT_MEMO"], "title": "A credit to the vendor", "description": "A credit to the vendor"}], "description": "Enumerates all the references types an AR payment can have."}}, "description": "Represents a reference or an origination of an AR payment. An AR payment can refer to an outside payment or simply to itself"}, "payer": {"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "Int64", "description": "The `Int64` scalar type represents non-fractional signed whole numeric values. Int can represent values between PHP_INT_MIN AND PHP_INT_MAX."}, "type": {"type": ["string", "null"], "anyOf": [{"enum": ["SUPPLIER"], "title": "Supplier as a payer of an AR Payment", "description": "Supplier as a payer of an AR Payment"}, {"enum": ["AP_VOUCHER"], "title": "AP Voucher as a payer of an AR Payment", "description": "AP Voucher as a payer of an AR Payment"}, {"enum": ["CUSTOMER"], "title": "Customer as a payer of an AR Payment", "description": "Customer as a payer of an AR Payment"}, {"enum": ["FULFILLMENT_CUSTOMER"], "title": "Fulfillment customer as a payer of an AR Payment", "description": "Fulfillment customer as a payer of an AR Payment"}], "description": "Enumerates all types of payers that can make an AR payment."}}, "description": "Represents an entity that uses Wayfair's services and pays for them"}, "createdOn": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "description": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "matchedAmount": {"type": ["number", "null"], "title": "Float", "description": "The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point)."}, "isReconciled": {"type": ["boolean", "null"], "title": "Boolean", "description": "The `Boolean` scalar type represents `true` or `false`."}, "reconciledOn": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "reconciledBy": {"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "Int32", "description": "The `Int32` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1."}, "type": {"type": ["string", "null"], "anyOf": [{"enum": ["ADMIN_USER"], "title": "An admin user or employee logged in, having a valid Employee ID", "description": "An admin user or employee logged in, having a valid Employee ID"}, {"enum": ["AP_PAYMENT_PROCESSOR"], "title": "Automated accounts payable payment processor", "description": "Automated accounts payable payment processor"}], "description": "Types of different reconcilers that can potentially perform reconciliation of different AR components"}}, "description": "Represents a AR reconciler entity - who is responsible for reconciling the AR components"}}, "description": "Accounts Receivable Payment entity which depicts a payment that we have realized as a \"Revenue\" and which we could have received from different revenue streams or sources."}, {"type": "null"}]}}, "isCreditMemo": {"type": ["boolean", "null"], "title": "Boolean", "description": "The `Boolean` scalar type represents `true` or `false`."}, "creditMemos": {"type": "array", "items": {"anyOf": [{"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "Int32", "description": "The `Int32` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1."}, "description": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "status": {"type": ["string", "null"], "anyOf": [{"enum": ["NEW"], "title": "Recently created or unprocessed", "description": "Recently created or unprocessed"}, {"enum": ["PENDING_APPROVAL"], "title": "Sent for approval but not approved yet", "description": "Sent for approval but not approved yet"}, {"enum": ["APPROVED"], "title": "Approved by the requested approver", "description": "Approved by the requested approver"}, {"enum": ["SENT_TO_RECIPIENT"], "title": "Sent to the intended recipient(s)", "description": "Sent to the intended recipient(s)"}, {"enum": ["PENDING_PAYMENT"], "title": "Is waiting for payment or to be reconciled", "description": "Is waiting for payment or to be reconciled"}, {"enum": ["PARTIALLY_PAID"], "title": "Is partially paid for and still to be matched against payment(s)", "description": "Is partially paid for and still to be matched against payment(s)"}, {"enum": ["FULLY_PAID"], "title": "Is fully paid for and matched/reconciled against payment(s)", "description": "Is fully paid for and matched/reconciled against payment(s)"}, {"enum": ["REJECTED"], "title": "Rejected in the process of approval", "description": "Rejected in the process of approval"}, {"enum": ["CANCELLED"], "title": "Cancelled due to some reason", "description": "Cancelled due to some reason"}], "description": "Enumerates all the statuses an AR Invoice can be in at any given point."}, "revenueSource": {"type": ["string", "null"], "anyOf": [{"enum": ["B2B"], "title": "Business to business type", "description": "Business to business type"}, {"enum": ["CASTLEGATE"], "title": "Castlegate or fulfillment services", "description": "Castlegate or fulfillment services"}, {"enum": ["SPONSORED_PRODUCTS"], "title": "Sponsored products type", "description": "Sponsored products type"}, {"enum": ["MAAS_MEDIA"], "title": "Maas media type", "description": "Maas media type"}, {"enum": ["LIQUIDATION"], "title": "Liquidation type", "description": "Liquidation type"}, {"enum": ["GIFT_CARD"], "title": "Gift card type", "description": "Gift card type"}], "description": "Types of different revenue sources or streams."}, "dueBy": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "paidOn": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "currency": {"type": ["string", "null"], "anyOf": [{"enum": ["US_DOLLAR"], "title": "US Dollar", "description": "US Dollar"}, {"enum": ["BRITISH_POUND"], "title": "British Pound", "description": "British Pound"}, {"enum": ["EURO"], "title": "Euro", "description": "Euro"}, {"enum": ["CANADIAN_DOLLAR"], "title": "Canadian Dollar", "description": "Canadian Dollar"}, {"enum": ["AUSTRALIAN_DOLLAR"], "title": "Australian Dollar", "description": "Australian Dollar"}], "description": "Types of currency"}, "invoiceAmount": {"type": ["number", "null"], "title": "Float", "description": "The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point)."}, "taxTotalAmount": {"type": ["number", "null"], "title": "Float", "description": "The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point)."}, "originalInvoiceTotalAmount": {"type": ["number", "null"], "title": "Float", "description": "The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point)."}, "originalTaxTotalAmount": {"type": ["number", "null"], "title": "Float", "description": "The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point)."}, "paidAmount": {"type": ["number", "null"], "title": "Float", "description": "The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point)."}, "dueAmount": {"type": ["number", "null"], "title": "Float", "description": "The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point)."}, "documents": {"type": "array", "items": {"anyOf": [{"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "Int32", "description": "The `Int32` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1."}, "name": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "createdOn": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "type": {"type": ["string", "null"], "anyOf": [{"enum": ["pdf"], "title": "PDF form of an AR Invoice", "description": "PDF form of an AR Invoice"}, {"enum": ["csv"], "title": "CSV form of an AR Invoice", "description": "CSV form of an AR Invoice"}], "description": "Types of tangible readable AR Invoice document"}, "path": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "remoteStorageDownloadAdminUrl": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "remoteStoragePath": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}}, "description": "A document related to an AR Invoice"}, {"type": "null"}]}}, "communications": {"type": "array", "items": {"anyOf": [{"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "Int64", "description": "The `Int64` scalar type represents non-fractional signed whole numeric values. Int can represent values between PHP_INT_MIN AND PHP_INT_MAX."}, "type": {"type": ["string", "null"], "anyOf": [{"enum": ["UNSPECIFIED"], "title": "A communication for which no type was specified", "description": "A communication for which no type was specified"}, {"enum": ["INITIAL_COMMUNICATION"], "title": "An initial communication containing the invoice and payment information", "description": "An initial communication containing the invoice and payment information"}, {"enum": ["CANCELLATION_COMMUNICATION"], "title": "A cancellation communication containing the cancelled invoice information", "description": "A cancellation communication containing the cancelled invoice information"}, {"enum": ["NETTABLE_REMOVED"], "title": "A communication sent out when the netting status of an invoice is turned off", "description": "A communication sent out when the netting status of an invoice is turned off"}], "description": "Types of different revenue communications."}, "queuedOn": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "emailMessage": {"type": ["object", "string", "null"], "description": "An email communication"}}, "description": "A revenue invoice communication"}, {"type": "null"}]}}, "creator": {"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "Int64", "description": "The `Int64` scalar type represents non-fractional signed whole numeric values. Int can represent values between PHP_INT_MIN AND PHP_INT_MAX."}, "type": {"type": ["string", "null"], "anyOf": [{"enum": ["SUPPLIER"], "title": "Supplier type creator", "description": "Supplier type creator"}, {"enum": ["ADMIN_USER"], "title": "Admin user as a creator", "description": "Admin user as a creator"}, {"enum": ["EXTRANET_USER"], "title": "An extranet user as a creator", "description": "An extranet user as a creator"}, {"enum": ["INTERNAL"], "title": "An internal user as a creator", "description": "An internal user as a creator"}], "description": "Enumerates all the types of an AR Invoice creator."}}, "description": "A revenue invoice creator"}, "createdOn": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "effectiveOn": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "isReconciled": {"type": ["boolean", "null"], "title": "Boolean", "description": "The `Boolean` scalar type represents `true` or `false`."}, "reconciledBy": {"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "Int32", "description": "The `Int32` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1."}, "type": {"type": ["string", "null"], "anyOf": [{"enum": ["ADMIN_USER"], "title": "An admin user or employee logged in, having a valid Employee ID", "description": "An admin user or employee logged in, having a valid Employee ID"}, {"enum": ["AP_PAYMENT_PROCESSOR"], "title": "Automated accounts payable payment processor", "description": "Automated accounts payable payment processor"}], "description": "Types of different reconcilers that can potentially perform reconciliation of different AR components"}}, "description": "Represents a AR reconciler entity - who is responsible for reconciling the AR components"}, "nettable": {"type": ["boolean", "null"], "title": "Boolean", "description": "The `Boolean` scalar type represents `true` or `false`."}, "originallyNettable": {"type": ["boolean", "null"], "title": "Boolean", "description": "The `Boolean` scalar type represents `true` or `false`."}, "invoiceReceipientsEmailAddresses": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "payments": {"type": "array", "items": {"anyOf": [{"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "Int32", "description": "The `Int32` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1."}, "status": {"type": ["string", "null"], "anyOf": [{"enum": ["NEW"], "title": "Recently created or unprocessed", "description": "Recently created or unprocessed"}, {"enum": ["PARTIALLY_MATCHED"], "title": "Partially matched i.e. still available for reconciliation", "description": "Partially matched i.e. still available for reconciliation"}, {"enum": ["FULLY_MATCHED"], "title": "Fully matched i.e. reconciled completely", "description": "Fully matched i.e. reconciled completely"}, {"enum": ["VOID"], "title": "Voided", "description": "Voided"}], "description": "Enumerates all the statuses an AR Payment can be in at any given point."}, "revenueSource": {"type": ["string", "null"], "anyOf": [{"enum": ["B2B"], "title": "Business to business type", "description": "Business to business type"}, {"enum": ["CASTLEGATE"], "title": "Castlegate or fulfillment services", "description": "Castlegate or fulfillment services"}, {"enum": ["SPONSORED_PRODUCTS"], "title": "Sponsored products type", "description": "Sponsored products type"}, {"enum": ["MAAS_MEDIA"], "title": "Maas media type", "description": "Maas media type"}, {"enum": ["LIQUIDATION"], "title": "Liquidation type", "description": "Liquidation type"}, {"enum": ["GIFT_CARD"], "title": "Gift card type", "description": "Gift card type"}], "description": "Types of different revenue sources or streams."}, "amount": {"type": ["number", "null"], "title": "Float", "description": "The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point)."}, "currency": {"type": ["string", "null"], "anyOf": [{"enum": ["US_DOLLAR"], "title": "US Dollar", "description": "US Dollar"}, {"enum": ["BRITISH_POUND"], "title": "British Pound", "description": "British Pound"}, {"enum": ["EURO"], "title": "Euro", "description": "Euro"}, {"enum": ["CANADIAN_DOLLAR"], "title": "Canadian Dollar", "description": "Canadian Dollar"}, {"enum": ["AUSTRALIAN_DOLLAR"], "title": "Australian Dollar", "description": "Australian Dollar"}], "description": "Types of currency"}, "reference": {"type": ["object", "string", "null"], "description": "Represents a reference or an origination of an AR payment. An AR payment can refer to an outside payment or simply to itself"}, "payer": {"type": ["object", "string", "null"], "description": "Represents an entity that uses Wayfair's services and pays for them"}, "createdOn": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "description": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "matchedAmount": {"type": ["number", "null"], "title": "Float", "description": "The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point)."}, "isReconciled": {"type": ["boolean", "null"], "title": "Boolean", "description": "The `Boolean` scalar type represents `true` or `false`."}, "reconciledOn": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "reconciledBy": {"type": ["object", "string", "null"], "description": "Represents a AR reconciler entity - who is responsible for reconciling the AR components"}}, "description": "Accounts Receivable Payment entity which depicts a payment that we have realized as a \"Revenue\" and which we could have received from different revenue streams or sources."}, {"type": "null"}]}}, "isCreditMemo": {"type": ["boolean", "null"], "title": "Boolean", "description": "The `Boolean` scalar type represents `true` or `false`."}, "statusUpdateLogs": {"type": "array", "items": {"anyOf": [{"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "Int64", "description": "The `Int64` scalar type represents non-fractional signed whole numeric values. Int can represent values between PHP_INT_MIN AND PHP_INT_MAX."}, "fromStatus": {"type": ["string", "null"], "anyOf": [{"enum": ["NEW"], "title": "Recently created or unprocessed", "description": "Recently created or unprocessed"}, {"enum": ["PENDING_APPROVAL"], "title": "Sent for approval but not approved yet", "description": "Sent for approval but not approved yet"}, {"enum": ["APPROVED"], "title": "Approved by the requested approver", "description": "Approved by the requested approver"}, {"enum": ["SENT_TO_RECIPIENT"], "title": "Sent to the intended recipient(s)", "description": "Sent to the intended recipient(s)"}, {"enum": ["PENDING_PAYMENT"], "title": "Is waiting for payment or to be reconciled", "description": "Is waiting for payment or to be reconciled"}, {"enum": ["PARTIALLY_PAID"], "title": "Is partially paid for and still to be matched against payment(s)", "description": "Is partially paid for and still to be matched against payment(s)"}, {"enum": ["FULLY_PAID"], "title": "Is fully paid for and matched/reconciled against payment(s)", "description": "Is fully paid for and matched/reconciled against payment(s)"}, {"enum": ["REJECTED"], "title": "Rejected in the process of approval", "description": "Rejected in the process of approval"}, {"enum": ["CANCELLED"], "title": "Cancelled due to some reason", "description": "Cancelled due to some reason"}], "description": "Enumerates all the statuses an AR Invoice can be in at any given point."}, "toStatus": {"type": ["string", "null"], "anyOf": [{"enum": ["NEW"], "title": "Recently created or unprocessed", "description": "Recently created or unprocessed"}, {"enum": ["PENDING_APPROVAL"], "title": "Sent for approval but not approved yet", "description": "Sent for approval but not approved yet"}, {"enum": ["APPROVED"], "title": "Approved by the requested approver", "description": "Approved by the requested approver"}, {"enum": ["SENT_TO_RECIPIENT"], "title": "Sent to the intended recipient(s)", "description": "Sent to the intended recipient(s)"}, {"enum": ["PENDING_PAYMENT"], "title": "Is waiting for payment or to be reconciled", "description": "Is waiting for payment or to be reconciled"}, {"enum": ["PARTIALLY_PAID"], "title": "Is partially paid for and still to be matched against payment(s)", "description": "Is partially paid for and still to be matched against payment(s)"}, {"enum": ["FULLY_PAID"], "title": "Is fully paid for and matched/reconciled against payment(s)", "description": "Is fully paid for and matched/reconciled against payment(s)"}, {"enum": ["REJECTED"], "title": "Rejected in the process of approval", "description": "Rejected in the process of approval"}, {"enum": ["CANCELLED"], "title": "Cancelled due to some reason", "description": "Cancelled due to some reason"}], "description": "Enumerates all the statuses an AR Invoice can be in at any given point."}, "updatedOn": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "updatedBy": {"type": ["object", "string", "null"], "description": "Fetches data for an employee."}}, "description": "Log entry for AR invoice status update"}, {"type": "null"}]}}, "reference": {"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "Int64", "description": "The `Int64` scalar type represents non-fractional signed whole numeric values. Int can represent values between PHP_INT_MIN AND PHP_INT_MAX."}}, "description": "A Reference to External Systems"}}, "description": "Interface for an AR Invoice - this contains all the common properties an AR Invoice should have"}, {"type": "null"}]}}, "statusUpdateLogs": {"type": "array", "items": {"anyOf": [{"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "Int64", "description": "The `Int64` scalar type represents non-fractional signed whole numeric values. Int can represent values between PHP_INT_MIN AND PHP_INT_MAX."}, "fromStatus": {"type": ["string", "null"], "anyOf": [{"enum": ["NEW"], "title": "Recently created or unprocessed", "description": "Recently created or unprocessed"}, {"enum": ["PENDING_APPROVAL"], "title": "Sent for approval but not approved yet", "description": "Sent for approval but not approved yet"}, {"enum": ["APPROVED"], "title": "Approved by the requested approver", "description": "Approved by the requested approver"}, {"enum": ["SENT_TO_RECIPIENT"], "title": "Sent to the intended recipient(s)", "description": "Sent to the intended recipient(s)"}, {"enum": ["PENDING_PAYMENT"], "title": "Is waiting for payment or to be reconciled", "description": "Is waiting for payment or to be reconciled"}, {"enum": ["PARTIALLY_PAID"], "title": "Is partially paid for and still to be matched against payment(s)", "description": "Is partially paid for and still to be matched against payment(s)"}, {"enum": ["FULLY_PAID"], "title": "Is fully paid for and matched/reconciled against payment(s)", "description": "Is fully paid for and matched/reconciled against payment(s)"}, {"enum": ["REJECTED"], "title": "Rejected in the process of approval", "description": "Rejected in the process of approval"}, {"enum": ["CANCELLED"], "title": "Cancelled due to some reason", "description": "Cancelled due to some reason"}], "description": "Enumerates all the statuses an AR Invoice can be in at any given point."}, "toStatus": {"type": ["string", "null"], "anyOf": [{"enum": ["NEW"], "title": "Recently created or unprocessed", "description": "Recently created or unprocessed"}, {"enum": ["PENDING_APPROVAL"], "title": "Sent for approval but not approved yet", "description": "Sent for approval but not approved yet"}, {"enum": ["APPROVED"], "title": "Approved by the requested approver", "description": "Approved by the requested approver"}, {"enum": ["SENT_TO_RECIPIENT"], "title": "Sent to the intended recipient(s)", "description": "Sent to the intended recipient(s)"}, {"enum": ["PENDING_PAYMENT"], "title": "Is waiting for payment or to be reconciled", "description": "Is waiting for payment or to be reconciled"}, {"enum": ["PARTIALLY_PAID"], "title": "Is partially paid for and still to be matched against payment(s)", "description": "Is partially paid for and still to be matched against payment(s)"}, {"enum": ["FULLY_PAID"], "title": "Is fully paid for and matched/reconciled against payment(s)", "description": "Is fully paid for and matched/reconciled against payment(s)"}, {"enum": ["REJECTED"], "title": "Rejected in the process of approval", "description": "Rejected in the process of approval"}, {"enum": ["CANCELLED"], "title": "Cancelled due to some reason", "description": "Cancelled due to some reason"}], "description": "Enumerates all the statuses an AR Invoice can be in at any given point."}, "updatedOn": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "updatedBy": {"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "ID", "description": "The `ID` scalar type represents a unique identifier, often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\"4\"`) or integer (such as `4`) input value will be accepted as an ID."}, "firstName": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "middleName": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "lastName": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "fullName": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "userName": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "nickname": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "displayLastName": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "email": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "samAccountName": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "isActive": {"type": ["boolean", "null"], "title": "Boolean", "description": "The `Boolean` scalar type represents `true` or `false`."}, "birthday": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "seniorityDate": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "startDate": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "forecastEndDate": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "terminationDate": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "isUnlimitedContract": {"type": ["boolean", "null"], "title": "Boolean", "description": "The `Boolean` scalar type represents `true` or `false`."}, "isEngineer": {"type": ["boolean", "null"], "title": "Boolean", "description": "The `Boolean` scalar type represents `true` or `false`."}, "worksOnSoftware": {"type": ["boolean", "null"], "title": "Boolean", "description": "The `Boolean` scalar type represents `true` or `false`."}, "title": {"type": ["object", "string", "null"], "description": "Wayfair job titles"}, "profile": {"type": ["object", "string", "null"], "description": "Profile information of an employee (ex: Massachusetts Employee, German Employee)"}, "type": {"type": ["object", "string", "null"], "description": "Wayfair employee categories (ex: intern, contract, full time)"}, "location": {"type": ["object", "string", "null"], "description": "Wayfair employee location (ex Copley Boston)"}, "phoneExtension": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "manager": {"type": ["object", "string", "null"], "description": "Fetches data for an employee."}, "workgroup": {"type": ["object", "string", "null"], "description": "Wayfair workgroup information"}, "processedByEmployee": {"type": ["object", "string", "null"], "description": "Fetches data for an employee."}, "directReports": {"type": "array", "items": {"anyOf": [{"type": ["object", "string", "null"], "description": "Fetches data for an employee."}, {"type": "null"}]}}}, "description": "Fetches data for an employee."}}, "description": "Log entry for AR invoice status update"}, {"type": "null"}]}}, "reference": {"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "Int64", "description": "The `Int64` scalar type represents non-fractional signed whole numeric values. Int can represent values between PHP_INT_MIN AND PHP_INT_MAX."}}, "description": "A Reference to External Systems"}}, "description": "B2B Type of AR invoice which has all the properties of an AR invoice along with B2B specific details"}, "ArInvoiceInterface": {"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "Int32", "description": "The `Int32` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1."}, "description": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "status": {"type": ["string", "null"], "anyOf": [{"enum": ["NEW"], "title": "Recently created or unprocessed", "description": "Recently created or unprocessed"}, {"enum": ["PENDING_APPROVAL"], "title": "Sent for approval but not approved yet", "description": "Sent for approval but not approved yet"}, {"enum": ["APPROVED"], "title": "Approved by the requested approver", "description": "Approved by the requested approver"}, {"enum": ["SENT_TO_RECIPIENT"], "title": "Sent to the intended recipient(s)", "description": "Sent to the intended recipient(s)"}, {"enum": ["PENDING_PAYMENT"], "title": "Is waiting for payment or to be reconciled", "description": "Is waiting for payment or to be reconciled"}, {"enum": ["PARTIALLY_PAID"], "title": "Is partially paid for and still to be matched against payment(s)", "description": "Is partially paid for and still to be matched against payment(s)"}, {"enum": ["FULLY_PAID"], "title": "Is fully paid for and matched/reconciled against payment(s)", "description": "Is fully paid for and matched/reconciled against payment(s)"}, {"enum": ["REJECTED"], "title": "Rejected in the process of approval", "description": "Rejected in the process of approval"}, {"enum": ["CANCELLED"], "title": "Cancelled due to some reason", "description": "Cancelled due to some reason"}], "description": "Enumerates all the statuses an AR Invoice can be in at any given point."}, "revenueSource": {"type": ["string", "null"], "anyOf": [{"enum": ["B2B"], "title": "Business to business type", "description": "Business to business type"}, {"enum": ["CASTLEGATE"], "title": "Castlegate or fulfillment services", "description": "Castlegate or fulfillment services"}, {"enum": ["SPONSORED_PRODUCTS"], "title": "Sponsored products type", "description": "Sponsored products type"}, {"enum": ["MAAS_MEDIA"], "title": "Maas media type", "description": "Maas media type"}, {"enum": ["LIQUIDATION"], "title": "Liquidation type", "description": "Liquidation type"}, {"enum": ["GIFT_CARD"], "title": "Gift card type", "description": "Gift card type"}], "description": "Types of different revenue sources or streams."}, "dueBy": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "paidOn": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "currency": {"type": ["string", "null"], "anyOf": [{"enum": ["US_DOLLAR"], "title": "US Dollar", "description": "US Dollar"}, {"enum": ["BRITISH_POUND"], "title": "British Pound", "description": "British Pound"}, {"enum": ["EURO"], "title": "Euro", "description": "Euro"}, {"enum": ["CANADIAN_DOLLAR"], "title": "Canadian Dollar", "description": "Canadian Dollar"}, {"enum": ["AUSTRALIAN_DOLLAR"], "title": "Australian Dollar", "description": "Australian Dollar"}], "description": "Types of currency"}, "invoiceAmount": {"type": ["number", "null"], "title": "Float", "description": "The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point)."}, "taxTotalAmount": {"type": ["number", "null"], "title": "Float", "description": "The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point)."}, "originalInvoiceTotalAmount": {"type": ["number", "null"], "title": "Float", "description": "The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point)."}, "originalTaxTotalAmount": {"type": ["number", "null"], "title": "Float", "description": "The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point)."}, "paidAmount": {"type": ["number", "null"], "title": "Float", "description": "The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point)."}, "dueAmount": {"type": ["number", "null"], "title": "Float", "description": "The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point)."}, "documents": {"type": "array", "items": {"anyOf": [{"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "Int32", "description": "The `Int32` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1."}, "name": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "createdOn": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "type": {"type": ["string", "null"], "anyOf": [{"enum": ["pdf"], "title": "PDF form of an AR Invoice", "description": "PDF form of an AR Invoice"}, {"enum": ["csv"], "title": "CSV form of an AR Invoice", "description": "CSV form of an AR Invoice"}], "description": "Types of tangible readable AR Invoice document"}, "path": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "remoteStorageDownloadAdminUrl": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "remoteStoragePath": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}}, "description": "A document related to an AR Invoice"}, {"type": "null"}]}}, "communications": {"type": "array", "items": {"anyOf": [{"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "Int64", "description": "The `Int64` scalar type represents non-fractional signed whole numeric values. Int can represent values between PHP_INT_MIN AND PHP_INT_MAX."}, "type": {"type": ["string", "null"], "anyOf": [{"enum": ["UNSPECIFIED"], "title": "A communication for which no type was specified", "description": "A communication for which no type was specified"}, {"enum": ["INITIAL_COMMUNICATION"], "title": "An initial communication containing the invoice and payment information", "description": "An initial communication containing the invoice and payment information"}, {"enum": ["CANCELLATION_COMMUNICATION"], "title": "A cancellation communication containing the cancelled invoice information", "description": "A cancellation communication containing the cancelled invoice information"}, {"enum": ["NETTABLE_REMOVED"], "title": "A communication sent out when the netting status of an invoice is turned off", "description": "A communication sent out when the netting status of an invoice is turned off"}], "description": "Types of different revenue communications."}, "queuedOn": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "emailMessage": {"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "Int64", "description": "The `Int64` scalar type represents non-fractional signed whole numeric values. Int can represent values between PHP_INT_MIN AND PHP_INT_MAX."}}, "description": "An email communication"}}, "description": "A revenue invoice communication"}, {"type": "null"}]}}, "creator": {"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "Int64", "description": "The `Int64` scalar type represents non-fractional signed whole numeric values. Int can represent values between PHP_INT_MIN AND PHP_INT_MAX."}, "type": {"type": ["string", "null"], "anyOf": [{"enum": ["SUPPLIER"], "title": "Supplier type creator", "description": "Supplier type creator"}, {"enum": ["ADMIN_USER"], "title": "Admin user as a creator", "description": "Admin user as a creator"}, {"enum": ["EXTRANET_USER"], "title": "An extranet user as a creator", "description": "An extranet user as a creator"}, {"enum": ["INTERNAL"], "title": "An internal user as a creator", "description": "An internal user as a creator"}], "description": "Enumerates all the types of an AR Invoice creator."}}, "description": "A revenue invoice creator"}, "createdOn": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "effectiveOn": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "isReconciled": {"type": ["boolean", "null"], "title": "Boolean", "description": "The `Boolean` scalar type represents `true` or `false`."}, "reconciledBy": {"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "Int32", "description": "The `Int32` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1."}, "type": {"type": ["string", "null"], "anyOf": [{"enum": ["ADMIN_USER"], "title": "An admin user or employee logged in, having a valid Employee ID", "description": "An admin user or employee logged in, having a valid Employee ID"}, {"enum": ["AP_PAYMENT_PROCESSOR"], "title": "Automated accounts payable payment processor", "description": "Automated accounts payable payment processor"}], "description": "Types of different reconcilers that can potentially perform reconciliation of different AR components"}}, "description": "Represents a AR reconciler entity - who is responsible for reconciling the AR components"}, "nettable": {"type": ["boolean", "null"], "title": "Boolean", "description": "The `Boolean` scalar type represents `true` or `false`."}, "originallyNettable": {"type": ["boolean", "null"], "title": "Boolean", "description": "The `Boolean` scalar type represents `true` or `false`."}, "invoiceReceipientsEmailAddresses": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "payments": {"type": "array", "items": {"anyOf": [{"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "Int32", "description": "The `Int32` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1."}, "status": {"type": ["string", "null"], "anyOf": [{"enum": ["NEW"], "title": "Recently created or unprocessed", "description": "Recently created or unprocessed"}, {"enum": ["PARTIALLY_MATCHED"], "title": "Partially matched i.e. still available for reconciliation", "description": "Partially matched i.e. still available for reconciliation"}, {"enum": ["FULLY_MATCHED"], "title": "Fully matched i.e. reconciled completely", "description": "Fully matched i.e. reconciled completely"}, {"enum": ["VOID"], "title": "Voided", "description": "Voided"}], "description": "Enumerates all the statuses an AR Payment can be in at any given point."}, "revenueSource": {"type": ["string", "null"], "anyOf": [{"enum": ["B2B"], "title": "Business to business type", "description": "Business to business type"}, {"enum": ["CASTLEGATE"], "title": "Castlegate or fulfillment services", "description": "Castlegate or fulfillment services"}, {"enum": ["SPONSORED_PRODUCTS"], "title": "Sponsored products type", "description": "Sponsored products type"}, {"enum": ["MAAS_MEDIA"], "title": "Maas media type", "description": "Maas media type"}, {"enum": ["LIQUIDATION"], "title": "Liquidation type", "description": "Liquidation type"}, {"enum": ["GIFT_CARD"], "title": "Gift card type", "description": "Gift card type"}], "description": "Types of different revenue sources or streams."}, "amount": {"type": ["number", "null"], "title": "Float", "description": "The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point)."}, "currency": {"type": ["string", "null"], "anyOf": [{"enum": ["US_DOLLAR"], "title": "US Dollar", "description": "US Dollar"}, {"enum": ["BRITISH_POUND"], "title": "British Pound", "description": "British Pound"}, {"enum": ["EURO"], "title": "Euro", "description": "Euro"}, {"enum": ["CANADIAN_DOLLAR"], "title": "Canadian Dollar", "description": "Canadian Dollar"}, {"enum": ["AUSTRALIAN_DOLLAR"], "title": "Australian Dollar", "description": "Australian Dollar"}], "description": "Types of currency"}, "reference": {"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "Int64", "description": "The `Int64` scalar type represents non-fractional signed whole numeric values. Int can represent values between PHP_INT_MIN AND PHP_INT_MAX."}, "type": {"type": ["string", "null"], "anyOf": [{"enum": ["SELF"], "title": "Self if the payment was created directly by itself and there is no external reference", "description": "Self if the payment was created directly by itself and there is no external reference"}, {"enum": ["CLASSIFICATION_TOOL"], "title": "An admin classification tool", "description": "An admin classification tool"}, {"enum": ["AP_VOUCHER"], "title": "An accounts payable voucher or payment that was cut for a vendor to pay our AP balances", "description": "An accounts payable voucher or payment that was cut for a vendor to pay our AP balances"}, {"enum": ["CREDIT_MEMO"], "title": "A credit to the vendor", "description": "A credit to the vendor"}], "description": "Enumerates all the references types an AR payment can have."}}, "description": "Represents a reference or an origination of an AR payment. An AR payment can refer to an outside payment or simply to itself"}, "payer": {"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "Int64", "description": "The `Int64` scalar type represents non-fractional signed whole numeric values. Int can represent values between PHP_INT_MIN AND PHP_INT_MAX."}, "type": {"type": ["string", "null"], "anyOf": [{"enum": ["SUPPLIER"], "title": "Supplier as a payer of an AR Payment", "description": "Supplier as a payer of an AR Payment"}, {"enum": ["AP_VOUCHER"], "title": "AP Voucher as a payer of an AR Payment", "description": "AP Voucher as a payer of an AR Payment"}, {"enum": ["CUSTOMER"], "title": "Customer as a payer of an AR Payment", "description": "Customer as a payer of an AR Payment"}, {"enum": ["FULFILLMENT_CUSTOMER"], "title": "Fulfillment customer as a payer of an AR Payment", "description": "Fulfillment customer as a payer of an AR Payment"}], "description": "Enumerates all types of payers that can make an AR payment."}}, "description": "Represents an entity that uses Wayfair's services and pays for them"}, "createdOn": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "description": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "matchedAmount": {"type": ["number", "null"], "title": "Float", "description": "The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point)."}, "isReconciled": {"type": ["boolean", "null"], "title": "Boolean", "description": "The `Boolean` scalar type represents `true` or `false`."}, "reconciledOn": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "reconciledBy": {"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "Int32", "description": "The `Int32` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1."}, "type": {"type": ["string", "null"], "anyOf": [{"enum": ["ADMIN_USER"], "title": "An admin user or employee logged in, having a valid Employee ID", "description": "An admin user or employee logged in, having a valid Employee ID"}, {"enum": ["AP_PAYMENT_PROCESSOR"], "title": "Automated accounts payable payment processor", "description": "Automated accounts payable payment processor"}], "description": "Types of different reconcilers that can potentially perform reconciliation of different AR components"}}, "description": "Represents a AR reconciler entity - who is responsible for reconciling the AR components"}}, "description": "Accounts Receivable Payment entity which depicts a payment that we have realized as a \"Revenue\" and which we could have received from different revenue streams or sources."}, {"type": "null"}]}}, "isCreditMemo": {"type": ["boolean", "null"], "title": "Boolean", "description": "The `Boolean` scalar type represents `true` or `false`."}, "statusUpdateLogs": {"type": "array", "items": {"anyOf": [{"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "Int64", "description": "The `Int64` scalar type represents non-fractional signed whole numeric values. Int can represent values between PHP_INT_MIN AND PHP_INT_MAX."}, "fromStatus": {"type": ["string", "null"], "anyOf": [{"enum": ["NEW"], "title": "Recently created or unprocessed", "description": "Recently created or unprocessed"}, {"enum": ["PENDING_APPROVAL"], "title": "Sent for approval but not approved yet", "description": "Sent for approval but not approved yet"}, {"enum": ["APPROVED"], "title": "Approved by the requested approver", "description": "Approved by the requested approver"}, {"enum": ["SENT_TO_RECIPIENT"], "title": "Sent to the intended recipient(s)", "description": "Sent to the intended recipient(s)"}, {"enum": ["PENDING_PAYMENT"], "title": "Is waiting for payment or to be reconciled", "description": "Is waiting for payment or to be reconciled"}, {"enum": ["PARTIALLY_PAID"], "title": "Is partially paid for and still to be matched against payment(s)", "description": "Is partially paid for and still to be matched against payment(s)"}, {"enum": ["FULLY_PAID"], "title": "Is fully paid for and matched/reconciled against payment(s)", "description": "Is fully paid for and matched/reconciled against payment(s)"}, {"enum": ["REJECTED"], "title": "Rejected in the process of approval", "description": "Rejected in the process of approval"}, {"enum": ["CANCELLED"], "title": "Cancelled due to some reason", "description": "Cancelled due to some reason"}], "description": "Enumerates all the statuses an AR Invoice can be in at any given point."}, "toStatus": {"type": ["string", "null"], "anyOf": [{"enum": ["NEW"], "title": "Recently created or unprocessed", "description": "Recently created or unprocessed"}, {"enum": ["PENDING_APPROVAL"], "title": "Sent for approval but not approved yet", "description": "Sent for approval but not approved yet"}, {"enum": ["APPROVED"], "title": "Approved by the requested approver", "description": "Approved by the requested approver"}, {"enum": ["SENT_TO_RECIPIENT"], "title": "Sent to the intended recipient(s)", "description": "Sent to the intended recipient(s)"}, {"enum": ["PENDING_PAYMENT"], "title": "Is waiting for payment or to be reconciled", "description": "Is waiting for payment or to be reconciled"}, {"enum": ["PARTIALLY_PAID"], "title": "Is partially paid for and still to be matched against payment(s)", "description": "Is partially paid for and still to be matched against payment(s)"}, {"enum": ["FULLY_PAID"], "title": "Is fully paid for and matched/reconciled against payment(s)", "description": "Is fully paid for and matched/reconciled against payment(s)"}, {"enum": ["REJECTED"], "title": "Rejected in the process of approval", "description": "Rejected in the process of approval"}, {"enum": ["CANCELLED"], "title": "Cancelled due to some reason", "description": "Cancelled due to some reason"}], "description": "Enumerates all the statuses an AR Invoice can be in at any given point."}, "updatedOn": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "updatedBy": {"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "ID", "description": "The `ID` scalar type represents a unique identifier, often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\"4\"`) or integer (such as `4`) input value will be accepted as an ID."}, "firstName": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "middleName": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "lastName": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "fullName": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "userName": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "nickname": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "displayLastName": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "email": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "samAccountName": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "isActive": {"type": ["boolean", "null"], "title": "Boolean", "description": "The `Boolean` scalar type represents `true` or `false`."}, "birthday": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "seniorityDate": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "startDate": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "forecastEndDate": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "terminationDate": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "isUnlimitedContract": {"type": ["boolean", "null"], "title": "Boolean", "description": "The `Boolean` scalar type represents `true` or `false`."}, "isEngineer": {"type": ["boolean", "null"], "title": "Boolean", "description": "The `Boolean` scalar type represents `true` or `false`."}, "worksOnSoftware": {"type": ["boolean", "null"], "title": "Boolean", "description": "The `Boolean` scalar type represents `true` or `false`."}, "title": {"type": ["object", "string", "null"], "description": "Wayfair job titles"}, "profile": {"type": ["object", "string", "null"], "description": "Profile information of an employee (ex: Massachusetts Employee, German Employee)"}, "type": {"type": ["object", "string", "null"], "description": "Wayfair employee categories (ex: intern, contract, full time)"}, "location": {"type": ["object", "string", "null"], "description": "Wayfair employee location (ex Copley Boston)"}, "phoneExtension": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "manager": {"type": ["object", "string", "null"], "description": "Fetches data for an employee."}, "workgroup": {"type": ["object", "string", "null"], "description": "Wayfair workgroup information"}, "processedByEmployee": {"type": ["object", "string", "null"], "description": "Fetches data for an employee."}, "directReports": {"type": "array", "items": {"anyOf": [{"type": ["object", "string", "null"], "description": "Fetches data for an employee."}, {"type": "null"}]}}}, "description": "Fetches data for an employee."}}, "description": "Log entry for AR invoice status update"}, {"type": "null"}]}}, "reference": {"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "Int64", "description": "The `Int64` scalar type represents non-fractional signed whole numeric values. Int can represent values between PHP_INT_MIN AND PHP_INT_MAX."}}, "description": "A Reference to External Systems"}}, "description": "Interface for an AR Invoice - this contains all the common properties an AR Invoice should have"}, "ArInvoiceStatus": {"type": ["string", "null"], "anyOf": [{"enum": ["NEW"], "title": "Recently created or unprocessed", "description": "Recently created or unprocessed"}, {"enum": ["PENDING_APPROVAL"], "title": "Sent for approval but not approved yet", "description": "Sent for approval but not approved yet"}, {"enum": ["APPROVED"], "title": "Approved by the requested approver", "description": "Approved by the requested approver"}, {"enum": ["SENT_TO_RECIPIENT"], "title": "Sent to the intended recipient(s)", "description": "Sent to the intended recipient(s)"}, {"enum": ["PENDING_PAYMENT"], "title": "Is waiting for payment or to be reconciled", "description": "Is waiting for payment or to be reconciled"}, {"enum": ["PARTIALLY_PAID"], "title": "Is partially paid for and still to be matched against payment(s)", "description": "Is partially paid for and still to be matched against payment(s)"}, {"enum": ["FULLY_PAID"], "title": "Is fully paid for and matched/reconciled against payment(s)", "description": "Is fully paid for and matched/reconciled against payment(s)"}, {"enum": ["REJECTED"], "title": "Rejected in the process of approval", "description": "Rejected in the process of approval"}, {"enum": ["CANCELLED"], "title": "Cancelled due to some reason", "description": "Cancelled due to some reason"}], "description": "Enumerates all the statuses an AR Invoice can be in at any given point."}, "ArRevenueSourceType": {"type": ["string", "null"], "anyOf": [{"enum": ["B2B"], "title": "Business to business type", "description": "Business to business type"}, {"enum": ["CASTLEGATE"], "title": "Castlegate or fulfillment services", "description": "Castlegate or fulfillment services"}, {"enum": ["SPONSORED_PRODUCTS"], "title": "Sponsored products type", "description": "Sponsored products type"}, {"enum": ["MAAS_MEDIA"], "title": "Maas media type", "description": "Maas media type"}, {"enum": ["LIQUIDATION"], "title": "Liquidation type", "description": "Liquidation type"}, {"enum": ["GIFT_CARD"], "title": "Gift card type", "description": "Gift card type"}], "description": "Types of different revenue sources or streams."}, "ArInvoiceDocument": {"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "Int32", "description": "The `Int32` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1."}, "name": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "createdOn": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "type": {"type": ["string", "null"], "anyOf": [{"enum": ["pdf"], "title": "PDF form of an AR Invoice", "description": "PDF form of an AR Invoice"}, {"enum": ["csv"], "title": "CSV form of an AR Invoice", "description": "CSV form of an AR Invoice"}], "description": "Types of tangible readable AR Invoice document"}, "path": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "remoteStorageDownloadAdminUrl": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "remoteStoragePath": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}}, "description": "A document related to an AR Invoice"}, "ArInvoiceDocumentType": {"type": ["string", "null"], "anyOf": [{"enum": ["pdf"], "title": "PDF form of an AR Invoice", "description": "PDF form of an AR Invoice"}, {"enum": ["csv"], "title": "CSV form of an AR Invoice", "description": "CSV form of an AR Invoice"}], "description": "Types of tangible readable AR Invoice document"}, "ArInvoiceCommunication": {"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "Int64", "description": "The `Int64` scalar type represents non-fractional signed whole numeric values. Int can represent values between PHP_INT_MIN AND PHP_INT_MAX."}, "type": {"type": ["string", "null"], "anyOf": [{"enum": ["UNSPECIFIED"], "title": "A communication for which no type was specified", "description": "A communication for which no type was specified"}, {"enum": ["INITIAL_COMMUNICATION"], "title": "An initial communication containing the invoice and payment information", "description": "An initial communication containing the invoice and payment information"}, {"enum": ["CANCELLATION_COMMUNICATION"], "title": "A cancellation communication containing the cancelled invoice information", "description": "A cancellation communication containing the cancelled invoice information"}, {"enum": ["NETTABLE_REMOVED"], "title": "A communication sent out when the netting status of an invoice is turned off", "description": "A communication sent out when the netting status of an invoice is turned off"}], "description": "Types of different revenue communications."}, "queuedOn": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "emailMessage": {"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "Int64", "description": "The `Int64` scalar type represents non-fractional signed whole numeric values. Int can represent values between PHP_INT_MIN AND PHP_INT_MAX."}}, "description": "An email communication"}}, "description": "A revenue invoice communication"}, "ArInvoiceCommunicationType": {"type": ["string", "null"], "anyOf": [{"enum": ["UNSPECIFIED"], "title": "A communication for which no type was specified", "description": "A communication for which no type was specified"}, {"enum": ["INITIAL_COMMUNICATION"], "title": "An initial communication containing the invoice and payment information", "description": "An initial communication containing the invoice and payment information"}, {"enum": ["CANCELLATION_COMMUNICATION"], "title": "A cancellation communication containing the cancelled invoice information", "description": "A cancellation communication containing the cancelled invoice information"}, {"enum": ["NETTABLE_REMOVED"], "title": "A communication sent out when the netting status of an invoice is turned off", "description": "A communication sent out when the netting status of an invoice is turned off"}], "description": "Types of different revenue communications."}, "EmailMessage": {"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "Int64", "description": "The `Int64` scalar type represents non-fractional signed whole numeric values. Int can represent values between PHP_INT_MIN AND PHP_INT_MAX."}}, "description": "An email communication"}, "ArInvoiceCreator": {"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "Int64", "description": "The `Int64` scalar type represents non-fractional signed whole numeric values. Int can represent values between PHP_INT_MIN AND PHP_INT_MAX."}, "type": {"type": ["string", "null"], "anyOf": [{"enum": ["SUPPLIER"], "title": "Supplier type creator", "description": "Supplier type creator"}, {"enum": ["ADMIN_USER"], "title": "Admin user as a creator", "description": "Admin user as a creator"}, {"enum": ["EXTRANET_USER"], "title": "An extranet user as a creator", "description": "An extranet user as a creator"}, {"enum": ["INTERNAL"], "title": "An internal user as a creator", "description": "An internal user as a creator"}], "description": "Enumerates all the types of an AR Invoice creator."}}, "description": "A revenue invoice creator"}, "ArInvoiceCreatorType": {"type": ["string", "null"], "anyOf": [{"enum": ["SUPPLIER"], "title": "Supplier type creator", "description": "Supplier type creator"}, {"enum": ["ADMIN_USER"], "title": "Admin user as a creator", "description": "Admin user as a creator"}, {"enum": ["EXTRANET_USER"], "title": "An extranet user as a creator", "description": "An extranet user as a creator"}, {"enum": ["INTERNAL"], "title": "An internal user as a creator", "description": "An internal user as a creator"}], "description": "Enumerates all the types of an AR Invoice creator."}, "ArReconciler": {"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "Int32", "description": "The `Int32` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1."}, "type": {"type": ["string", "null"], "anyOf": [{"enum": ["ADMIN_USER"], "title": "An admin user or employee logged in, having a valid Employee ID", "description": "An admin user or employee logged in, having a valid Employee ID"}, {"enum": ["AP_PAYMENT_PROCESSOR"], "title": "Automated accounts payable payment processor", "description": "Automated accounts payable payment processor"}], "description": "Types of different reconcilers that can potentially perform reconciliation of different AR components"}}, "description": "Represents a AR reconciler entity - who is responsible for reconciling the AR components"}, "ArReconcilerType": {"type": ["string", "null"], "anyOf": [{"enum": ["ADMIN_USER"], "title": "An admin user or employee logged in, having a valid Employee ID", "description": "An admin user or employee logged in, having a valid Employee ID"}, {"enum": ["AP_PAYMENT_PROCESSOR"], "title": "Automated accounts payable payment processor", "description": "Automated accounts payable payment processor"}], "description": "Types of different reconcilers that can potentially perform reconciliation of different AR components"}, "ArPayment": {"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "Int32", "description": "The `Int32` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1."}, "status": {"type": ["string", "null"], "anyOf": [{"enum": ["NEW"], "title": "Recently created or unprocessed", "description": "Recently created or unprocessed"}, {"enum": ["PARTIALLY_MATCHED"], "title": "Partially matched i.e. still available for reconciliation", "description": "Partially matched i.e. still available for reconciliation"}, {"enum": ["FULLY_MATCHED"], "title": "Fully matched i.e. reconciled completely", "description": "Fully matched i.e. reconciled completely"}, {"enum": ["VOID"], "title": "Voided", "description": "Voided"}], "description": "Enumerates all the statuses an AR Payment can be in at any given point."}, "revenueSource": {"type": ["string", "null"], "anyOf": [{"enum": ["B2B"], "title": "Business to business type", "description": "Business to business type"}, {"enum": ["CASTLEGATE"], "title": "Castlegate or fulfillment services", "description": "Castlegate or fulfillment services"}, {"enum": ["SPONSORED_PRODUCTS"], "title": "Sponsored products type", "description": "Sponsored products type"}, {"enum": ["MAAS_MEDIA"], "title": "Maas media type", "description": "Maas media type"}, {"enum": ["LIQUIDATION"], "title": "Liquidation type", "description": "Liquidation type"}, {"enum": ["GIFT_CARD"], "title": "Gift card type", "description": "Gift card type"}], "description": "Types of different revenue sources or streams."}, "amount": {"type": ["number", "null"], "title": "Float", "description": "The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point)."}, "currency": {"type": ["string", "null"], "anyOf": [{"enum": ["US_DOLLAR"], "title": "US Dollar", "description": "US Dollar"}, {"enum": ["BRITISH_POUND"], "title": "British Pound", "description": "British Pound"}, {"enum": ["EURO"], "title": "Euro", "description": "Euro"}, {"enum": ["CANADIAN_DOLLAR"], "title": "Canadian Dollar", "description": "Canadian Dollar"}, {"enum": ["AUSTRALIAN_DOLLAR"], "title": "Australian Dollar", "description": "Australian Dollar"}], "description": "Types of currency"}, "reference": {"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "Int64", "description": "The `Int64` scalar type represents non-fractional signed whole numeric values. Int can represent values between PHP_INT_MIN AND PHP_INT_MAX."}, "type": {"type": ["string", "null"], "anyOf": [{"enum": ["SELF"], "title": "Self if the payment was created directly by itself and there is no external reference", "description": "Self if the payment was created directly by itself and there is no external reference"}, {"enum": ["CLASSIFICATION_TOOL"], "title": "An admin classification tool", "description": "An admin classification tool"}, {"enum": ["AP_VOUCHER"], "title": "An accounts payable voucher or payment that was cut for a vendor to pay our AP balances", "description": "An accounts payable voucher or payment that was cut for a vendor to pay our AP balances"}, {"enum": ["CREDIT_MEMO"], "title": "A credit to the vendor", "description": "A credit to the vendor"}], "description": "Enumerates all the references types an AR payment can have."}}, "description": "Represents a reference or an origination of an AR payment. An AR payment can refer to an outside payment or simply to itself"}, "payer": {"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "Int64", "description": "The `Int64` scalar type represents non-fractional signed whole numeric values. Int can represent values between PHP_INT_MIN AND PHP_INT_MAX."}, "type": {"type": ["string", "null"], "anyOf": [{"enum": ["SUPPLIER"], "title": "Supplier as a payer of an AR Payment", "description": "Supplier as a payer of an AR Payment"}, {"enum": ["AP_VOUCHER"], "title": "AP Voucher as a payer of an AR Payment", "description": "AP Voucher as a payer of an AR Payment"}, {"enum": ["CUSTOMER"], "title": "Customer as a payer of an AR Payment", "description": "Customer as a payer of an AR Payment"}, {"enum": ["FULFILLMENT_CUSTOMER"], "title": "Fulfillment customer as a payer of an AR Payment", "description": "Fulfillment customer as a payer of an AR Payment"}], "description": "Enumerates all types of payers that can make an AR payment."}}, "description": "Represents an entity that uses Wayfair's services and pays for them"}, "createdOn": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "description": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "matchedAmount": {"type": ["number", "null"], "title": "Float", "description": "The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point)."}, "isReconciled": {"type": ["boolean", "null"], "title": "Boolean", "description": "The `Boolean` scalar type represents `true` or `false`."}, "reconciledOn": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "reconciledBy": {"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "Int32", "description": "The `Int32` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1."}, "type": {"type": ["string", "null"], "anyOf": [{"enum": ["ADMIN_USER"], "title": "An admin user or employee logged in, having a valid Employee ID", "description": "An admin user or employee logged in, having a valid Employee ID"}, {"enum": ["AP_PAYMENT_PROCESSOR"], "title": "Automated accounts payable payment processor", "description": "Automated accounts payable payment processor"}], "description": "Types of different reconcilers that can potentially perform reconciliation of different AR components"}}, "description": "Represents a AR reconciler entity - who is responsible for reconciling the AR components"}}, "description": "Accounts Receivable Payment entity which depicts a payment that we have realized as a \"Revenue\" and which we could have received from different revenue streams or sources."}, "ArPaymentStatus": {"type": ["string", "null"], "anyOf": [{"enum": ["NEW"], "title": "Recently created or unprocessed", "description": "Recently created or unprocessed"}, {"enum": ["PARTIALLY_MATCHED"], "title": "Partially matched i.e. still available for reconciliation", "description": "Partially matched i.e. still available for reconciliation"}, {"enum": ["FULLY_MATCHED"], "title": "Fully matched i.e. reconciled completely", "description": "Fully matched i.e. reconciled completely"}, {"enum": ["VOID"], "title": "Voided", "description": "Voided"}], "description": "Enumerates all the statuses an AR Payment can be in at any given point."}, "ArPaymentReference": {"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "Int64", "description": "The `Int64` scalar type represents non-fractional signed whole numeric values. Int can represent values between PHP_INT_MIN AND PHP_INT_MAX."}, "type": {"type": ["string", "null"], "anyOf": [{"enum": ["SELF"], "title": "Self if the payment was created directly by itself and there is no external reference", "description": "Self if the payment was created directly by itself and there is no external reference"}, {"enum": ["CLASSIFICATION_TOOL"], "title": "An admin classification tool", "description": "An admin classification tool"}, {"enum": ["AP_VOUCHER"], "title": "An accounts payable voucher or payment that was cut for a vendor to pay our AP balances", "description": "An accounts payable voucher or payment that was cut for a vendor to pay our AP balances"}, {"enum": ["CREDIT_MEMO"], "title": "A credit to the vendor", "description": "A credit to the vendor"}], "description": "Enumerates all the references types an AR payment can have."}}, "description": "Represents a reference or an origination of an AR payment. An AR payment can refer to an outside payment or simply to itself"}, "ArPaymentTypeReference": {"type": ["string", "null"], "anyOf": [{"enum": ["SELF"], "title": "Self if the payment was created directly by itself and there is no external reference", "description": "Self if the payment was created directly by itself and there is no external reference"}, {"enum": ["CLASSIFICATION_TOOL"], "title": "An admin classification tool", "description": "An admin classification tool"}, {"enum": ["AP_VOUCHER"], "title": "An accounts payable voucher or payment that was cut for a vendor to pay our AP balances", "description": "An accounts payable voucher or payment that was cut for a vendor to pay our AP balances"}, {"enum": ["CREDIT_MEMO"], "title": "A credit to the vendor", "description": "A credit to the vendor"}], "description": "Enumerates all the references types an AR payment can have."}, "ArPaymentPayer": {"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "Int64", "description": "The `Int64` scalar type represents non-fractional signed whole numeric values. Int can represent values between PHP_INT_MIN AND PHP_INT_MAX."}, "type": {"type": ["string", "null"], "anyOf": [{"enum": ["SUPPLIER"], "title": "Supplier as a payer of an AR Payment", "description": "Supplier as a payer of an AR Payment"}, {"enum": ["AP_VOUCHER"], "title": "AP Voucher as a payer of an AR Payment", "description": "AP Voucher as a payer of an AR Payment"}, {"enum": ["CUSTOMER"], "title": "Customer as a payer of an AR Payment", "description": "Customer as a payer of an AR Payment"}, {"enum": ["FULFILLMENT_CUSTOMER"], "title": "Fulfillment customer as a payer of an AR Payment", "description": "Fulfillment customer as a payer of an AR Payment"}], "description": "Enumerates all types of payers that can make an AR payment."}}, "description": "Represents an entity that uses Wayfair's services and pays for them"}, "ArPaymentPayerType": {"type": ["string", "null"], "anyOf": [{"enum": ["SUPPLIER"], "title": "Supplier as a payer of an AR Payment", "description": "Supplier as a payer of an AR Payment"}, {"enum": ["AP_VOUCHER"], "title": "AP Voucher as a payer of an AR Payment", "description": "AP Voucher as a payer of an AR Payment"}, {"enum": ["CUSTOMER"], "title": "Customer as a payer of an AR Payment", "description": "Customer as a payer of an AR Payment"}, {"enum": ["FULFILLMENT_CUSTOMER"], "title": "Fulfillment customer as a payer of an AR Payment", "description": "Fulfillment customer as a payer of an AR Payment"}], "description": "Enumerates all types of payers that can make an AR payment."}, "ArInvoiceStatusUpdateLog": {"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "Int64", "description": "The `Int64` scalar type represents non-fractional signed whole numeric values. Int can represent values between PHP_INT_MIN AND PHP_INT_MAX."}, "fromStatus": {"type": ["string", "null"], "anyOf": [{"enum": ["NEW"], "title": "Recently created or unprocessed", "description": "Recently created or unprocessed"}, {"enum": ["PENDING_APPROVAL"], "title": "Sent for approval but not approved yet", "description": "Sent for approval but not approved yet"}, {"enum": ["APPROVED"], "title": "Approved by the requested approver", "description": "Approved by the requested approver"}, {"enum": ["SENT_TO_RECIPIENT"], "title": "Sent to the intended recipient(s)", "description": "Sent to the intended recipient(s)"}, {"enum": ["PENDING_PAYMENT"], "title": "Is waiting for payment or to be reconciled", "description": "Is waiting for payment or to be reconciled"}, {"enum": ["PARTIALLY_PAID"], "title": "Is partially paid for and still to be matched against payment(s)", "description": "Is partially paid for and still to be matched against payment(s)"}, {"enum": ["FULLY_PAID"], "title": "Is fully paid for and matched/reconciled against payment(s)", "description": "Is fully paid for and matched/reconciled against payment(s)"}, {"enum": ["REJECTED"], "title": "Rejected in the process of approval", "description": "Rejected in the process of approval"}, {"enum": ["CANCELLED"], "title": "Cancelled due to some reason", "description": "Cancelled due to some reason"}], "description": "Enumerates all the statuses an AR Invoice can be in at any given point."}, "toStatus": {"type": ["string", "null"], "anyOf": [{"enum": ["NEW"], "title": "Recently created or unprocessed", "description": "Recently created or unprocessed"}, {"enum": ["PENDING_APPROVAL"], "title": "Sent for approval but not approved yet", "description": "Sent for approval but not approved yet"}, {"enum": ["APPROVED"], "title": "Approved by the requested approver", "description": "Approved by the requested approver"}, {"enum": ["SENT_TO_RECIPIENT"], "title": "Sent to the intended recipient(s)", "description": "Sent to the intended recipient(s)"}, {"enum": ["PENDING_PAYMENT"], "title": "Is waiting for payment or to be reconciled", "description": "Is waiting for payment or to be reconciled"}, {"enum": ["PARTIALLY_PAID"], "title": "Is partially paid for and still to be matched against payment(s)", "description": "Is partially paid for and still to be matched against payment(s)"}, {"enum": ["FULLY_PAID"], "title": "Is fully paid for and matched/reconciled against payment(s)", "description": "Is fully paid for and matched/reconciled against payment(s)"}, {"enum": ["REJECTED"], "title": "Rejected in the process of approval", "description": "Rejected in the process of approval"}, {"enum": ["CANCELLED"], "title": "Cancelled due to some reason", "description": "Cancelled due to some reason"}], "description": "Enumerates all the statuses an AR Invoice can be in at any given point."}, "updatedOn": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "updatedBy": {"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "ID", "description": "The `ID` scalar type represents a unique identifier, often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\"4\"`) or integer (such as `4`) input value will be accepted as an ID."}, "firstName": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "middleName": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "lastName": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "fullName": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "userName": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "nickname": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "displayLastName": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "email": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "samAccountName": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "isActive": {"type": ["boolean", "null"], "title": "Boolean", "description": "The `Boolean` scalar type represents `true` or `false`."}, "birthday": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "seniorityDate": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "startDate": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "forecastEndDate": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "terminationDate": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "isUnlimitedContract": {"type": ["boolean", "null"], "title": "Boolean", "description": "The `Boolean` scalar type represents `true` or `false`."}, "isEngineer": {"type": ["boolean", "null"], "title": "Boolean", "description": "The `Boolean` scalar type represents `true` or `false`."}, "worksOnSoftware": {"type": ["boolean", "null"], "title": "Boolean", "description": "The `Boolean` scalar type represents `true` or `false`."}, "title": {"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "ID", "description": "The `ID` scalar type represents a unique identifier, often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\"4\"`) or integer (such as `4`) input value will be accepted as an ID."}, "name": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "employeeRank": {"type": ["object", "string", "null"], "description": "Wayfair employee ranks"}}, "description": "Wayfair job titles"}, "profile": {"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "ID", "description": "The `ID` scalar type represents a unique identifier, often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\"4\"`) or integer (such as `4`) input value will be accepted as an ID."}, "name": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "isOffshore": {"type": ["boolean", "null"], "title": "Boolean", "description": "The `Boolean` scalar type represents `true` or `false`."}}, "description": "Profile information of an employee (ex: Massachusetts Employee, German Employee)"}, "type": {"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "ID", "description": "The `ID` scalar type represents a unique identifier, often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\"4\"`) or integer (such as `4`) input value will be accepted as an ID."}, "name": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}}, "description": "Wayfair employee categories (ex: intern, contract, full time)"}, "location": {"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "ID", "description": "The `ID` scalar type represents a unique identifier, often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\"4\"`) or integer (such as `4`) input value will be accepted as an ID."}, "name": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "officeCode": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}}, "description": "Wayfair employee location (ex Copley Boston)"}, "phoneExtension": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "manager": {"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "ID", "description": "The `ID` scalar type represents a unique identifier, often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\"4\"`) or integer (such as `4`) input value will be accepted as an ID."}, "firstName": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "middleName": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "lastName": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "fullName": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "userName": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "nickname": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "displayLastName": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "email": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "samAccountName": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "isActive": {"type": ["boolean", "null"], "title": "Boolean", "description": "The `Boolean` scalar type represents `true` or `false`."}, "birthday": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "seniorityDate": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "startDate": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "forecastEndDate": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "terminationDate": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "isUnlimitedContract": {"type": ["boolean", "null"], "title": "Boolean", "description": "The `Boolean` scalar type represents `true` or `false`."}, "isEngineer": {"type": ["boolean", "null"], "title": "Boolean", "description": "The `Boolean` scalar type represents `true` or `false`."}, "worksOnSoftware": {"type": ["boolean", "null"], "title": "Boolean", "description": "The `Boolean` scalar type represents `true` or `false`."}, "title": {"type": ["object", "string", "null"], "description": "Wayfair job titles"}, "profile": {"type": ["object", "string", "null"], "description": "Profile information of an employee (ex: Massachusetts Employee, German Employee)"}, "type": {"type": ["object", "string", "null"], "description": "Wayfair employee categories (ex: intern, contract, full time)"}, "location": {"type": ["object", "string", "null"], "description": "Wayfair employee location (ex Copley Boston)"}, "phoneExtension": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "manager": {"type": ["object", "string", "null"], "description": "Fetches data for an employee."}, "workgroup": {"type": ["object", "string", "null"], "description": "Wayfair workgroup information"}, "processedByEmployee": {"type": ["object", "string", "null"], "description": "Fetches data for an employee."}, "directReports": {"type": "array", "items": {"anyOf": [{"type": ["object", "string", "null"], "description": "Fetches data for an employee."}, {"type": "null"}]}}}, "description": "Fetches data for an employee."}, "workgroup": {"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "ID", "description": "The `ID` scalar type represents a unique identifier, often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\"4\"`) or integer (such as `4`) input value will be accepted as an ID."}, "name": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "supervisor": {"type": ["object", "string", "null"], "description": "Fetches data for an employee."}, "employees": {"type": "array", "items": {"anyOf": [{"type": ["object", "string", "null"], "description": "Fetches data for an employee."}, {"type": "null"}]}}}, "description": "Wayfair workgroup information"}, "processedByEmployee": {"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "ID", "description": "The `ID` scalar type represents a unique identifier, often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\"4\"`) or integer (such as `4`) input value will be accepted as an ID."}, "firstName": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "middleName": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "lastName": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "fullName": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "userName": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "nickname": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "displayLastName": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "email": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "samAccountName": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "isActive": {"type": ["boolean", "null"], "title": "Boolean", "description": "The `Boolean` scalar type represents `true` or `false`."}, "birthday": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "seniorityDate": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "startDate": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "forecastEndDate": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "terminationDate": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "isUnlimitedContract": {"type": ["boolean", "null"], "title": "Boolean", "description": "The `Boolean` scalar type represents `true` or `false`."}, "isEngineer": {"type": ["boolean", "null"], "title": "Boolean", "description": "The `Boolean` scalar type represents `true` or `false`."}, "worksOnSoftware": {"type": ["boolean", "null"], "title": "Boolean", "description": "The `Boolean` scalar type represents `true` or `false`."}, "title": {"type": ["object", "string", "null"], "description": "Wayfair job titles"}, "profile": {"type": ["object", "string", "null"], "description": "Profile information of an employee (ex: Massachusetts Employee, German Employee)"}, "type": {"type": ["object", "string", "null"], "description": "Wayfair employee categories (ex: intern, contract, full time)"}, "location": {"type": ["object", "string", "null"], "description": "Wayfair employee location (ex Copley Boston)"}, "phoneExtension": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "manager": {"type": ["object", "string", "null"], "description": "Fetches data for an employee."}, "workgroup": {"type": ["object", "string", "null"], "description": "Wayfair workgroup information"}, "processedByEmployee": {"type": ["object", "string", "null"], "description": "Fetches data for an employee."}, "directReports": {"type": "array", "items": {"anyOf": [{"type": ["object", "string", "null"], "description": "Fetches data for an employee."}, {"type": "null"}]}}}, "description": "Fetches data for an employee."}, "directReports": {"type": "array", "items": {"anyOf": [{"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "ID", "description": "The `ID` scalar type represents a unique identifier, often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\"4\"`) or integer (such as `4`) input value will be accepted as an ID."}, "firstName": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "middleName": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "lastName": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "fullName": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "userName": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "nickname": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "displayLastName": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "email": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "samAccountName": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "isActive": {"type": ["boolean", "null"], "title": "Boolean", "description": "The `Boolean` scalar type represents `true` or `false`."}, "birthday": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "seniorityDate": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "startDate": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "forecastEndDate": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "terminationDate": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "isUnlimitedContract": {"type": ["boolean", "null"], "title": "Boolean", "description": "The `Boolean` scalar type represents `true` or `false`."}, "isEngineer": {"type": ["boolean", "null"], "title": "Boolean", "description": "The `Boolean` scalar type represents `true` or `false`."}, "worksOnSoftware": {"type": ["boolean", "null"], "title": "Boolean", "description": "The `Boolean` scalar type represents `true` or `false`."}, "title": {"type": ["object", "string", "null"], "description": "Wayfair job titles"}, "profile": {"type": ["object", "string", "null"], "description": "Profile information of an employee (ex: Massachusetts Employee, German Employee)"}, "type": {"type": ["object", "string", "null"], "description": "Wayfair employee categories (ex: intern, contract, full time)"}, "location": {"type": ["object", "string", "null"], "description": "Wayfair employee location (ex Copley Boston)"}, "phoneExtension": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "manager": {"type": ["object", "string", "null"], "description": "Fetches data for an employee."}, "workgroup": {"type": ["object", "string", "null"], "description": "Wayfair workgroup information"}, "processedByEmployee": {"type": ["object", "string", "null"], "description": "Fetches data for an employee."}, "directReports": {"type": "array", "items": {"anyOf": [{"type": ["object", "string", "null"], "description": "Fetches data for an employee."}, {"type": "null"}]}}}, "description": "Fetches data for an employee."}, {"type": "null"}]}}}, "description": "Fetches data for an employee."}}, "description": "Log entry for AR invoice status update"}, "WayfairEmployee": {"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "ID", "description": "The `ID` scalar type represents a unique identifier, often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\"4\"`) or integer (such as `4`) input value will be accepted as an ID."}, "firstName": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "middleName": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "lastName": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "fullName": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "userName": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "nickname": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "displayLastName": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "email": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "samAccountName": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "isActive": {"type": ["boolean", "null"], "title": "Boolean", "description": "The `Boolean` scalar type represents `true` or `false`."}, "birthday": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "seniorityDate": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "startDate": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "forecastEndDate": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "terminationDate": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "isUnlimitedContract": {"type": ["boolean", "null"], "title": "Boolean", "description": "The `Boolean` scalar type represents `true` or `false`."}, "isEngineer": {"type": ["boolean", "null"], "title": "Boolean", "description": "The `Boolean` scalar type represents `true` or `false`."}, "worksOnSoftware": {"type": ["boolean", "null"], "title": "Boolean", "description": "The `Boolean` scalar type represents `true` or `false`."}, "title": {"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "ID", "description": "The `ID` scalar type represents a unique identifier, often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\"4\"`) or integer (such as `4`) input value will be accepted as an ID."}, "name": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "employeeRank": {"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "ID", "description": "The `ID` scalar type represents a unique identifier, often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\"4\"`) or integer (such as `4`) input value will be accepted as an ID."}, "name": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "level": {"type": ["object", "string", "null"], "title": "Int32", "description": "The `Int32` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1."}}, "description": "Wayfair employee ranks"}}, "description": "Wayfair job titles"}, "profile": {"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "ID", "description": "The `ID` scalar type represents a unique identifier, often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\"4\"`) or integer (such as `4`) input value will be accepted as an ID."}, "name": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "isOffshore": {"type": ["boolean", "null"], "title": "Boolean", "description": "The `Boolean` scalar type represents `true` or `false`."}}, "description": "Profile information of an employee (ex: Massachusetts Employee, German Employee)"}, "type": {"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "ID", "description": "The `ID` scalar type represents a unique identifier, often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\"4\"`) or integer (such as `4`) input value will be accepted as an ID."}, "name": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}}, "description": "Wayfair employee categories (ex: intern, contract, full time)"}, "location": {"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "ID", "description": "The `ID` scalar type represents a unique identifier, often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\"4\"`) or integer (such as `4`) input value will be accepted as an ID."}, "name": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "officeCode": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}}, "description": "Wayfair employee location (ex Copley Boston)"}, "phoneExtension": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "manager": {"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "ID", "description": "The `ID` scalar type represents a unique identifier, often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\"4\"`) or integer (such as `4`) input value will be accepted as an ID."}, "firstName": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "middleName": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "lastName": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "fullName": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "userName": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "nickname": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "displayLastName": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "email": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "samAccountName": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "isActive": {"type": ["boolean", "null"], "title": "Boolean", "description": "The `Boolean` scalar type represents `true` or `false`."}, "birthday": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "seniorityDate": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "startDate": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "forecastEndDate": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "terminationDate": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "isUnlimitedContract": {"type": ["boolean", "null"], "title": "Boolean", "description": "The `Boolean` scalar type represents `true` or `false`."}, "isEngineer": {"type": ["boolean", "null"], "title": "Boolean", "description": "The `Boolean` scalar type represents `true` or `false`."}, "worksOnSoftware": {"type": ["boolean", "null"], "title": "Boolean", "description": "The `Boolean` scalar type represents `true` or `false`."}, "title": {"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "ID", "description": "The `ID` scalar type represents a unique identifier, often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\"4\"`) or integer (such as `4`) input value will be accepted as an ID."}, "name": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "employeeRank": {"type": ["object", "string", "null"], "description": "Wayfair employee ranks"}}, "description": "Wayfair job titles"}, "profile": {"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "ID", "description": "The `ID` scalar type represents a unique identifier, often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\"4\"`) or integer (such as `4`) input value will be accepted as an ID."}, "name": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "isOffshore": {"type": ["boolean", "null"], "title": "Boolean", "description": "The `Boolean` scalar type represents `true` or `false`."}}, "description": "Profile information of an employee (ex: Massachusetts Employee, German Employee)"}, "type": {"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "ID", "description": "The `ID` scalar type represents a unique identifier, often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\"4\"`) or integer (such as `4`) input value will be accepted as an ID."}, "name": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}}, "description": "Wayfair employee categories (ex: intern, contract, full time)"}, "location": {"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "ID", "description": "The `ID` scalar type represents a unique identifier, often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\"4\"`) or integer (such as `4`) input value will be accepted as an ID."}, "name": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "officeCode": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}}, "description": "Wayfair employee location (ex Copley Boston)"}, "phoneExtension": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "manager": {"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "ID", "description": "The `ID` scalar type represents a unique identifier, often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\"4\"`) or integer (such as `4`) input value will be accepted as an ID."}, "firstName": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "middleName": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "lastName": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "fullName": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "userName": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "nickname": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "displayLastName": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "email": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "samAccountName": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "isActive": {"type": ["boolean", "null"], "title": "Boolean", "description": "The `Boolean` scalar type represents `true` or `false`."}, "birthday": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "seniorityDate": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "startDate": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "forecastEndDate": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "terminationDate": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "isUnlimitedContract": {"type": ["boolean", "null"], "title": "Boolean", "description": "The `Boolean` scalar type represents `true` or `false`."}, "isEngineer": {"type": ["boolean", "null"], "title": "Boolean", "description": "The `Boolean` scalar type represents `true` or `false`."}, "worksOnSoftware": {"type": ["boolean", "null"], "title": "Boolean", "description": "The `Boolean` scalar type represents `true` or `false`."}, "title": {"type": ["object", "string", "null"], "description": "Wayfair job titles"}, "profile": {"type": ["object", "string", "null"], "description": "Profile information of an employee (ex: Massachusetts Employee, German Employee)"}, "type": {"type": ["object", "string", "null"], "description": "Wayfair employee categories (ex: intern, contract, full time)"}, "location": {"type": ["object", "string", "null"], "description": "Wayfair employee location (ex Copley Boston)"}, "phoneExtension": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "manager": {"type": ["object", "string", "null"], "description": "Fetches data for an employee."}, "workgroup": {"type": ["object", "string", "null"], "description": "Wayfair workgroup information"}, "processedByEmployee": {"type": ["object", "string", "null"], "description": "Fetches data for an employee."}, "directReports": {"type": "array", "items": {"anyOf": [{"type": ["object", "string", "null"], "description": "Fetches data for an employee."}, {"type": "null"}]}}}, "description": "Fetches data for an employee."}, "workgroup": {"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "ID", "description": "The `ID` scalar type represents a unique identifier, often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\"4\"`) or integer (such as `4`) input value will be accepted as an ID."}, "name": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "supervisor": {"type": ["object", "string", "null"], "description": "Fetches data for an employee."}, "employees": {"type": "array", "items": {"anyOf": [{"type": ["object", "string", "null"], "description": "Fetches data for an employee."}, {"type": "null"}]}}}, "description": "Wayfair workgroup information"}, "processedByEmployee": {"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "ID", "description": "The `ID` scalar type represents a unique identifier, often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\"4\"`) or integer (such as `4`) input value will be accepted as an ID."}, "firstName": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "middleName": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "lastName": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "fullName": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "userName": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "nickname": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "displayLastName": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "email": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "samAccountName": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "isActive": {"type": ["boolean", "null"], "title": "Boolean", "description": "The `Boolean` scalar type represents `true` or `false`."}, "birthday": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "seniorityDate": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "startDate": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "forecastEndDate": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "terminationDate": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "isUnlimitedContract": {"type": ["boolean", "null"], "title": "Boolean", "description": "The `Boolean` scalar type represents `true` or `false`."}, "isEngineer": {"type": ["boolean", "null"], "title": "Boolean", "description": "The `Boolean` scalar type represents `true` or `false`."}, "worksOnSoftware": {"type": ["boolean", "null"], "title": "Boolean", "description": "The `Boolean` scalar type represents `true` or `false`."}, "title": {"type": ["object", "string", "null"], "description": "Wayfair job titles"}, "profile": {"type": ["object", "string", "null"], "description": "Profile information of an employee (ex: Massachusetts Employee, German Employee)"}, "type": {"type": ["object", "string", "null"], "description": "Wayfair employee categories (ex: intern, contract, full time)"}, "location": {"type": ["object", "string", "null"], "description": "Wayfair employee location (ex Copley Boston)"}, "phoneExtension": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "manager": {"type": ["object", "string", "null"], "description": "Fetches data for an employee."}, "workgroup": {"type": ["object", "string", "null"], "description": "Wayfair workgroup information"}, "processedByEmployee": {"type": ["object", "string", "null"], "description": "Fetches data for an employee."}, "directReports": {"type": "array", "items": {"anyOf": [{"type": ["object", "string", "null"], "description": "Fetches data for an employee."}, {"type": "null"}]}}}, "description": "Fetches data for an employee."}, "directReports": {"type": "array", "items": {"anyOf": [{"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "ID", "description": "The `ID` scalar type represents a unique identifier, often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\"4\"`) or integer (such as `4`) input value will be accepted as an ID."}, "firstName": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "middleName": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "lastName": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "fullName": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "userName": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "nickname": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "displayLastName": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "email": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "samAccountName": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "isActive": {"type": ["boolean", "null"], "title": "Boolean", "description": "The `Boolean` scalar type represents `true` or `false`."}, "birthday": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "seniorityDate": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "startDate": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "forecastEndDate": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "terminationDate": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "isUnlimitedContract": {"type": ["boolean", "null"], "title": "Boolean", "description": "The `Boolean` scalar type represents `true` or `false`."}, "isEngineer": {"type": ["boolean", "null"], "title": "Boolean", "description": "The `Boolean` scalar type represents `true` or `false`."}, "worksOnSoftware": {"type": ["boolean", "null"], "title": "Boolean", "description": "The `Boolean` scalar type represents `true` or `false`."}, "title": {"type": ["object", "string", "null"], "description": "Wayfair job titles"}, "profile": {"type": ["object", "string", "null"], "description": "Profile information of an employee (ex: Massachusetts Employee, German Employee)"}, "type": {"type": ["object", "string", "null"], "description": "Wayfair employee categories (ex: intern, contract, full time)"}, "location": {"type": ["object", "string", "null"], "description": "Wayfair employee location (ex Copley Boston)"}, "phoneExtension": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "manager": {"type": ["object", "string", "null"], "description": "Fetches data for an employee."}, "workgroup": {"type": ["object", "string", "null"], "description": "Wayfair workgroup information"}, "processedByEmployee": {"type": ["object", "string", "null"], "description": "Fetches data for an employee."}, "directReports": {"type": "array", "items": {"anyOf": [{"type": ["object", "string", "null"], "description": "Fetches data for an employee."}, {"type": "null"}]}}}, "description": "Fetches data for an employee."}, {"type": "null"}]}}}, "description": "Fetches data for an employee."}, "workgroup": {"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "ID", "description": "The `ID` scalar type represents a unique identifier, often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\"4\"`) or integer (such as `4`) input value will be accepted as an ID."}, "name": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "supervisor": {"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "ID", "description": "The `ID` scalar type represents a unique identifier, often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\"4\"`) or integer (such as `4`) input value will be accepted as an ID."}, "firstName": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "middleName": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "lastName": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "fullName": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "userName": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "nickname": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "displayLastName": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "email": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "samAccountName": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "isActive": {"type": ["boolean", "null"], "title": "Boolean", "description": "The `Boolean` scalar type represents `true` or `false`."}, "birthday": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "seniorityDate": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "startDate": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "forecastEndDate": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "terminationDate": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "isUnlimitedContract": {"type": ["boolean", "null"], "title": "Boolean", "description": "The `Boolean` scalar type represents `true` or `false`."}, "isEngineer": {"type": ["boolean", "null"], "title": "Boolean", "description": "The `Boolean` scalar type represents `true` or `false`."}, "worksOnSoftware": {"type": ["boolean", "null"], "title": "Boolean", "description": "The `Boolean` scalar type represents `true` or `false`."}, "title": {"type": ["object", "string", "null"], "description": "Wayfair job titles"}, "profile": {"type": ["object", "string", "null"], "description": "Profile information of an employee (ex: Massachusetts Employee, German Employee)"}, "type": {"type": ["object", "string", "null"], "description": "Wayfair employee categories (ex: intern, contract, full time)"}, "location": {"type": ["object", "string", "null"], "description": "Wayfair employee location (ex Copley Boston)"}, "phoneExtension": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "manager": {"type": ["object", "string", "null"], "description": "Fetches data for an employee."}, "workgroup": {"type": ["object", "string", "null"], "description": "Wayfair workgroup information"}, "processedByEmployee": {"type": ["object", "string", "null"], "description": "Fetches data for an employee."}, "directReports": {"type": "array", "items": {"anyOf": [{"type": ["object", "string", "null"], "description": "Fetches data for an employee."}, {"type": "null"}]}}}, "description": "Fetches data for an employee."}, "employees": {"type": "array", "items": {"anyOf": [{"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "ID", "description": "The `ID` scalar type represents a unique identifier, often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\"4\"`) or integer (such as `4`) input value will be accepted as an ID."}, "firstName": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "middleName": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "lastName": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "fullName": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "userName": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "nickname": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "displayLastName": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "email": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "samAccountName": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "isActive": {"type": ["boolean", "null"], "title": "Boolean", "description": "The `Boolean` scalar type represents `true` or `false`."}, "birthday": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "seniorityDate": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "startDate": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "forecastEndDate": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "terminationDate": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "isUnlimitedContract": {"type": ["boolean", "null"], "title": "Boolean", "description": "The `Boolean` scalar type represents `true` or `false`."}, "isEngineer": {"type": ["boolean", "null"], "title": "Boolean", "description": "The `Boolean` scalar type represents `true` or `false`."}, "worksOnSoftware": {"type": ["boolean", "null"], "title": "Boolean", "description": "The `Boolean` scalar type represents `true` or `false`."}, "title": {"type": ["object", "string", "null"], "description": "Wayfair job titles"}, "profile": {"type": ["object", "string", "null"], "description": "Profile information of an employee (ex: Massachusetts Employee, German Employee)"}, "type": {"type": ["object", "string", "null"], "description": "Wayfair employee categories (ex: intern, contract, full time)"}, "location": {"type": ["object", "string", "null"], "description": "Wayfair employee location (ex Copley Boston)"}, "phoneExtension": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "manager": {"type": ["object", "string", "null"], "description": "Fetches data for an employee."}, "workgroup": {"type": ["object", "string", "null"], "description": "Wayfair workgroup information"}, "processedByEmployee": {"type": ["object", "string", "null"], "description": "Fetches data for an employee."}, "directReports": {"type": "array", "items": {"anyOf": [{"type": ["object", "string", "null"], "description": "Fetches data for an employee."}, {"type": "null"}]}}}, "description": "Fetches data for an employee."}, {"type": "null"}]}}}, "description": "Wayfair workgroup information"}, "processedByEmployee": {"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "ID", "description": "The `ID` scalar type represents a unique identifier, often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\"4\"`) or integer (such as `4`) input value will be accepted as an ID."}, "firstName": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "middleName": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "lastName": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "fullName": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "userName": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "nickname": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "displayLastName": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "email": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "samAccountName": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "isActive": {"type": ["boolean", "null"], "title": "Boolean", "description": "The `Boolean` scalar type represents `true` or `false`."}, "birthday": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "seniorityDate": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "startDate": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "forecastEndDate": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "terminationDate": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "isUnlimitedContract": {"type": ["boolean", "null"], "title": "Boolean", "description": "The `Boolean` scalar type represents `true` or `false`."}, "isEngineer": {"type": ["boolean", "null"], "title": "Boolean", "description": "The `Boolean` scalar type represents `true` or `false`."}, "worksOnSoftware": {"type": ["boolean", "null"], "title": "Boolean", "description": "The `Boolean` scalar type represents `true` or `false`."}, "title": {"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "ID", "description": "The `ID` scalar type represents a unique identifier, often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\"4\"`) or integer (such as `4`) input value will be accepted as an ID."}, "name": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "employeeRank": {"type": ["object", "string", "null"], "description": "Wayfair employee ranks"}}, "description": "Wayfair job titles"}, "profile": {"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "ID", "description": "The `ID` scalar type represents a unique identifier, often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\"4\"`) or integer (such as `4`) input value will be accepted as an ID."}, "name": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "isOffshore": {"type": ["boolean", "null"], "title": "Boolean", "description": "The `Boolean` scalar type represents `true` or `false`."}}, "description": "Profile information of an employee (ex: Massachusetts Employee, German Employee)"}, "type": {"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "ID", "description": "The `ID` scalar type represents a unique identifier, often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\"4\"`) or integer (such as `4`) input value will be accepted as an ID."}, "name": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}}, "description": "Wayfair employee categories (ex: intern, contract, full time)"}, "location": {"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "ID", "description": "The `ID` scalar type represents a unique identifier, often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\"4\"`) or integer (such as `4`) input value will be accepted as an ID."}, "name": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "officeCode": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}}, "description": "Wayfair employee location (ex Copley Boston)"}, "phoneExtension": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "manager": {"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "ID", "description": "The `ID` scalar type represents a unique identifier, often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\"4\"`) or integer (such as `4`) input value will be accepted as an ID."}, "firstName": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "middleName": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "lastName": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "fullName": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "userName": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "nickname": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "displayLastName": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "email": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "samAccountName": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "isActive": {"type": ["boolean", "null"], "title": "Boolean", "description": "The `Boolean` scalar type represents `true` or `false`."}, "birthday": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "seniorityDate": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "startDate": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "forecastEndDate": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "terminationDate": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "isUnlimitedContract": {"type": ["boolean", "null"], "title": "Boolean", "description": "The `Boolean` scalar type represents `true` or `false`."}, "isEngineer": {"type": ["boolean", "null"], "title": "Boolean", "description": "The `Boolean` scalar type represents `true` or `false`."}, "worksOnSoftware": {"type": ["boolean", "null"], "title": "Boolean", "description": "The `Boolean` scalar type represents `true` or `false`."}, "title": {"type": ["object", "string", "null"], "description": "Wayfair job titles"}, "profile": {"type": ["object", "string", "null"], "description": "Profile information of an employee (ex: Massachusetts Employee, German Employee)"}, "type": {"type": ["object", "string", "null"], "description": "Wayfair employee categories (ex: intern, contract, full time)"}, "location": {"type": ["object", "string", "null"], "description": "Wayfair employee location (ex Copley Boston)"}, "phoneExtension": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "manager": {"type": ["object", "string", "null"], "description": "Fetches data for an employee."}, "workgroup": {"type": ["object", "string", "null"], "description": "Wayfair workgroup information"}, "processedByEmployee": {"type": ["object", "string", "null"], "description": "Fetches data for an employee."}, "directReports": {"type": "array", "items": {"anyOf": [{"type": ["object", "string", "null"], "description": "Fetches data for an employee."}, {"type": "null"}]}}}, "description": "Fetches data for an employee."}, "workgroup": {"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "ID", "description": "The `ID` scalar type represents a unique identifier, often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\"4\"`) or integer (such as `4`) input value will be accepted as an ID."}, "name": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "supervisor": {"type": ["object", "string", "null"], "description": "Fetches data for an employee."}, "employees": {"type": "array", "items": {"anyOf": [{"type": ["object", "string", "null"], "description": "Fetches data for an employee."}, {"type": "null"}]}}}, "description": "Wayfair workgroup information"}, "processedByEmployee": {"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "ID", "description": "The `ID` scalar type represents a unique identifier, often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\"4\"`) or integer (such as `4`) input value will be accepted as an ID."}, "firstName": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "middleName": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "lastName": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "fullName": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "userName": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "nickname": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "displayLastName": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "email": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "samAccountName": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "isActive": {"type": ["boolean", "null"], "title": "Boolean", "description": "The `Boolean` scalar type represents `true` or `false`."}, "birthday": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "seniorityDate": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "startDate": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "forecastEndDate": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "terminationDate": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "isUnlimitedContract": {"type": ["boolean", "null"], "title": "Boolean", "description": "The `Boolean` scalar type represents `true` or `false`."}, "isEngineer": {"type": ["boolean", "null"], "title": "Boolean", "description": "The `Boolean` scalar type represents `true` or `false`."}, "worksOnSoftware": {"type": ["boolean", "null"], "title": "Boolean", "description": "The `Boolean` scalar type represents `true` or `false`."}, "title": {"type": ["object", "string", "null"], "description": "Wayfair job titles"}, "profile": {"type": ["object", "string", "null"], "description": "Profile information of an employee (ex: Massachusetts Employee, German Employee)"}, "type": {"type": ["object", "string", "null"], "description": "Wayfair employee categories (ex: intern, contract, full time)"}, "location": {"type": ["object", "string", "null"], "description": "Wayfair employee location (ex Copley Boston)"}, "phoneExtension": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "manager": {"type": ["object", "string", "null"], "description": "Fetches data for an employee."}, "workgroup": {"type": ["object", "string", "null"], "description": "Wayfair workgroup information"}, "processedByEmployee": {"type": ["object", "string", "null"], "description": "Fetches data for an employee."}, "directReports": {"type": "array", "items": {"anyOf": [{"type": ["object", "string", "null"], "description": "Fetches data for an employee."}, {"type": "null"}]}}}, "description": "Fetches data for an employee."}, "directReports": {"type": "array", "items": {"anyOf": [{"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "ID", "description": "The `ID` scalar type represents a unique identifier, often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\"4\"`) or integer (such as `4`) input value will be accepted as an ID."}, "firstName": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "middleName": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "lastName": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "fullName": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "userName": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "nickname": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "displayLastName": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "email": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "samAccountName": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "isActive": {"type": ["boolean", "null"], "title": "Boolean", "description": "The `Boolean` scalar type represents `true` or `false`."}, "birthday": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "seniorityDate": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "startDate": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "forecastEndDate": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "terminationDate": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "isUnlimitedContract": {"type": ["boolean", "null"], "title": "Boolean", "description": "The `Boolean` scalar type represents `true` or `false`."}, "isEngineer": {"type": ["boolean", "null"], "title": "Boolean", "description": "The `Boolean` scalar type represents `true` or `false`."}, "worksOnSoftware": {"type": ["boolean", "null"], "title": "Boolean", "description": "The `Boolean` scalar type represents `true` or `false`."}, "title": {"type": ["object", "string", "null"], "description": "Wayfair job titles"}, "profile": {"type": ["object", "string", "null"], "description": "Profile information of an employee (ex: Massachusetts Employee, German Employee)"}, "type": {"type": ["object", "string", "null"], "description": "Wayfair employee categories (ex: intern, contract, full time)"}, "location": {"type": ["object", "string", "null"], "description": "Wayfair employee location (ex Copley Boston)"}, "phoneExtension": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "manager": {"type": ["object", "string", "null"], "description": "Fetches data for an employee."}, "workgroup": {"type": ["object", "string", "null"], "description": "Wayfair workgroup information"}, "processedByEmployee": {"type": ["object", "string", "null"], "description": "Fetches data for an employee."}, "directReports": {"type": "array", "items": {"anyOf": [{"type": ["object", "string", "null"], "description": "Fetches data for an employee."}, {"type": "null"}]}}}, "description": "Fetches data for an employee."}, {"type": "null"}]}}}, "description": "Fetches data for an employee."}, "directReports": {"type": "array", "items": {"anyOf": [{"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "ID", "description": "The `ID` scalar type represents a unique identifier, often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\"4\"`) or integer (such as `4`) input value will be accepted as an ID."}, "firstName": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "middleName": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "lastName": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "fullName": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "userName": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "nickname": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "displayLastName": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "email": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "samAccountName": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "isActive": {"type": ["boolean", "null"], "title": "Boolean", "description": "The `Boolean` scalar type represents `true` or `false`."}, "birthday": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "seniorityDate": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "startDate": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "forecastEndDate": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "terminationDate": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "isUnlimitedContract": {"type": ["boolean", "null"], "title": "Boolean", "description": "The `Boolean` scalar type represents `true` or `false`."}, "isEngineer": {"type": ["boolean", "null"], "title": "Boolean", "description": "The `Boolean` scalar type represents `true` or `false`."}, "worksOnSoftware": {"type": ["boolean", "null"], "title": "Boolean", "description": "The `Boolean` scalar type represents `true` or `false`."}, "title": {"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "ID", "description": "The `ID` scalar type represents a unique identifier, often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\"4\"`) or integer (such as `4`) input value will be accepted as an ID."}, "name": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "employeeRank": {"type": ["object", "string", "null"], "description": "Wayfair employee ranks"}}, "description": "Wayfair job titles"}, "profile": {"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "ID", "description": "The `ID` scalar type represents a unique identifier, often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\"4\"`) or integer (such as `4`) input value will be accepted as an ID."}, "name": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "isOffshore": {"type": ["boolean", "null"], "title": "Boolean", "description": "The `Boolean` scalar type represents `true` or `false`."}}, "description": "Profile information of an employee (ex: Massachusetts Employee, German Employee)"}, "type": {"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "ID", "description": "The `ID` scalar type represents a unique identifier, often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\"4\"`) or integer (such as `4`) input value will be accepted as an ID."}, "name": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}}, "description": "Wayfair employee categories (ex: intern, contract, full time)"}, "location": {"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "ID", "description": "The `ID` scalar type represents a unique identifier, often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\"4\"`) or integer (such as `4`) input value will be accepted as an ID."}, "name": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "officeCode": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}}, "description": "Wayfair employee location (ex Copley Boston)"}, "phoneExtension": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "manager": {"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "ID", "description": "The `ID` scalar type represents a unique identifier, often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\"4\"`) or integer (such as `4`) input value will be accepted as an ID."}, "firstName": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "middleName": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "lastName": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "fullName": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "userName": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "nickname": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "displayLastName": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "email": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "samAccountName": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "isActive": {"type": ["boolean", "null"], "title": "Boolean", "description": "The `Boolean` scalar type represents `true` or `false`."}, "birthday": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "seniorityDate": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "startDate": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "forecastEndDate": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "terminationDate": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "isUnlimitedContract": {"type": ["boolean", "null"], "title": "Boolean", "description": "The `Boolean` scalar type represents `true` or `false`."}, "isEngineer": {"type": ["boolean", "null"], "title": "Boolean", "description": "The `Boolean` scalar type represents `true` or `false`."}, "worksOnSoftware": {"type": ["boolean", "null"], "title": "Boolean", "description": "The `Boolean` scalar type represents `true` or `false`."}, "title": {"type": ["object", "string", "null"], "description": "Wayfair job titles"}, "profile": {"type": ["object", "string", "null"], "description": "Profile information of an employee (ex: Massachusetts Employee, German Employee)"}, "type": {"type": ["object", "string", "null"], "description": "Wayfair employee categories (ex: intern, contract, full time)"}, "location": {"type": ["object", "string", "null"], "description": "Wayfair employee location (ex Copley Boston)"}, "phoneExtension": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "manager": {"type": ["object", "string", "null"], "description": "Fetches data for an employee."}, "workgroup": {"type": ["object", "string", "null"], "description": "Wayfair workgroup information"}, "processedByEmployee": {"type": ["object", "string", "null"], "description": "Fetches data for an employee."}, "directReports": {"type": "array", "items": {"anyOf": [{"type": ["object", "string", "null"], "description": "Fetches data for an employee."}, {"type": "null"}]}}}, "description": "Fetches data for an employee."}, "workgroup": {"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "ID", "description": "The `ID` scalar type represents a unique identifier, often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\"4\"`) or integer (such as `4`) input value will be accepted as an ID."}, "name": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "supervisor": {"type": ["object", "string", "null"], "description": "Fetches data for an employee."}, "employees": {"type": "array", "items": {"anyOf": [{"type": ["object", "string", "null"], "description": "Fetches data for an employee."}, {"type": "null"}]}}}, "description": "Wayfair workgroup information"}, "processedByEmployee": {"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "ID", "description": "The `ID` scalar type represents a unique identifier, often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\"4\"`) or integer (such as `4`) input value will be accepted as an ID."}, "firstName": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "middleName": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "lastName": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "fullName": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "userName": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "nickname": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "displayLastName": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "email": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "samAccountName": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "isActive": {"type": ["boolean", "null"], "title": "Boolean", "description": "The `Boolean` scalar type represents `true` or `false`."}, "birthday": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "seniorityDate": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "startDate": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "forecastEndDate": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "terminationDate": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "isUnlimitedContract": {"type": ["boolean", "null"], "title": "Boolean", "description": "The `Boolean` scalar type represents `true` or `false`."}, "isEngineer": {"type": ["boolean", "null"], "title": "Boolean", "description": "The `Boolean` scalar type represents `true` or `false`."}, "worksOnSoftware": {"type": ["boolean", "null"], "title": "Boolean", "description": "The `Boolean` scalar type represents `true` or `false`."}, "title": {"type": ["object", "string", "null"], "description": "Wayfair job titles"}, "profile": {"type": ["object", "string", "null"], "description": "Profile information of an employee (ex: Massachusetts Employee, German Employee)"}, "type": {"type": ["object", "string", "null"], "description": "Wayfair employee categories (ex: intern, contract, full time)"}, "location": {"type": ["object", "string", "null"], "description": "Wayfair employee location (ex Copley Boston)"}, "phoneExtension": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "manager": {"type": ["object", "string", "null"], "description": "Fetches data for an employee."}, "workgroup": {"type": ["object", "string", "null"], "description": "Wayfair workgroup information"}, "processedByEmployee": {"type": ["object", "string", "null"], "description": "Fetches data for an employee."}, "directReports": {"type": "array", "items": {"anyOf": [{"type": ["object", "string", "null"], "description": "Fetches data for an employee."}, {"type": "null"}]}}}, "description": "Fetches data for an employee."}, "directReports": {"type": "array", "items": {"anyOf": [{"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "ID", "description": "The `ID` scalar type represents a unique identifier, often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\"4\"`) or integer (such as `4`) input value will be accepted as an ID."}, "firstName": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "middleName": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "lastName": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "fullName": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "userName": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "nickname": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "displayLastName": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "email": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "samAccountName": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "isActive": {"type": ["boolean", "null"], "title": "Boolean", "description": "The `Boolean` scalar type represents `true` or `false`."}, "birthday": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "seniorityDate": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "startDate": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "forecastEndDate": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "terminationDate": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "isUnlimitedContract": {"type": ["boolean", "null"], "title": "Boolean", "description": "The `Boolean` scalar type represents `true` or `false`."}, "isEngineer": {"type": ["boolean", "null"], "title": "Boolean", "description": "The `Boolean` scalar type represents `true` or `false`."}, "worksOnSoftware": {"type": ["boolean", "null"], "title": "Boolean", "description": "The `Boolean` scalar type represents `true` or `false`."}, "title": {"type": ["object", "string", "null"], "description": "Wayfair job titles"}, "profile": {"type": ["object", "string", "null"], "description": "Profile information of an employee (ex: Massachusetts Employee, German Employee)"}, "type": {"type": ["object", "string", "null"], "description": "Wayfair employee categories (ex: intern, contract, full time)"}, "location": {"type": ["object", "string", "null"], "description": "Wayfair employee location (ex Copley Boston)"}, "phoneExtension": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "manager": {"type": ["object", "string", "null"], "description": "Fetches data for an employee."}, "workgroup": {"type": ["object", "string", "null"], "description": "Wayfair workgroup information"}, "processedByEmployee": {"type": ["object", "string", "null"], "description": "Fetches data for an employee."}, "directReports": {"type": "array", "items": {"anyOf": [{"type": ["object", "string", "null"], "description": "Fetches data for an employee."}, {"type": "null"}]}}}, "description": "Fetches data for an employee."}, {"type": "null"}]}}}, "description": "Fetches data for an employee."}, {"type": "null"}]}}}, "description": "Fetches data for an employee."}, "WayfairJobTitle": {"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "ID", "description": "The `ID` scalar type represents a unique identifier, often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\"4\"`) or integer (such as `4`) input value will be accepted as an ID."}, "name": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "employeeRank": {"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "ID", "description": "The `ID` scalar type represents a unique identifier, often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\"4\"`) or integer (such as `4`) input value will be accepted as an ID."}, "name": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "level": {"type": ["object", "string", "null"], "title": "Int32", "description": "The `Int32` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1."}}, "description": "Wayfair employee ranks"}}, "description": "Wayfair job titles"}, "WayfairEmployeeRank": {"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "ID", "description": "The `ID` scalar type represents a unique identifier, often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\"4\"`) or integer (such as `4`) input value will be accepted as an ID."}, "name": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "level": {"type": ["object", "string", "null"], "title": "Int32", "description": "The `Int32` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1."}}, "description": "Wayfair employee ranks"}, "WayfairEmployeeProfile": {"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "ID", "description": "The `ID` scalar type represents a unique identifier, often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\"4\"`) or integer (such as `4`) input value will be accepted as an ID."}, "name": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "isOffshore": {"type": ["boolean", "null"], "title": "Boolean", "description": "The `Boolean` scalar type represents `true` or `false`."}}, "description": "Profile information of an employee (ex: Massachusetts Employee, German Employee)"}, "WayfairEmployeeCategory": {"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "ID", "description": "The `ID` scalar type represents a unique identifier, often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\"4\"`) or integer (such as `4`) input value will be accepted as an ID."}, "name": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}}, "description": "Wayfair employee categories (ex: intern, contract, full time)"}, "WayfairEmployeeLocation": {"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "ID", "description": "The `ID` scalar type represents a unique identifier, often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\"4\"`) or integer (such as `4`) input value will be accepted as an ID."}, "name": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "officeCode": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}}, "description": "Wayfair employee location (ex Copley Boston)"}, "WayfairWorkgroup": {"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "ID", "description": "The `ID` scalar type represents a unique identifier, often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\"4\"`) or integer (such as `4`) input value will be accepted as an ID."}, "name": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "supervisor": {"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "ID", "description": "The `ID` scalar type represents a unique identifier, often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\"4\"`) or integer (such as `4`) input value will be accepted as an ID."}, "firstName": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "middleName": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "lastName": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "fullName": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "userName": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "nickname": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "displayLastName": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "email": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "samAccountName": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "isActive": {"type": ["boolean", "null"], "title": "Boolean", "description": "The `Boolean` scalar type represents `true` or `false`."}, "birthday": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "seniorityDate": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "startDate": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "forecastEndDate": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "terminationDate": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "isUnlimitedContract": {"type": ["boolean", "null"], "title": "Boolean", "description": "The `Boolean` scalar type represents `true` or `false`."}, "isEngineer": {"type": ["boolean", "null"], "title": "Boolean", "description": "The `Boolean` scalar type represents `true` or `false`."}, "worksOnSoftware": {"type": ["boolean", "null"], "title": "Boolean", "description": "The `Boolean` scalar type represents `true` or `false`."}, "title": {"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "ID", "description": "The `ID` scalar type represents a unique identifier, often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\"4\"`) or integer (such as `4`) input value will be accepted as an ID."}, "name": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "employeeRank": {"type": ["object", "string", "null"], "description": "Wayfair employee ranks"}}, "description": "Wayfair job titles"}, "profile": {"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "ID", "description": "The `ID` scalar type represents a unique identifier, often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\"4\"`) or integer (such as `4`) input value will be accepted as an ID."}, "name": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "isOffshore": {"type": ["boolean", "null"], "title": "Boolean", "description": "The `Boolean` scalar type represents `true` or `false`."}}, "description": "Profile information of an employee (ex: Massachusetts Employee, German Employee)"}, "type": {"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "ID", "description": "The `ID` scalar type represents a unique identifier, often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\"4\"`) or integer (such as `4`) input value will be accepted as an ID."}, "name": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}}, "description": "Wayfair employee categories (ex: intern, contract, full time)"}, "location": {"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "ID", "description": "The `ID` scalar type represents a unique identifier, often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\"4\"`) or integer (such as `4`) input value will be accepted as an ID."}, "name": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "officeCode": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}}, "description": "Wayfair employee location (ex Copley Boston)"}, "phoneExtension": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "manager": {"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "ID", "description": "The `ID` scalar type represents a unique identifier, often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\"4\"`) or integer (such as `4`) input value will be accepted as an ID."}, "firstName": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "middleName": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "lastName": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "fullName": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "userName": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "nickname": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "displayLastName": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "email": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "samAccountName": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "isActive": {"type": ["boolean", "null"], "title": "Boolean", "description": "The `Boolean` scalar type represents `true` or `false`."}, "birthday": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "seniorityDate": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "startDate": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "forecastEndDate": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "terminationDate": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "isUnlimitedContract": {"type": ["boolean", "null"], "title": "Boolean", "description": "The `Boolean` scalar type represents `true` or `false`."}, "isEngineer": {"type": ["boolean", "null"], "title": "Boolean", "description": "The `Boolean` scalar type represents `true` or `false`."}, "worksOnSoftware": {"type": ["boolean", "null"], "title": "Boolean", "description": "The `Boolean` scalar type represents `true` or `false`."}, "title": {"type": ["object", "string", "null"], "description": "Wayfair job titles"}, "profile": {"type": ["object", "string", "null"], "description": "Profile information of an employee (ex: Massachusetts Employee, German Employee)"}, "type": {"type": ["object", "string", "null"], "description": "Wayfair employee categories (ex: intern, contract, full time)"}, "location": {"type": ["object", "string", "null"], "description": "Wayfair employee location (ex Copley Boston)"}, "phoneExtension": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "manager": {"type": ["object", "string", "null"], "description": "Fetches data for an employee."}, "workgroup": {"type": ["object", "string", "null"], "description": "Wayfair workgroup information"}, "processedByEmployee": {"type": ["object", "string", "null"], "description": "Fetches data for an employee."}, "directReports": {"type": "array", "items": {"anyOf": [{"type": ["object", "string", "null"], "description": "Fetches data for an employee."}, {"type": "null"}]}}}, "description": "Fetches data for an employee."}, "workgroup": {"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "ID", "description": "The `ID` scalar type represents a unique identifier, often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\"4\"`) or integer (such as `4`) input value will be accepted as an ID."}, "name": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "supervisor": {"type": ["object", "string", "null"], "description": "Fetches data for an employee."}, "employees": {"type": "array", "items": {"anyOf": [{"type": ["object", "string", "null"], "description": "Fetches data for an employee."}, {"type": "null"}]}}}, "description": "Wayfair workgroup information"}, "processedByEmployee": {"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "ID", "description": "The `ID` scalar type represents a unique identifier, often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\"4\"`) or integer (such as `4`) input value will be accepted as an ID."}, "firstName": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "middleName": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "lastName": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "fullName": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "userName": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "nickname": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "displayLastName": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "email": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "samAccountName": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "isActive": {"type": ["boolean", "null"], "title": "Boolean", "description": "The `Boolean` scalar type represents `true` or `false`."}, "birthday": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "seniorityDate": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "startDate": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "forecastEndDate": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "terminationDate": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "isUnlimitedContract": {"type": ["boolean", "null"], "title": "Boolean", "description": "The `Boolean` scalar type represents `true` or `false`."}, "isEngineer": {"type": ["boolean", "null"], "title": "Boolean", "description": "The `Boolean` scalar type represents `true` or `false`."}, "worksOnSoftware": {"type": ["boolean", "null"], "title": "Boolean", "description": "The `Boolean` scalar type represents `true` or `false`."}, "title": {"type": ["object", "string", "null"], "description": "Wayfair job titles"}, "profile": {"type": ["object", "string", "null"], "description": "Profile information of an employee (ex: Massachusetts Employee, German Employee)"}, "type": {"type": ["object", "string", "null"], "description": "Wayfair employee categories (ex: intern, contract, full time)"}, "location": {"type": ["object", "string", "null"], "description": "Wayfair employee location (ex Copley Boston)"}, "phoneExtension": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "manager": {"type": ["object", "string", "null"], "description": "Fetches data for an employee."}, "workgroup": {"type": ["object", "string", "null"], "description": "Wayfair workgroup information"}, "processedByEmployee": {"type": ["object", "string", "null"], "description": "Fetches data for an employee."}, "directReports": {"type": "array", "items": {"anyOf": [{"type": ["object", "string", "null"], "description": "Fetches data for an employee."}, {"type": "null"}]}}}, "description": "Fetches data for an employee."}, "directReports": {"type": "array", "items": {"anyOf": [{"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "ID", "description": "The `ID` scalar type represents a unique identifier, often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\"4\"`) or integer (such as `4`) input value will be accepted as an ID."}, "firstName": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "middleName": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "lastName": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "fullName": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "userName": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "nickname": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "displayLastName": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "email": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "samAccountName": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "isActive": {"type": ["boolean", "null"], "title": "Boolean", "description": "The `Boolean` scalar type represents `true` or `false`."}, "birthday": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "seniorityDate": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "startDate": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "forecastEndDate": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "terminationDate": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "isUnlimitedContract": {"type": ["boolean", "null"], "title": "Boolean", "description": "The `Boolean` scalar type represents `true` or `false`."}, "isEngineer": {"type": ["boolean", "null"], "title": "Boolean", "description": "The `Boolean` scalar type represents `true` or `false`."}, "worksOnSoftware": {"type": ["boolean", "null"], "title": "Boolean", "description": "The `Boolean` scalar type represents `true` or `false`."}, "title": {"type": ["object", "string", "null"], "description": "Wayfair job titles"}, "profile": {"type": ["object", "string", "null"], "description": "Profile information of an employee (ex: Massachusetts Employee, German Employee)"}, "type": {"type": ["object", "string", "null"], "description": "Wayfair employee categories (ex: intern, contract, full time)"}, "location": {"type": ["object", "string", "null"], "description": "Wayfair employee location (ex Copley Boston)"}, "phoneExtension": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "manager": {"type": ["object", "string", "null"], "description": "Fetches data for an employee."}, "workgroup": {"type": ["object", "string", "null"], "description": "Wayfair workgroup information"}, "processedByEmployee": {"type": ["object", "string", "null"], "description": "Fetches data for an employee."}, "directReports": {"type": "array", "items": {"anyOf": [{"type": ["object", "string", "null"], "description": "Fetches data for an employee."}, {"type": "null"}]}}}, "description": "Fetches data for an employee."}, {"type": "null"}]}}}, "description": "Fetches data for an employee."}, "employees": {"type": "array", "items": {"anyOf": [{"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "ID", "description": "The `ID` scalar type represents a unique identifier, often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\"4\"`) or integer (such as `4`) input value will be accepted as an ID."}, "firstName": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "middleName": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "lastName": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "fullName": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "userName": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "nickname": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "displayLastName": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "email": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "samAccountName": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "isActive": {"type": ["boolean", "null"], "title": "Boolean", "description": "The `Boolean` scalar type represents `true` or `false`."}, "birthday": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "seniorityDate": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "startDate": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "forecastEndDate": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "terminationDate": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "isUnlimitedContract": {"type": ["boolean", "null"], "title": "Boolean", "description": "The `Boolean` scalar type represents `true` or `false`."}, "isEngineer": {"type": ["boolean", "null"], "title": "Boolean", "description": "The `Boolean` scalar type represents `true` or `false`."}, "worksOnSoftware": {"type": ["boolean", "null"], "title": "Boolean", "description": "The `Boolean` scalar type represents `true` or `false`."}, "title": {"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "ID", "description": "The `ID` scalar type represents a unique identifier, often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\"4\"`) or integer (such as `4`) input value will be accepted as an ID."}, "name": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "employeeRank": {"type": ["object", "string", "null"], "description": "Wayfair employee ranks"}}, "description": "Wayfair job titles"}, "profile": {"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "ID", "description": "The `ID` scalar type represents a unique identifier, often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\"4\"`) or integer (such as `4`) input value will be accepted as an ID."}, "name": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "isOffshore": {"type": ["boolean", "null"], "title": "Boolean", "description": "The `Boolean` scalar type represents `true` or `false`."}}, "description": "Profile information of an employee (ex: Massachusetts Employee, German Employee)"}, "type": {"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "ID", "description": "The `ID` scalar type represents a unique identifier, often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\"4\"`) or integer (such as `4`) input value will be accepted as an ID."}, "name": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}}, "description": "Wayfair employee categories (ex: intern, contract, full time)"}, "location": {"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "ID", "description": "The `ID` scalar type represents a unique identifier, often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\"4\"`) or integer (such as `4`) input value will be accepted as an ID."}, "name": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "officeCode": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}}, "description": "Wayfair employee location (ex Copley Boston)"}, "phoneExtension": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "manager": {"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "ID", "description": "The `ID` scalar type represents a unique identifier, often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\"4\"`) or integer (such as `4`) input value will be accepted as an ID."}, "firstName": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "middleName": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "lastName": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "fullName": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "userName": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "nickname": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "displayLastName": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "email": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "samAccountName": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "isActive": {"type": ["boolean", "null"], "title": "Boolean", "description": "The `Boolean` scalar type represents `true` or `false`."}, "birthday": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "seniorityDate": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "startDate": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "forecastEndDate": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "terminationDate": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "isUnlimitedContract": {"type": ["boolean", "null"], "title": "Boolean", "description": "The `Boolean` scalar type represents `true` or `false`."}, "isEngineer": {"type": ["boolean", "null"], "title": "Boolean", "description": "The `Boolean` scalar type represents `true` or `false`."}, "worksOnSoftware": {"type": ["boolean", "null"], "title": "Boolean", "description": "The `Boolean` scalar type represents `true` or `false`."}, "title": {"type": ["object", "string", "null"], "description": "Wayfair job titles"}, "profile": {"type": ["object", "string", "null"], "description": "Profile information of an employee (ex: Massachusetts Employee, German Employee)"}, "type": {"type": ["object", "string", "null"], "description": "Wayfair employee categories (ex: intern, contract, full time)"}, "location": {"type": ["object", "string", "null"], "description": "Wayfair employee location (ex Copley Boston)"}, "phoneExtension": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "manager": {"type": ["object", "string", "null"], "description": "Fetches data for an employee."}, "workgroup": {"type": ["object", "string", "null"], "description": "Wayfair workgroup information"}, "processedByEmployee": {"type": ["object", "string", "null"], "description": "Fetches data for an employee."}, "directReports": {"type": "array", "items": {"anyOf": [{"type": ["object", "string", "null"], "description": "Fetches data for an employee."}, {"type": "null"}]}}}, "description": "Fetches data for an employee."}, "workgroup": {"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "ID", "description": "The `ID` scalar type represents a unique identifier, often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\"4\"`) or integer (such as `4`) input value will be accepted as an ID."}, "name": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "supervisor": {"type": ["object", "string", "null"], "description": "Fetches data for an employee."}, "employees": {"type": "array", "items": {"anyOf": [{"type": ["object", "string", "null"], "description": "Fetches data for an employee."}, {"type": "null"}]}}}, "description": "Wayfair workgroup information"}, "processedByEmployee": {"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "ID", "description": "The `ID` scalar type represents a unique identifier, often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\"4\"`) or integer (such as `4`) input value will be accepted as an ID."}, "firstName": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "middleName": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "lastName": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "fullName": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "userName": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "nickname": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "displayLastName": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "email": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "samAccountName": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "isActive": {"type": ["boolean", "null"], "title": "Boolean", "description": "The `Boolean` scalar type represents `true` or `false`."}, "birthday": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "seniorityDate": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "startDate": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "forecastEndDate": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "terminationDate": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "isUnlimitedContract": {"type": ["boolean", "null"], "title": "Boolean", "description": "The `Boolean` scalar type represents `true` or `false`."}, "isEngineer": {"type": ["boolean", "null"], "title": "Boolean", "description": "The `Boolean` scalar type represents `true` or `false`."}, "worksOnSoftware": {"type": ["boolean", "null"], "title": "Boolean", "description": "The `Boolean` scalar type represents `true` or `false`."}, "title": {"type": ["object", "string", "null"], "description": "Wayfair job titles"}, "profile": {"type": ["object", "string", "null"], "description": "Profile information of an employee (ex: Massachusetts Employee, German Employee)"}, "type": {"type": ["object", "string", "null"], "description": "Wayfair employee categories (ex: intern, contract, full time)"}, "location": {"type": ["object", "string", "null"], "description": "Wayfair employee location (ex Copley Boston)"}, "phoneExtension": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "manager": {"type": ["object", "string", "null"], "description": "Fetches data for an employee."}, "workgroup": {"type": ["object", "string", "null"], "description": "Wayfair workgroup information"}, "processedByEmployee": {"type": ["object", "string", "null"], "description": "Fetches data for an employee."}, "directReports": {"type": "array", "items": {"anyOf": [{"type": ["object", "string", "null"], "description": "Fetches data for an employee."}, {"type": "null"}]}}}, "description": "Fetches data for an employee."}, "directReports": {"type": "array", "items": {"anyOf": [{"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "ID", "description": "The `ID` scalar type represents a unique identifier, often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\"4\"`) or integer (such as `4`) input value will be accepted as an ID."}, "firstName": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "middleName": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "lastName": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "fullName": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "userName": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "nickname": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "displayLastName": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "email": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "samAccountName": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "isActive": {"type": ["boolean", "null"], "title": "Boolean", "description": "The `Boolean` scalar type represents `true` or `false`."}, "birthday": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "seniorityDate": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "startDate": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "forecastEndDate": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "terminationDate": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "isUnlimitedContract": {"type": ["boolean", "null"], "title": "Boolean", "description": "The `Boolean` scalar type represents `true` or `false`."}, "isEngineer": {"type": ["boolean", "null"], "title": "Boolean", "description": "The `Boolean` scalar type represents `true` or `false`."}, "worksOnSoftware": {"type": ["boolean", "null"], "title": "Boolean", "description": "The `Boolean` scalar type represents `true` or `false`."}, "title": {"type": ["object", "string", "null"], "description": "Wayfair job titles"}, "profile": {"type": ["object", "string", "null"], "description": "Profile information of an employee (ex: Massachusetts Employee, German Employee)"}, "type": {"type": ["object", "string", "null"], "description": "Wayfair employee categories (ex: intern, contract, full time)"}, "location": {"type": ["object", "string", "null"], "description": "Wayfair employee location (ex Copley Boston)"}, "phoneExtension": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "manager": {"type": ["object", "string", "null"], "description": "Fetches data for an employee."}, "workgroup": {"type": ["object", "string", "null"], "description": "Wayfair workgroup information"}, "processedByEmployee": {"type": ["object", "string", "null"], "description": "Fetches data for an employee."}, "directReports": {"type": "array", "items": {"anyOf": [{"type": ["object", "string", "null"], "description": "Fetches data for an employee."}, {"type": "null"}]}}}, "description": "Fetches data for an employee."}, {"type": "null"}]}}}, "description": "Fetches data for an employee."}, {"type": "null"}]}}}, "description": "Wayfair workgroup information"}, "ArInvoiceReference": {"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "Int64", "description": "The `Int64` scalar type represents non-fractional signed whole numeric values. Int can represent values between PHP_INT_MIN AND PHP_INT_MAX."}}, "description": "A Reference to External Systems"}, "ArInvoiceDetailInterface": {"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "Int64", "description": "The `Int64` scalar type represents non-fractional signed whole numeric values. Int can represent values between PHP_INT_MIN AND PHP_INT_MAX."}, "quantity": {"type": ["number", "null"], "title": "Float", "description": "The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point)."}, "unitAmount": {"type": ["number", "null"], "title": "Float", "description": "The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point)."}, "itemAmount": {"type": ["number", "null"], "title": "Float", "description": "The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point)."}, "description": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "taxes": {"type": "array", "items": {"anyOf": [{"type": ["object", "string", "null"], "properties": {"type": {"type": ["string", "null"], "anyOf": [{"enum": ["SalesTax"], "title": "Sales Tax", "description": "Sales Tax"}, {"enum": ["SellersUseTax"], "title": "Sellers Use Tax", "description": "Sellers Use Tax"}, {"enum": ["EcoFee"], "title": "Eco Fee", "description": "Eco Fee"}, {"enum": ["SHP"], "title": "Shipment Tax", "description": "Shipment Tax"}, {"enum": ["GST"], "title": "GST Tax", "description": "GST Tax"}, {"enum": ["PST"], "title": "PST Tax", "description": "PST Tax"}, {"enum": ["QST"], "title": "QST Tax", "description": "QST Tax"}, {"enum": ["HST"], "title": "HST Tax", "description": "HST Tax"}, {"enum": ["VAT"], "title": "VAT Tax", "description": "VAT Tax"}, {"enum": ["NA"], "title": "Not Available", "description": "Not Available"}], "description": "An enumeration of Tax Types"}, "value": {"type": ["number", "null"], "title": "Float", "description": "The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point)."}}, "description": "The calculated tax amounts per type"}, {"type": "null"}]}}}, "description": "Detail of an AR Invoice - this contains all the common properties an invoice detail/line item should have"}, "taxByType": {"type": ["object", "string", "null"], "properties": {"type": {"type": ["string", "null"], "anyOf": [{"enum": ["SalesTax"], "title": "Sales Tax", "description": "Sales Tax"}, {"enum": ["SellersUseTax"], "title": "Sellers Use Tax", "description": "Sellers Use Tax"}, {"enum": ["EcoFee"], "title": "Eco Fee", "description": "Eco Fee"}, {"enum": ["SHP"], "title": "Shipment Tax", "description": "Shipment Tax"}, {"enum": ["GST"], "title": "GST Tax", "description": "GST Tax"}, {"enum": ["PST"], "title": "PST Tax", "description": "PST Tax"}, {"enum": ["QST"], "title": "QST Tax", "description": "QST Tax"}, {"enum": ["HST"], "title": "HST Tax", "description": "HST Tax"}, {"enum": ["VAT"], "title": "VAT Tax", "description": "VAT Tax"}, {"enum": ["NA"], "title": "Not Available", "description": "Not Available"}], "description": "An enumeration of Tax Types"}, "value": {"type": ["number", "null"], "title": "Float", "description": "The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point)."}}, "description": "The calculated tax amounts per type"}, "TaxTypeEnum": {"type": ["string", "null"], "anyOf": [{"enum": ["SalesTax"], "title": "Sales Tax", "description": "Sales Tax"}, {"enum": ["SellersUseTax"], "title": "Sellers Use Tax", "description": "Sellers Use Tax"}, {"enum": ["EcoFee"], "title": "Eco Fee", "description": "Eco Fee"}, {"enum": ["SHP"], "title": "Shipment Tax", "description": "Shipment Tax"}, {"enum": ["GST"], "title": "GST Tax", "description": "GST Tax"}, {"enum": ["PST"], "title": "PST Tax", "description": "PST Tax"}, {"enum": ["QST"], "title": "QST Tax", "description": "QST Tax"}, {"enum": ["HST"], "title": "HST Tax", "description": "HST Tax"}, {"enum": ["VAT"], "title": "VAT Tax", "description": "VAT Tax"}, {"enum": ["NA"], "title": "Not Available", "description": "Not Available"}], "description": "An enumeration of Tax Types"}, "Customer": {"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "ID", "description": "The `ID` scalar type represents a unique identifier, often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\"4\"`) or integer (such as `4`) input value will be accepted as an ID."}, "firstName": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "lastName": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "postalCode": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "email": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "contactAtPhone": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}}, "description": "A customer"}, "Customer_Interface": {"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "ID", "description": "The `ID` scalar type represents a unique identifier, often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\"4\"`) or integer (such as `4`) input value will be accepted as an ID."}, "firstName": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "lastName": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "postalCode": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "email": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "contactAtPhone": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}}, "description": "Interface for a customer"}, "Order": {"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "Int64", "description": "The `Int64` scalar type represents non-fractional signed whole numeric values. Int can represent values between PHP_INT_MIN AND PHP_INT_MAX."}}, "description": "Order entity, which denotes a customer placed order in one of the Wayfair customer facing sites."}, "OrderPayment": {"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "Int64", "description": "The `Int64` scalar type represents non-fractional signed whole numeric values. Int can represent values between PHP_INT_MIN AND PHP_INT_MAX."}}, "description": "Payment related to a customer placed order"}, "B2bArInvoiceDetail": {"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "Int64", "description": "The `Int64` scalar type represents non-fractional signed whole numeric values. Int can represent values between PHP_INT_MIN AND PHP_INT_MAX."}, "quantity": {"type": ["number", "null"], "title": "Float", "description": "The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point)."}, "unitAmount": {"type": ["number", "null"], "title": "Float", "description": "The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point)."}, "itemAmount": {"type": ["number", "null"], "title": "Float", "description": "The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point)."}, "description": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "orderProduct": {"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "Int64", "description": "The `Int64` scalar type represents non-fractional signed whole numeric values. Int can represent values between PHP_INT_MIN AND PHP_INT_MAX."}}, "description": "Product associated with a customer placed order"}, "taxes": {"type": "array", "items": {"anyOf": [{"type": ["object", "string", "null"], "properties": {"type": {"type": ["string", "null"], "anyOf": [{"enum": ["SalesTax"], "title": "Sales Tax", "description": "Sales Tax"}, {"enum": ["SellersUseTax"], "title": "Sellers Use Tax", "description": "Sellers Use Tax"}, {"enum": ["EcoFee"], "title": "Eco Fee", "description": "Eco Fee"}, {"enum": ["SHP"], "title": "Shipment Tax", "description": "Shipment Tax"}, {"enum": ["GST"], "title": "GST Tax", "description": "GST Tax"}, {"enum": ["PST"], "title": "PST Tax", "description": "PST Tax"}, {"enum": ["QST"], "title": "QST Tax", "description": "QST Tax"}, {"enum": ["HST"], "title": "HST Tax", "description": "HST Tax"}, {"enum": ["VAT"], "title": "VAT Tax", "description": "VAT Tax"}, {"enum": ["NA"], "title": "Not Available", "description": "Not Available"}], "description": "An enumeration of Tax Types"}, "value": {"type": ["number", "null"], "title": "Float", "description": "The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point)."}}, "description": "The calculated tax amounts per type"}, {"type": "null"}]}}}, "description": "Invoice line item detail of B2B AR Invoice type"}, "OrderProduct": {"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "Int64", "description": "The `Int64` scalar type represents non-fractional signed whole numeric values. Int can represent values between PHP_INT_MIN AND PHP_INT_MAX."}}, "description": "Product associated with a customer placed order"}, "CastlegateArInvoice": {"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "Int32", "description": "The `Int32` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1."}, "description": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "status": {"type": ["string", "null"], "anyOf": [{"enum": ["NEW"], "title": "Recently created or unprocessed", "description": "Recently created or unprocessed"}, {"enum": ["PENDING_APPROVAL"], "title": "Sent for approval but not approved yet", "description": "Sent for approval but not approved yet"}, {"enum": ["APPROVED"], "title": "Approved by the requested approver", "description": "Approved by the requested approver"}, {"enum": ["SENT_TO_RECIPIENT"], "title": "Sent to the intended recipient(s)", "description": "Sent to the intended recipient(s)"}, {"enum": ["PENDING_PAYMENT"], "title": "Is waiting for payment or to be reconciled", "description": "Is waiting for payment or to be reconciled"}, {"enum": ["PARTIALLY_PAID"], "title": "Is partially paid for and still to be matched against payment(s)", "description": "Is partially paid for and still to be matched against payment(s)"}, {"enum": ["FULLY_PAID"], "title": "Is fully paid for and matched/reconciled against payment(s)", "description": "Is fully paid for and matched/reconciled against payment(s)"}, {"enum": ["REJECTED"], "title": "Rejected in the process of approval", "description": "Rejected in the process of approval"}, {"enum": ["CANCELLED"], "title": "Cancelled due to some reason", "description": "Cancelled due to some reason"}], "description": "Enumerates all the statuses an AR Invoice can be in at any given point."}, "isApproved": {"type": ["boolean", "null"], "title": "Boolean", "description": "The `Boolean` scalar type represents `true` or `false`."}, "approvedOn": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "revenueSource": {"type": ["string", "null"], "anyOf": [{"enum": ["B2B"], "title": "Business to business type", "description": "Business to business type"}, {"enum": ["CASTLEGATE"], "title": "Castlegate or fulfillment services", "description": "Castlegate or fulfillment services"}, {"enum": ["SPONSORED_PRODUCTS"], "title": "Sponsored products type", "description": "Sponsored products type"}, {"enum": ["MAAS_MEDIA"], "title": "Maas media type", "description": "Maas media type"}, {"enum": ["LIQUIDATION"], "title": "Liquidation type", "description": "Liquidation type"}, {"enum": ["GIFT_CARD"], "title": "Gift card type", "description": "Gift card type"}], "description": "Types of different revenue sources or streams."}, "dueBy": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "paidOn": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "currency": {"type": ["string", "null"], "anyOf": [{"enum": ["US_DOLLAR"], "title": "US Dollar", "description": "US Dollar"}, {"enum": ["BRITISH_POUND"], "title": "British Pound", "description": "British Pound"}, {"enum": ["EURO"], "title": "Euro", "description": "Euro"}, {"enum": ["CANADIAN_DOLLAR"], "title": "Canadian Dollar", "description": "Canadian Dollar"}, {"enum": ["AUSTRALIAN_DOLLAR"], "title": "Australian Dollar", "description": "Australian Dollar"}], "description": "Types of currency"}, "invoiceAmount": {"type": ["number", "null"], "title": "Float", "description": "The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point)."}, "taxTotalAmount": {"type": ["number", "null"], "title": "Float", "description": "The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point)."}, "originalInvoiceTotalAmount": {"type": ["number", "null"], "title": "Float", "description": "The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point)."}, "originalTaxTotalAmount": {"type": ["number", "null"], "title": "Float", "description": "The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point)."}, "paidAmount": {"type": ["number", "null"], "title": "Float", "description": "The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point)."}, "dueAmount": {"type": ["number", "null"], "title": "Float", "description": "The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point)."}, "startsOn": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "endsOn": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "details": {"type": "array", "items": {"anyOf": [{"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "Int64", "description": "The `Int64` scalar type represents non-fractional signed whole numeric values. Int can represent values between PHP_INT_MIN AND PHP_INT_MAX."}, "quantity": {"type": ["number", "null"], "title": "Float", "description": "The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point)."}, "unitAmount": {"type": ["number", "null"], "title": "Float", "description": "The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point)."}, "itemAmount": {"type": ["number", "null"], "title": "Float", "description": "The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point)."}, "description": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "taxes": {"type": "array", "items": {"anyOf": [{"type": ["object", "string", "null"], "properties": {"type": {"type": ["string", "null"], "anyOf": [{"enum": ["SalesTax"], "title": "Sales Tax", "description": "Sales Tax"}, {"enum": ["SellersUseTax"], "title": "Sellers Use Tax", "description": "Sellers Use Tax"}, {"enum": ["EcoFee"], "title": "Eco Fee", "description": "Eco Fee"}, {"enum": ["SHP"], "title": "Shipment Tax", "description": "Shipment Tax"}, {"enum": ["GST"], "title": "GST Tax", "description": "GST Tax"}, {"enum": ["PST"], "title": "PST Tax", "description": "PST Tax"}, {"enum": ["QST"], "title": "QST Tax", "description": "QST Tax"}, {"enum": ["HST"], "title": "HST Tax", "description": "HST Tax"}, {"enum": ["VAT"], "title": "VAT Tax", "description": "VAT Tax"}, {"enum": ["NA"], "title": "Not Available", "description": "Not Available"}], "description": "An enumeration of Tax Types"}, "value": {"type": ["number", "null"], "title": "Float", "description": "The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point)."}}, "description": "The calculated tax amounts per type"}, {"type": "null"}]}}}, "description": "Detail of an AR Invoice - this contains all the common properties an invoice detail/line item should have"}, {"type": "null"}]}}, "documents": {"type": "array", "items": {"anyOf": [{"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "Int32", "description": "The `Int32` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1."}, "name": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "createdOn": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "type": {"type": ["string", "null"], "anyOf": [{"enum": ["pdf"], "title": "PDF form of an AR Invoice", "description": "PDF form of an AR Invoice"}, {"enum": ["csv"], "title": "CSV form of an AR Invoice", "description": "CSV form of an AR Invoice"}], "description": "Types of tangible readable AR Invoice document"}, "path": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "remoteStorageDownloadAdminUrl": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "remoteStoragePath": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}}, "description": "A document related to an AR Invoice"}, {"type": "null"}]}}, "fulfillmentCustomer": {"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "ID", "description": "The `ID` scalar type represents a unique identifier, often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\"4\"`) or integer (such as `4`) input value will be accepted as an ID."}, "supplier": {"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "ID", "description": "The `ID` scalar type represents a unique identifier, often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\"4\"`) or integer (such as `4`) input value will be accepted as an ID."}, "name": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "shortName": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "status": {"type": ["string", "null"], "anyOf": [{"enum": ["ACTIVE"], "title": "Active Status", "description": "Active Status"}, {"enum": ["INACTIVE"], "title": "Inactive Status", "description": "Inactive Status"}, {"enum": ["BEING_ADDED"], "title": "Being Added Status", "description": "Being Added Status"}, {"enum": ["ON_HOLD"], "title": "On Hold Status", "description": "On Hold Status"}], "description": "Represents the status of the supplier"}, "websiteURL": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "currency": {"type": ["string", "null"], "anyOf": [{"enum": ["USD"], "title": "US dollars", "description": "US dollars"}, {"enum": ["GBP"], "title": "British pounds", "description": "British pounds"}, {"enum": ["EUR"], "title": "Euros", "description": "Euros"}, {"enum": ["CAD"], "title": "Canadian dollars", "description": "Canadian dollars"}, {"enum": ["AUD"], "title": "Australian dollars", "description": "Australian dollars"}], "description": "Represents the currency id of the supplier"}, "scopes": {"type": "array", "items": {"anyOf": [{"type": ["object", "string", "null"], "description": "An API scope defining specific permissions for API access"}, {"type": "null"}]}}, "warehouses": {"type": "array", "items": {"type": ["object", "string", "null"], "description": "Information for a supplier warehouse"}}}, "description": "A supplier entity."}, "name": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "service": {"type": ["string", "null"], "anyOf": [{"enum": ["FULFILLMENT"], "title": "Fulfillment Customer in US", "description": "Fulfillment Customer in US"}, {"enum": ["CANADA_FULFILLMENT"], "title": "Fulfillment Customer in Canada ", "description": "Fulfillment Customer in Canada "}, {"enum": ["EU_FULFILLMENT"], "title": "Fulfillment Customer in EU", "description": "Fulfillment Customer in EU"}, {"enum": ["DRAY"], "title": "Dray Service", "description": "Dray Service"}, {"enum": ["OCEAN"], "title": "Ocean Service", "description": "Ocean Service"}, {"enum": ["ASIA_CONSOLIDATION"], "title": "Asia Consolidation Service", "description": "Asia Consolidation Service"}], "description": "Castlegate Service Type"}, "oceanService": {"type": ["object", "string", "null"], "properties": {"fulfillmentCustomer": {"type": ["object", "string", "null"], "description": "A Castlegate Fulfillment Customer"}, "activationDate": {"type": ["object", "string", "null"], "title": "Date_Time", "description": "A type for date time values that used Wayfair's WF\\Shared\\Date_Time_Value class"}}, "description": "The ocean service profile of a fulfillment customer"}, "aggregateHistoricalForecast": {"type": ["object", "string", "null"], "properties": {"values": {"type": "array", "items": {"anyOf": [{"type": ["object", "string", "null"], "description": "A quantity corresponding to a specific date. Example: a product forecast for a specific month"}, {"type": "null"}]}}, "timeframe": {"type": ["string", "null"], "anyOf": [{"enum": ["HISTORICAL"], "title": "Historical Time Frame", "description": "Historical Time Frame"}, {"enum": ["FUTURE"], "title": "Future Time Frame", "description": "Future Time Frame"}], "description": "The time frame of the forecast"}}, "description": "The future and historical replenishment forecasts for a Castlegate product"}, "aggregateFutureForecast": {"type": ["object", "string", "null"], "properties": {"values": {"type": "array", "items": {"anyOf": [{"type": ["object", "string", "null"], "description": "A quantity corresponding to a specific date. Example: a product forecast for a specific month"}, {"type": "null"}]}}, "timeframe": {"type": ["string", "null"], "anyOf": [{"enum": ["HISTORICAL"], "title": "Historical Time Frame", "description": "Historical Time Frame"}, {"enum": ["FUTURE"], "title": "Future Time Frame", "description": "Future Time Frame"}], "description": "The time frame of the forecast"}}, "description": "The future and historical replenishment forecasts for a Castlegate product"}, "aggregateHistoricalSales": {"type": "array", "items": {"anyOf": [{"type": ["object", "string", "null"], "properties": {"date": {"type": ["object", "string", "null"], "title": "Date_Time", "description": "A type for date time values that used Wayfair's WF\\Shared\\Date_Time_Value class"}, "value": {"type": ["number", "null"], "title": "Float", "description": "The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point)."}}, "description": "A quantity corresponding to a specific date. Example: a product forecast for a specific month"}, {"type": "null"}]}}, "isPartDataEnabled": {"type": ["boolean", "null"], "title": "Boolean", "description": "The `Boolean` scalar type represents `true` or `false`."}}, "description": "A Castlegate Fulfillment Customer"}, "communications": {"type": "array", "items": {"anyOf": [{"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "Int64", "description": "The `Int64` scalar type represents non-fractional signed whole numeric values. Int can represent values between PHP_INT_MIN AND PHP_INT_MAX."}, "type": {"type": ["string", "null"], "anyOf": [{"enum": ["UNSPECIFIED"], "title": "A communication for which no type was specified", "description": "A communication for which no type was specified"}, {"enum": ["INITIAL_COMMUNICATION"], "title": "An initial communication containing the invoice and payment information", "description": "An initial communication containing the invoice and payment information"}, {"enum": ["CANCELLATION_COMMUNICATION"], "title": "A cancellation communication containing the cancelled invoice information", "description": "A cancellation communication containing the cancelled invoice information"}, {"enum": ["NETTABLE_REMOVED"], "title": "A communication sent out when the netting status of an invoice is turned off", "description": "A communication sent out when the netting status of an invoice is turned off"}], "description": "Types of different revenue communications."}, "queuedOn": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "emailMessage": {"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "Int64", "description": "The `Int64` scalar type represents non-fractional signed whole numeric values. Int can represent values between PHP_INT_MIN AND PHP_INT_MAX."}}, "description": "An email communication"}}, "description": "A revenue invoice communication"}, {"type": "null"}]}}, "creator": {"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "Int64", "description": "The `Int64` scalar type represents non-fractional signed whole numeric values. Int can represent values between PHP_INT_MIN AND PHP_INT_MAX."}, "type": {"type": ["string", "null"], "anyOf": [{"enum": ["SUPPLIER"], "title": "Supplier type creator", "description": "Supplier type creator"}, {"enum": ["ADMIN_USER"], "title": "Admin user as a creator", "description": "Admin user as a creator"}, {"enum": ["EXTRANET_USER"], "title": "An extranet user as a creator", "description": "An extranet user as a creator"}, {"enum": ["INTERNAL"], "title": "An internal user as a creator", "description": "An internal user as a creator"}], "description": "Enumerates all the types of an AR Invoice creator."}}, "description": "A revenue invoice creator"}, "createdOn": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "effectiveOn": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "isReconciled": {"type": ["boolean", "null"], "title": "Boolean", "description": "The `Boolean` scalar type represents `true` or `false`."}, "reconciledBy": {"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "Int32", "description": "The `Int32` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1."}, "type": {"type": ["string", "null"], "anyOf": [{"enum": ["ADMIN_USER"], "title": "An admin user or employee logged in, having a valid Employee ID", "description": "An admin user or employee logged in, having a valid Employee ID"}, {"enum": ["AP_PAYMENT_PROCESSOR"], "title": "Automated accounts payable payment processor", "description": "Automated accounts payable payment processor"}], "description": "Types of different reconcilers that can potentially perform reconciliation of different AR components"}}, "description": "Represents a AR reconciler entity - who is responsible for reconciling the AR components"}, "nettable": {"type": ["boolean", "null"], "title": "Boolean", "description": "The `Boolean` scalar type represents `true` or `false`."}, "originallyNettable": {"type": ["boolean", "null"], "title": "Boolean", "description": "The `Boolean` scalar type represents `true` or `false`."}, "invoiceReceipientsEmailAddresses": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "payments": {"type": "array", "items": {"anyOf": [{"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "Int32", "description": "The `Int32` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1."}, "status": {"type": ["string", "null"], "anyOf": [{"enum": ["NEW"], "title": "Recently created or unprocessed", "description": "Recently created or unprocessed"}, {"enum": ["PARTIALLY_MATCHED"], "title": "Partially matched i.e. still available for reconciliation", "description": "Partially matched i.e. still available for reconciliation"}, {"enum": ["FULLY_MATCHED"], "title": "Fully matched i.e. reconciled completely", "description": "Fully matched i.e. reconciled completely"}, {"enum": ["VOID"], "title": "Voided", "description": "Voided"}], "description": "Enumerates all the statuses an AR Payment can be in at any given point."}, "revenueSource": {"type": ["string", "null"], "anyOf": [{"enum": ["B2B"], "title": "Business to business type", "description": "Business to business type"}, {"enum": ["CASTLEGATE"], "title": "Castlegate or fulfillment services", "description": "Castlegate or fulfillment services"}, {"enum": ["SPONSORED_PRODUCTS"], "title": "Sponsored products type", "description": "Sponsored products type"}, {"enum": ["MAAS_MEDIA"], "title": "Maas media type", "description": "Maas media type"}, {"enum": ["LIQUIDATION"], "title": "Liquidation type", "description": "Liquidation type"}, {"enum": ["GIFT_CARD"], "title": "Gift card type", "description": "Gift card type"}], "description": "Types of different revenue sources or streams."}, "amount": {"type": ["number", "null"], "title": "Float", "description": "The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point)."}, "currency": {"type": ["string", "null"], "anyOf": [{"enum": ["US_DOLLAR"], "title": "US Dollar", "description": "US Dollar"}, {"enum": ["BRITISH_POUND"], "title": "British Pound", "description": "British Pound"}, {"enum": ["EURO"], "title": "Euro", "description": "Euro"}, {"enum": ["CANADIAN_DOLLAR"], "title": "Canadian Dollar", "description": "Canadian Dollar"}, {"enum": ["AUSTRALIAN_DOLLAR"], "title": "Australian Dollar", "description": "Australian Dollar"}], "description": "Types of currency"}, "reference": {"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "Int64", "description": "The `Int64` scalar type represents non-fractional signed whole numeric values. Int can represent values between PHP_INT_MIN AND PHP_INT_MAX."}, "type": {"type": ["string", "null"], "anyOf": [{"enum": ["SELF"], "title": "Self if the payment was created directly by itself and there is no external reference", "description": "Self if the payment was created directly by itself and there is no external reference"}, {"enum": ["CLASSIFICATION_TOOL"], "title": "An admin classification tool", "description": "An admin classification tool"}, {"enum": ["AP_VOUCHER"], "title": "An accounts payable voucher or payment that was cut for a vendor to pay our AP balances", "description": "An accounts payable voucher or payment that was cut for a vendor to pay our AP balances"}, {"enum": ["CREDIT_MEMO"], "title": "A credit to the vendor", "description": "A credit to the vendor"}], "description": "Enumerates all the references types an AR payment can have."}}, "description": "Represents a reference or an origination of an AR payment. An AR payment can refer to an outside payment or simply to itself"}, "payer": {"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "Int64", "description": "The `Int64` scalar type represents non-fractional signed whole numeric values. Int can represent values between PHP_INT_MIN AND PHP_INT_MAX."}, "type": {"type": ["string", "null"], "anyOf": [{"enum": ["SUPPLIER"], "title": "Supplier as a payer of an AR Payment", "description": "Supplier as a payer of an AR Payment"}, {"enum": ["AP_VOUCHER"], "title": "AP Voucher as a payer of an AR Payment", "description": "AP Voucher as a payer of an AR Payment"}, {"enum": ["CUSTOMER"], "title": "Customer as a payer of an AR Payment", "description": "Customer as a payer of an AR Payment"}, {"enum": ["FULFILLMENT_CUSTOMER"], "title": "Fulfillment customer as a payer of an AR Payment", "description": "Fulfillment customer as a payer of an AR Payment"}], "description": "Enumerates all types of payers that can make an AR payment."}}, "description": "Represents an entity that uses Wayfair's services and pays for them"}, "createdOn": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "description": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "matchedAmount": {"type": ["number", "null"], "title": "Float", "description": "The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point)."}, "isReconciled": {"type": ["boolean", "null"], "title": "Boolean", "description": "The `Boolean` scalar type represents `true` or `false`."}, "reconciledOn": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "reconciledBy": {"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "Int32", "description": "The `Int32` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1."}, "type": {"type": ["string", "null"], "anyOf": [{"enum": ["ADMIN_USER"], "title": "An admin user or employee logged in, having a valid Employee ID", "description": "An admin user or employee logged in, having a valid Employee ID"}, {"enum": ["AP_PAYMENT_PROCESSOR"], "title": "Automated accounts payable payment processor", "description": "Automated accounts payable payment processor"}], "description": "Types of different reconcilers that can potentially perform reconciliation of different AR components"}}, "description": "Represents a AR reconciler entity - who is responsible for reconciling the AR components"}}, "description": "Accounts Receivable Payment entity which depicts a payment that we have realized as a \"Revenue\" and which we could have received from different revenue streams or sources."}, {"type": "null"}]}}, "isCreditMemo": {"type": ["boolean", "null"], "title": "Boolean", "description": "The `Boolean` scalar type represents `true` or `false`."}, "creditMemos": {"type": "array", "items": {"anyOf": [{"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "Int32", "description": "The `Int32` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1."}, "description": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "status": {"type": ["string", "null"], "anyOf": [{"enum": ["NEW"], "title": "Recently created or unprocessed", "description": "Recently created or unprocessed"}, {"enum": ["PENDING_APPROVAL"], "title": "Sent for approval but not approved yet", "description": "Sent for approval but not approved yet"}, {"enum": ["APPROVED"], "title": "Approved by the requested approver", "description": "Approved by the requested approver"}, {"enum": ["SENT_TO_RECIPIENT"], "title": "Sent to the intended recipient(s)", "description": "Sent to the intended recipient(s)"}, {"enum": ["PENDING_PAYMENT"], "title": "Is waiting for payment or to be reconciled", "description": "Is waiting for payment or to be reconciled"}, {"enum": ["PARTIALLY_PAID"], "title": "Is partially paid for and still to be matched against payment(s)", "description": "Is partially paid for and still to be matched against payment(s)"}, {"enum": ["FULLY_PAID"], "title": "Is fully paid for and matched/reconciled against payment(s)", "description": "Is fully paid for and matched/reconciled against payment(s)"}, {"enum": ["REJECTED"], "title": "Rejected in the process of approval", "description": "Rejected in the process of approval"}, {"enum": ["CANCELLED"], "title": "Cancelled due to some reason", "description": "Cancelled due to some reason"}], "description": "Enumerates all the statuses an AR Invoice can be in at any given point."}, "revenueSource": {"type": ["string", "null"], "anyOf": [{"enum": ["B2B"], "title": "Business to business type", "description": "Business to business type"}, {"enum": ["CASTLEGATE"], "title": "Castlegate or fulfillment services", "description": "Castlegate or fulfillment services"}, {"enum": ["SPONSORED_PRODUCTS"], "title": "Sponsored products type", "description": "Sponsored products type"}, {"enum": ["MAAS_MEDIA"], "title": "Maas media type", "description": "Maas media type"}, {"enum": ["LIQUIDATION"], "title": "Liquidation type", "description": "Liquidation type"}, {"enum": ["GIFT_CARD"], "title": "Gift card type", "description": "Gift card type"}], "description": "Types of different revenue sources or streams."}, "dueBy": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "paidOn": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "currency": {"type": ["string", "null"], "anyOf": [{"enum": ["US_DOLLAR"], "title": "US Dollar", "description": "US Dollar"}, {"enum": ["BRITISH_POUND"], "title": "British Pound", "description": "British Pound"}, {"enum": ["EURO"], "title": "Euro", "description": "Euro"}, {"enum": ["CANADIAN_DOLLAR"], "title": "Canadian Dollar", "description": "Canadian Dollar"}, {"enum": ["AUSTRALIAN_DOLLAR"], "title": "Australian Dollar", "description": "Australian Dollar"}], "description": "Types of currency"}, "invoiceAmount": {"type": ["number", "null"], "title": "Float", "description": "The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point)."}, "taxTotalAmount": {"type": ["number", "null"], "title": "Float", "description": "The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point)."}, "originalInvoiceTotalAmount": {"type": ["number", "null"], "title": "Float", "description": "The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point)."}, "originalTaxTotalAmount": {"type": ["number", "null"], "title": "Float", "description": "The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point)."}, "paidAmount": {"type": ["number", "null"], "title": "Float", "description": "The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point)."}, "dueAmount": {"type": ["number", "null"], "title": "Float", "description": "The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point)."}, "documents": {"type": "array", "items": {"anyOf": [{"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "Int32", "description": "The `Int32` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1."}, "name": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "createdOn": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "type": {"type": ["string", "null"], "anyOf": [{"enum": ["pdf"], "title": "PDF form of an AR Invoice", "description": "PDF form of an AR Invoice"}, {"enum": ["csv"], "title": "CSV form of an AR Invoice", "description": "CSV form of an AR Invoice"}], "description": "Types of tangible readable AR Invoice document"}, "path": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "remoteStorageDownloadAdminUrl": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "remoteStoragePath": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}}, "description": "A document related to an AR Invoice"}, {"type": "null"}]}}, "communications": {"type": "array", "items": {"anyOf": [{"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "Int64", "description": "The `Int64` scalar type represents non-fractional signed whole numeric values. Int can represent values between PHP_INT_MIN AND PHP_INT_MAX."}, "type": {"type": ["string", "null"], "anyOf": [{"enum": ["UNSPECIFIED"], "title": "A communication for which no type was specified", "description": "A communication for which no type was specified"}, {"enum": ["INITIAL_COMMUNICATION"], "title": "An initial communication containing the invoice and payment information", "description": "An initial communication containing the invoice and payment information"}, {"enum": ["CANCELLATION_COMMUNICATION"], "title": "A cancellation communication containing the cancelled invoice information", "description": "A cancellation communication containing the cancelled invoice information"}, {"enum": ["NETTABLE_REMOVED"], "title": "A communication sent out when the netting status of an invoice is turned off", "description": "A communication sent out when the netting status of an invoice is turned off"}], "description": "Types of different revenue communications."}, "queuedOn": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "emailMessage": {"type": ["object", "string", "null"], "description": "An email communication"}}, "description": "A revenue invoice communication"}, {"type": "null"}]}}, "creator": {"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "Int64", "description": "The `Int64` scalar type represents non-fractional signed whole numeric values. Int can represent values between PHP_INT_MIN AND PHP_INT_MAX."}, "type": {"type": ["string", "null"], "anyOf": [{"enum": ["SUPPLIER"], "title": "Supplier type creator", "description": "Supplier type creator"}, {"enum": ["ADMIN_USER"], "title": "Admin user as a creator", "description": "Admin user as a creator"}, {"enum": ["EXTRANET_USER"], "title": "An extranet user as a creator", "description": "An extranet user as a creator"}, {"enum": ["INTERNAL"], "title": "An internal user as a creator", "description": "An internal user as a creator"}], "description": "Enumerates all the types of an AR Invoice creator."}}, "description": "A revenue invoice creator"}, "createdOn": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "effectiveOn": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "isReconciled": {"type": ["boolean", "null"], "title": "Boolean", "description": "The `Boolean` scalar type represents `true` or `false`."}, "reconciledBy": {"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "Int32", "description": "The `Int32` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1."}, "type": {"type": ["string", "null"], "anyOf": [{"enum": ["ADMIN_USER"], "title": "An admin user or employee logged in, having a valid Employee ID", "description": "An admin user or employee logged in, having a valid Employee ID"}, {"enum": ["AP_PAYMENT_PROCESSOR"], "title": "Automated accounts payable payment processor", "description": "Automated accounts payable payment processor"}], "description": "Types of different reconcilers that can potentially perform reconciliation of different AR components"}}, "description": "Represents a AR reconciler entity - who is responsible for reconciling the AR components"}, "nettable": {"type": ["boolean", "null"], "title": "Boolean", "description": "The `Boolean` scalar type represents `true` or `false`."}, "originallyNettable": {"type": ["boolean", "null"], "title": "Boolean", "description": "The `Boolean` scalar type represents `true` or `false`."}, "invoiceReceipientsEmailAddresses": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "payments": {"type": "array", "items": {"anyOf": [{"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "Int32", "description": "The `Int32` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1."}, "status": {"type": ["string", "null"], "anyOf": [{"enum": ["NEW"], "title": "Recently created or unprocessed", "description": "Recently created or unprocessed"}, {"enum": ["PARTIALLY_MATCHED"], "title": "Partially matched i.e. still available for reconciliation", "description": "Partially matched i.e. still available for reconciliation"}, {"enum": ["FULLY_MATCHED"], "title": "Fully matched i.e. reconciled completely", "description": "Fully matched i.e. reconciled completely"}, {"enum": ["VOID"], "title": "Voided", "description": "Voided"}], "description": "Enumerates all the statuses an AR Payment can be in at any given point."}, "revenueSource": {"type": ["string", "null"], "anyOf": [{"enum": ["B2B"], "title": "Business to business type", "description": "Business to business type"}, {"enum": ["CASTLEGATE"], "title": "Castlegate or fulfillment services", "description": "Castlegate or fulfillment services"}, {"enum": ["SPONSORED_PRODUCTS"], "title": "Sponsored products type", "description": "Sponsored products type"}, {"enum": ["MAAS_MEDIA"], "title": "Maas media type", "description": "Maas media type"}, {"enum": ["LIQUIDATION"], "title": "Liquidation type", "description": "Liquidation type"}, {"enum": ["GIFT_CARD"], "title": "Gift card type", "description": "Gift card type"}], "description": "Types of different revenue sources or streams."}, "amount": {"type": ["number", "null"], "title": "Float", "description": "The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point)."}, "currency": {"type": ["string", "null"], "anyOf": [{"enum": ["US_DOLLAR"], "title": "US Dollar", "description": "US Dollar"}, {"enum": ["BRITISH_POUND"], "title": "British Pound", "description": "British Pound"}, {"enum": ["EURO"], "title": "Euro", "description": "Euro"}, {"enum": ["CANADIAN_DOLLAR"], "title": "Canadian Dollar", "description": "Canadian Dollar"}, {"enum": ["AUSTRALIAN_DOLLAR"], "title": "Australian Dollar", "description": "Australian Dollar"}], "description": "Types of currency"}, "reference": {"type": ["object", "string", "null"], "description": "Represents a reference or an origination of an AR payment. An AR payment can refer to an outside payment or simply to itself"}, "payer": {"type": ["object", "string", "null"], "description": "Represents an entity that uses Wayfair's services and pays for them"}, "createdOn": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "description": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "matchedAmount": {"type": ["number", "null"], "title": "Float", "description": "The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point)."}, "isReconciled": {"type": ["boolean", "null"], "title": "Boolean", "description": "The `Boolean` scalar type represents `true` or `false`."}, "reconciledOn": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "reconciledBy": {"type": ["object", "string", "null"], "description": "Represents a AR reconciler entity - who is responsible for reconciling the AR components"}}, "description": "Accounts Receivable Payment entity which depicts a payment that we have realized as a \"Revenue\" and which we could have received from different revenue streams or sources."}, {"type": "null"}]}}, "isCreditMemo": {"type": ["boolean", "null"], "title": "Boolean", "description": "The `Boolean` scalar type represents `true` or `false`."}, "statusUpdateLogs": {"type": "array", "items": {"anyOf": [{"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "Int64", "description": "The `Int64` scalar type represents non-fractional signed whole numeric values. Int can represent values between PHP_INT_MIN AND PHP_INT_MAX."}, "fromStatus": {"type": ["string", "null"], "anyOf": [{"enum": ["NEW"], "title": "Recently created or unprocessed", "description": "Recently created or unprocessed"}, {"enum": ["PENDING_APPROVAL"], "title": "Sent for approval but not approved yet", "description": "Sent for approval but not approved yet"}, {"enum": ["APPROVED"], "title": "Approved by the requested approver", "description": "Approved by the requested approver"}, {"enum": ["SENT_TO_RECIPIENT"], "title": "Sent to the intended recipient(s)", "description": "Sent to the intended recipient(s)"}, {"enum": ["PENDING_PAYMENT"], "title": "Is waiting for payment or to be reconciled", "description": "Is waiting for payment or to be reconciled"}, {"enum": ["PARTIALLY_PAID"], "title": "Is partially paid for and still to be matched against payment(s)", "description": "Is partially paid for and still to be matched against payment(s)"}, {"enum": ["FULLY_PAID"], "title": "Is fully paid for and matched/reconciled against payment(s)", "description": "Is fully paid for and matched/reconciled against payment(s)"}, {"enum": ["REJECTED"], "title": "Rejected in the process of approval", "description": "Rejected in the process of approval"}, {"enum": ["CANCELLED"], "title": "Cancelled due to some reason", "description": "Cancelled due to some reason"}], "description": "Enumerates all the statuses an AR Invoice can be in at any given point."}, "toStatus": {"type": ["string", "null"], "anyOf": [{"enum": ["NEW"], "title": "Recently created or unprocessed", "description": "Recently created or unprocessed"}, {"enum": ["PENDING_APPROVAL"], "title": "Sent for approval but not approved yet", "description": "Sent for approval but not approved yet"}, {"enum": ["APPROVED"], "title": "Approved by the requested approver", "description": "Approved by the requested approver"}, {"enum": ["SENT_TO_RECIPIENT"], "title": "Sent to the intended recipient(s)", "description": "Sent to the intended recipient(s)"}, {"enum": ["PENDING_PAYMENT"], "title": "Is waiting for payment or to be reconciled", "description": "Is waiting for payment or to be reconciled"}, {"enum": ["PARTIALLY_PAID"], "title": "Is partially paid for and still to be matched against payment(s)", "description": "Is partially paid for and still to be matched against payment(s)"}, {"enum": ["FULLY_PAID"], "title": "Is fully paid for and matched/reconciled against payment(s)", "description": "Is fully paid for and matched/reconciled against payment(s)"}, {"enum": ["REJECTED"], "title": "Rejected in the process of approval", "description": "Rejected in the process of approval"}, {"enum": ["CANCELLED"], "title": "Cancelled due to some reason", "description": "Cancelled due to some reason"}], "description": "Enumerates all the statuses an AR Invoice can be in at any given point."}, "updatedOn": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "updatedBy": {"type": ["object", "string", "null"], "description": "Fetches data for an employee."}}, "description": "Log entry for AR invoice status update"}, {"type": "null"}]}}, "reference": {"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "Int64", "description": "The `Int64` scalar type represents non-fractional signed whole numeric values. Int can represent values between PHP_INT_MIN AND PHP_INT_MAX."}}, "description": "A Reference to External Systems"}}, "description": "Interface for an AR Invoice - this contains all the common properties an AR Invoice should have"}, {"type": "null"}]}}, "invoiceType": {"type": ["string", "null"], "anyOf": [{"enum": ["TRANSPORTATION"], "title": "Transportation Type", "description": "Transportation Type"}, {"enum": ["FULFILLMENT"], "title": "Fulfillment Type", "description": "Fulfillment Type"}], "description": "Types of invoices for Castlegate AR. 'Transportation', 'Fulfillment'."}, "statusUpdateLogs": {"type": "array", "items": {"anyOf": [{"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "Int64", "description": "The `Int64` scalar type represents non-fractional signed whole numeric values. Int can represent values between PHP_INT_MIN AND PHP_INT_MAX."}, "fromStatus": {"type": ["string", "null"], "anyOf": [{"enum": ["NEW"], "title": "Recently created or unprocessed", "description": "Recently created or unprocessed"}, {"enum": ["PENDING_APPROVAL"], "title": "Sent for approval but not approved yet", "description": "Sent for approval but not approved yet"}, {"enum": ["APPROVED"], "title": "Approved by the requested approver", "description": "Approved by the requested approver"}, {"enum": ["SENT_TO_RECIPIENT"], "title": "Sent to the intended recipient(s)", "description": "Sent to the intended recipient(s)"}, {"enum": ["PENDING_PAYMENT"], "title": "Is waiting for payment or to be reconciled", "description": "Is waiting for payment or to be reconciled"}, {"enum": ["PARTIALLY_PAID"], "title": "Is partially paid for and still to be matched against payment(s)", "description": "Is partially paid for and still to be matched against payment(s)"}, {"enum": ["FULLY_PAID"], "title": "Is fully paid for and matched/reconciled against payment(s)", "description": "Is fully paid for and matched/reconciled against payment(s)"}, {"enum": ["REJECTED"], "title": "Rejected in the process of approval", "description": "Rejected in the process of approval"}, {"enum": ["CANCELLED"], "title": "Cancelled due to some reason", "description": "Cancelled due to some reason"}], "description": "Enumerates all the statuses an AR Invoice can be in at any given point."}, "toStatus": {"type": ["string", "null"], "anyOf": [{"enum": ["NEW"], "title": "Recently created or unprocessed", "description": "Recently created or unprocessed"}, {"enum": ["PENDING_APPROVAL"], "title": "Sent for approval but not approved yet", "description": "Sent for approval but not approved yet"}, {"enum": ["APPROVED"], "title": "Approved by the requested approver", "description": "Approved by the requested approver"}, {"enum": ["SENT_TO_RECIPIENT"], "title": "Sent to the intended recipient(s)", "description": "Sent to the intended recipient(s)"}, {"enum": ["PENDING_PAYMENT"], "title": "Is waiting for payment or to be reconciled", "description": "Is waiting for payment or to be reconciled"}, {"enum": ["PARTIALLY_PAID"], "title": "Is partially paid for and still to be matched against payment(s)", "description": "Is partially paid for and still to be matched against payment(s)"}, {"enum": ["FULLY_PAID"], "title": "Is fully paid for and matched/reconciled against payment(s)", "description": "Is fully paid for and matched/reconciled against payment(s)"}, {"enum": ["REJECTED"], "title": "Rejected in the process of approval", "description": "Rejected in the process of approval"}, {"enum": ["CANCELLED"], "title": "Cancelled due to some reason", "description": "Cancelled due to some reason"}], "description": "Enumerates all the statuses an AR Invoice can be in at any given point."}, "updatedOn": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "updatedBy": {"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "ID", "description": "The `ID` scalar type represents a unique identifier, often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\"4\"`) or integer (such as `4`) input value will be accepted as an ID."}, "firstName": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "middleName": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "lastName": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "fullName": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "userName": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "nickname": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "displayLastName": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "email": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "samAccountName": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "isActive": {"type": ["boolean", "null"], "title": "Boolean", "description": "The `Boolean` scalar type represents `true` or `false`."}, "birthday": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "seniorityDate": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "startDate": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "forecastEndDate": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "terminationDate": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "isUnlimitedContract": {"type": ["boolean", "null"], "title": "Boolean", "description": "The `Boolean` scalar type represents `true` or `false`."}, "isEngineer": {"type": ["boolean", "null"], "title": "Boolean", "description": "The `Boolean` scalar type represents `true` or `false`."}, "worksOnSoftware": {"type": ["boolean", "null"], "title": "Boolean", "description": "The `Boolean` scalar type represents `true` or `false`."}, "title": {"type": ["object", "string", "null"], "description": "Wayfair job titles"}, "profile": {"type": ["object", "string", "null"], "description": "Profile information of an employee (ex: Massachusetts Employee, German Employee)"}, "type": {"type": ["object", "string", "null"], "description": "Wayfair employee categories (ex: intern, contract, full time)"}, "location": {"type": ["object", "string", "null"], "description": "Wayfair employee location (ex Copley Boston)"}, "phoneExtension": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "manager": {"type": ["object", "string", "null"], "description": "Fetches data for an employee."}, "workgroup": {"type": ["object", "string", "null"], "description": "Wayfair workgroup information"}, "processedByEmployee": {"type": ["object", "string", "null"], "description": "Fetches data for an employee."}, "directReports": {"type": "array", "items": {"anyOf": [{"type": ["object", "string", "null"], "description": "Fetches data for an employee."}, {"type": "null"}]}}}, "description": "Fetches data for an employee."}}, "description": "Log entry for AR invoice status update"}, {"type": "null"}]}}, "reference": {"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "Int64", "description": "The `Int64` scalar type represents non-fractional signed whole numeric values. Int can represent values between PHP_INT_MIN AND PHP_INT_MAX."}}, "description": "A Reference to External Systems"}}, "description": "Castlegate Type of AR invoice which has all the properties of an AR invoice along with Castlegate specific details"}, "CastlegateFulfillmentCustomer": {"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "ID", "description": "The `ID` scalar type represents a unique identifier, often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\"4\"`) or integer (such as `4`) input value will be accepted as an ID."}, "supplier": {"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "ID", "description": "The `ID` scalar type represents a unique identifier, often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\"4\"`) or integer (such as `4`) input value will be accepted as an ID."}, "name": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "shortName": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "status": {"type": ["string", "null"], "anyOf": [{"enum": ["ACTIVE"], "title": "Active Status", "description": "Active Status"}, {"enum": ["INACTIVE"], "title": "Inactive Status", "description": "Inactive Status"}, {"enum": ["BEING_ADDED"], "title": "Being Added Status", "description": "Being Added Status"}, {"enum": ["ON_HOLD"], "title": "On Hold Status", "description": "On Hold Status"}], "description": "Represents the status of the supplier"}, "websiteURL": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "currency": {"type": ["string", "null"], "anyOf": [{"enum": ["USD"], "title": "US dollars", "description": "US dollars"}, {"enum": ["GBP"], "title": "British pounds", "description": "British pounds"}, {"enum": ["EUR"], "title": "Euros", "description": "Euros"}, {"enum": ["CAD"], "title": "Canadian dollars", "description": "Canadian dollars"}, {"enum": ["AUD"], "title": "Australian dollars", "description": "Australian dollars"}], "description": "Represents the currency id of the supplier"}, "scopes": {"type": "array", "items": {"anyOf": [{"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "ID", "description": "The `ID` scalar type represents a unique identifier, often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\"4\"`) or integer (such as `4`) input value will be accepted as an ID."}, "name": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "permissionName": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "description": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}}, "description": "An API scope defining specific permissions for API access"}, {"type": "null"}]}}, "warehouses": {"type": "array", "items": {"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "ID", "description": "The `ID` scalar type represents a unique identifier, often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\"4\"`) or integer (such as `4`) input value will be accepted as an ID."}, "name": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "address": {"type": ["object", "string", "null"], "description": "An address"}, "supplier": {"type": ["object", "string", "null"], "description": "A supplier entity."}}, "description": "Information for a supplier warehouse"}}}, "description": "A supplier entity."}, "name": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "service": {"type": ["string", "null"], "anyOf": [{"enum": ["FULFILLMENT"], "title": "Fulfillment Customer in US", "description": "Fulfillment Customer in US"}, {"enum": ["CANADA_FULFILLMENT"], "title": "Fulfillment Customer in Canada ", "description": "Fulfillment Customer in Canada "}, {"enum": ["EU_FULFILLMENT"], "title": "Fulfillment Customer in EU", "description": "Fulfillment Customer in EU"}, {"enum": ["DRAY"], "title": "Dray Service", "description": "Dray Service"}, {"enum": ["OCEAN"], "title": "Ocean Service", "description": "Ocean Service"}, {"enum": ["ASIA_CONSOLIDATION"], "title": "Asia Consolidation Service", "description": "Asia Consolidation Service"}], "description": "Castlegate Service Type"}, "oceanService": {"type": ["object", "string", "null"], "properties": {"fulfillmentCustomer": {"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "ID", "description": "The `ID` scalar type represents a unique identifier, often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\"4\"`) or integer (such as `4`) input value will be accepted as an ID."}, "supplier": {"type": ["object", "string", "null"], "description": "A supplier entity."}, "name": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "service": {"type": ["string", "null"], "anyOf": [{"enum": ["FULFILLMENT"], "title": "Fulfillment Customer in US", "description": "Fulfillment Customer in US"}, {"enum": ["CANADA_FULFILLMENT"], "title": "Fulfillment Customer in Canada ", "description": "Fulfillment Customer in Canada "}, {"enum": ["EU_FULFILLMENT"], "title": "Fulfillment Customer in EU", "description": "Fulfillment Customer in EU"}, {"enum": ["DRAY"], "title": "Dray Service", "description": "Dray Service"}, {"enum": ["OCEAN"], "title": "Ocean Service", "description": "Ocean Service"}, {"enum": ["ASIA_CONSOLIDATION"], "title": "Asia Consolidation Service", "description": "Asia Consolidation Service"}], "description": "Castlegate Service Type"}, "oceanService": {"type": ["object", "string", "null"], "description": "The ocean service profile of a fulfillment customer"}, "aggregateHistoricalForecast": {"type": ["object", "string", "null"], "description": "The future and historical replenishment forecasts for a Castlegate product"}, "aggregateFutureForecast": {"type": ["object", "string", "null"], "description": "The future and historical replenishment forecasts for a Castlegate product"}, "aggregateHistoricalSales": {"type": "array", "items": {"anyOf": [{"type": ["object", "string", "null"], "description": "A quantity corresponding to a specific date. Example: a product forecast for a specific month"}, {"type": "null"}]}}, "isPartDataEnabled": {"type": ["boolean", "null"], "title": "Boolean", "description": "The `Boolean` scalar type represents `true` or `false`."}}, "description": "A Castlegate Fulfillment Customer"}, "activationDate": {"type": ["object", "string", "null"], "title": "Date_Time", "description": "A type for date time values that used Wayfair's WF\\Shared\\Date_Time_Value class"}}, "description": "The ocean service profile of a fulfillment customer"}, "aggregateHistoricalForecast": {"type": ["object", "string", "null"], "properties": {"values": {"type": "array", "items": {"anyOf": [{"type": ["object", "string", "null"], "properties": {"date": {"type": ["object", "string", "null"], "title": "Date_Time", "description": "A type for date time values that used Wayfair's WF\\Shared\\Date_Time_Value class"}, "value": {"type": ["number", "null"], "title": "Float", "description": "The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point)."}}, "description": "A quantity corresponding to a specific date. Example: a product forecast for a specific month"}, {"type": "null"}]}}, "timeframe": {"type": ["string", "null"], "anyOf": [{"enum": ["HISTORICAL"], "title": "Historical Time Frame", "description": "Historical Time Frame"}, {"enum": ["FUTURE"], "title": "Future Time Frame", "description": "Future Time Frame"}], "description": "The time frame of the forecast"}}, "description": "The future and historical replenishment forecasts for a Castlegate product"}, "aggregateFutureForecast": {"type": ["object", "string", "null"], "properties": {"values": {"type": "array", "items": {"anyOf": [{"type": ["object", "string", "null"], "properties": {"date": {"type": ["object", "string", "null"], "title": "Date_Time", "description": "A type for date time values that used Wayfair's WF\\Shared\\Date_Time_Value class"}, "value": {"type": ["number", "null"], "title": "Float", "description": "The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point)."}}, "description": "A quantity corresponding to a specific date. Example: a product forecast for a specific month"}, {"type": "null"}]}}, "timeframe": {"type": ["string", "null"], "anyOf": [{"enum": ["HISTORICAL"], "title": "Historical Time Frame", "description": "Historical Time Frame"}, {"enum": ["FUTURE"], "title": "Future Time Frame", "description": "Future Time Frame"}], "description": "The time frame of the forecast"}}, "description": "The future and historical replenishment forecasts for a Castlegate product"}, "aggregateHistoricalSales": {"type": "array", "items": {"anyOf": [{"type": ["object", "string", "null"], "properties": {"date": {"type": ["object", "string", "null"], "title": "Date_Time", "description": "A type for date time values that used Wayfair's WF\\Shared\\Date_Time_Value class"}, "value": {"type": ["number", "null"], "title": "Float", "description": "The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point)."}}, "description": "A quantity corresponding to a specific date. Example: a product forecast for a specific month"}, {"type": "null"}]}}, "isPartDataEnabled": {"type": ["boolean", "null"], "title": "Boolean", "description": "The `Boolean` scalar type represents `true` or `false`."}}, "description": "A Castlegate Fulfillment Customer"}, "CastleGateService": {"type": ["string", "null"], "anyOf": [{"enum": ["FULFILLMENT"], "title": "Fulfillment Customer in US", "description": "Fulfillment Customer in US"}, {"enum": ["CANADA_FULFILLMENT"], "title": "Fulfillment Customer in Canada ", "description": "Fulfillment Customer in Canada "}, {"enum": ["EU_FULFILLMENT"], "title": "Fulfillment Customer in EU", "description": "Fulfillment Customer in EU"}, {"enum": ["DRAY"], "title": "Dray Service", "description": "Dray Service"}, {"enum": ["OCEAN"], "title": "Ocean Service", "description": "Ocean Service"}, {"enum": ["ASIA_CONSOLIDATION"], "title": "Asia Consolidation Service", "description": "Asia Consolidation Service"}], "description": "Castlegate Service Type"}, "OceanServiceProfile": {"type": ["object", "string", "null"], "properties": {"fulfillmentCustomer": {"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "ID", "description": "The `ID` scalar type represents a unique identifier, often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\"4\"`) or integer (such as `4`) input value will be accepted as an ID."}, "supplier": {"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "ID", "description": "The `ID` scalar type represents a unique identifier, often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\"4\"`) or integer (such as `4`) input value will be accepted as an ID."}, "name": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "shortName": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "status": {"type": ["string", "null"], "anyOf": [{"enum": ["ACTIVE"], "title": "Active Status", "description": "Active Status"}, {"enum": ["INACTIVE"], "title": "Inactive Status", "description": "Inactive Status"}, {"enum": ["BEING_ADDED"], "title": "Being Added Status", "description": "Being Added Status"}, {"enum": ["ON_HOLD"], "title": "On Hold Status", "description": "On Hold Status"}], "description": "Represents the status of the supplier"}, "websiteURL": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "currency": {"type": ["string", "null"], "anyOf": [{"enum": ["USD"], "title": "US dollars", "description": "US dollars"}, {"enum": ["GBP"], "title": "British pounds", "description": "British pounds"}, {"enum": ["EUR"], "title": "Euros", "description": "Euros"}, {"enum": ["CAD"], "title": "Canadian dollars", "description": "Canadian dollars"}, {"enum": ["AUD"], "title": "Australian dollars", "description": "Australian dollars"}], "description": "Represents the currency id of the supplier"}, "scopes": {"type": "array", "items": {"anyOf": [{"type": ["object", "string", "null"], "description": "An API scope defining specific permissions for API access"}, {"type": "null"}]}}, "warehouses": {"type": "array", "items": {"type": ["object", "string", "null"], "description": "Information for a supplier warehouse"}}}, "description": "A supplier entity."}, "name": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "service": {"type": ["string", "null"], "anyOf": [{"enum": ["FULFILLMENT"], "title": "Fulfillment Customer in US", "description": "Fulfillment Customer in US"}, {"enum": ["CANADA_FULFILLMENT"], "title": "Fulfillment Customer in Canada ", "description": "Fulfillment Customer in Canada "}, {"enum": ["EU_FULFILLMENT"], "title": "Fulfillment Customer in EU", "description": "Fulfillment Customer in EU"}, {"enum": ["DRAY"], "title": "Dray Service", "description": "Dray Service"}, {"enum": ["OCEAN"], "title": "Ocean Service", "description": "Ocean Service"}, {"enum": ["ASIA_CONSOLIDATION"], "title": "Asia Consolidation Service", "description": "Asia Consolidation Service"}], "description": "Castlegate Service Type"}, "oceanService": {"type": ["object", "string", "null"], "properties": {"fulfillmentCustomer": {"type": ["object", "string", "null"], "description": "A Castlegate Fulfillment Customer"}, "activationDate": {"type": ["object", "string", "null"], "title": "Date_Time", "description": "A type for date time values that used Wayfair's WF\\Shared\\Date_Time_Value class"}}, "description": "The ocean service profile of a fulfillment customer"}, "aggregateHistoricalForecast": {"type": ["object", "string", "null"], "properties": {"values": {"type": "array", "items": {"anyOf": [{"type": ["object", "string", "null"], "description": "A quantity corresponding to a specific date. Example: a product forecast for a specific month"}, {"type": "null"}]}}, "timeframe": {"type": ["string", "null"], "anyOf": [{"enum": ["HISTORICAL"], "title": "Historical Time Frame", "description": "Historical Time Frame"}, {"enum": ["FUTURE"], "title": "Future Time Frame", "description": "Future Time Frame"}], "description": "The time frame of the forecast"}}, "description": "The future and historical replenishment forecasts for a Castlegate product"}, "aggregateFutureForecast": {"type": ["object", "string", "null"], "properties": {"values": {"type": "array", "items": {"anyOf": [{"type": ["object", "string", "null"], "description": "A quantity corresponding to a specific date. Example: a product forecast for a specific month"}, {"type": "null"}]}}, "timeframe": {"type": ["string", "null"], "anyOf": [{"enum": ["HISTORICAL"], "title": "Historical Time Frame", "description": "Historical Time Frame"}, {"enum": ["FUTURE"], "title": "Future Time Frame", "description": "Future Time Frame"}], "description": "The time frame of the forecast"}}, "description": "The future and historical replenishment forecasts for a Castlegate product"}, "aggregateHistoricalSales": {"type": "array", "items": {"anyOf": [{"type": ["object", "string", "null"], "properties": {"date": {"type": ["object", "string", "null"], "title": "Date_Time", "description": "A type for date time values that used Wayfair's WF\\Shared\\Date_Time_Value class"}, "value": {"type": ["number", "null"], "title": "Float", "description": "The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point)."}}, "description": "A quantity corresponding to a specific date. Example: a product forecast for a specific month"}, {"type": "null"}]}}, "isPartDataEnabled": {"type": ["boolean", "null"], "title": "Boolean", "description": "The `Boolean` scalar type represents `true` or `false`."}}, "description": "A Castlegate Fulfillment Customer"}, "activationDate": {"type": ["object", "string", "null"], "title": "Date_Time", "description": "A type for date time values that used Wayfair's WF\\Shared\\Date_Time_Value class"}}, "description": "The ocean service profile of a fulfillment customer"}, "Date_Time": {"type": ["object", "string", "null"], "title": "Date_Time", "description": "A type for date time values that used Wayfair's WF\\Shared\\Date_Time_Value class"}, "ReplenishmentForecast": {"type": ["object", "string", "null"], "properties": {"values": {"type": "array", "items": {"anyOf": [{"type": ["object", "string", "null"], "properties": {"date": {"type": ["object", "string", "null"], "title": "Date_Time", "description": "A type for date time values that used Wayfair's WF\\Shared\\Date_Time_Value class"}, "value": {"type": ["number", "null"], "title": "Float", "description": "The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point)."}}, "description": "A quantity corresponding to a specific date. Example: a product forecast for a specific month"}, {"type": "null"}]}}, "timeframe": {"type": ["string", "null"], "anyOf": [{"enum": ["HISTORICAL"], "title": "Historical Time Frame", "description": "Historical Time Frame"}, {"enum": ["FUTURE"], "title": "Future Time Frame", "description": "Future Time Frame"}], "description": "The time frame of the forecast"}}, "description": "The future and historical replenishment forecasts for a Castlegate product"}, "TimelineElement": {"type": ["object", "string", "null"], "properties": {"date": {"type": ["object", "string", "null"], "title": "Date_Time", "description": "A type for date time values that used Wayfair's WF\\Shared\\Date_Time_Value class"}, "value": {"type": ["number", "null"], "title": "Float", "description": "The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point)."}}, "description": "A quantity corresponding to a specific date. Example: a product forecast for a specific month"}, "ForecastTimeFrameType": {"type": ["string", "null"], "anyOf": [{"enum": ["HISTORICAL"], "title": "Historical Time Frame", "description": "Historical Time Frame"}, {"enum": ["FUTURE"], "title": "Future Time Frame", "description": "Future Time Frame"}], "description": "The time frame of the forecast"}, "CastleGateArInvoiceType": {"type": ["string", "null"], "anyOf": [{"enum": ["TRANSPORTATION"], "title": "Transportation Type", "description": "Transportation Type"}, {"enum": ["FULFILLMENT"], "title": "Fulfillment Type", "description": "Fulfillment Type"}], "description": "Types of invoices for Castlegate AR. 'Transportation', 'Fulfillment'."}, "CastlegateArInvoiceDetail": {"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "Int64", "description": "The `Int64` scalar type represents non-fractional signed whole numeric values. Int can represent values between PHP_INT_MIN AND PHP_INT_MAX."}, "quantity": {"type": ["number", "null"], "title": "Float", "description": "The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point)."}, "unitAmount": {"type": ["number", "null"], "title": "Float", "description": "The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point)."}, "itemAmount": {"type": ["number", "null"], "title": "Float", "description": "The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point)."}, "description": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "charge": {"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "Int64", "description": "The `Int64` scalar type represents non-fractional signed whole numeric values. Int can represent values between PHP_INT_MIN AND PHP_INT_MAX."}}, "description": "Charges we charge to the customers for the fulfillment services"}, "taxes": {"type": "array", "items": {"anyOf": [{"type": ["object", "string", "null"], "properties": {"type": {"type": ["string", "null"], "anyOf": [{"enum": ["SalesTax"], "title": "Sales Tax", "description": "Sales Tax"}, {"enum": ["SellersUseTax"], "title": "Sellers Use Tax", "description": "Sellers Use Tax"}, {"enum": ["EcoFee"], "title": "Eco Fee", "description": "Eco Fee"}, {"enum": ["SHP"], "title": "Shipment Tax", "description": "Shipment Tax"}, {"enum": ["GST"], "title": "GST Tax", "description": "GST Tax"}, {"enum": ["PST"], "title": "PST Tax", "description": "PST Tax"}, {"enum": ["QST"], "title": "QST Tax", "description": "QST Tax"}, {"enum": ["HST"], "title": "HST Tax", "description": "HST Tax"}, {"enum": ["VAT"], "title": "VAT Tax", "description": "VAT Tax"}, {"enum": ["NA"], "title": "Not Available", "description": "Not Available"}], "description": "An enumeration of Tax Types"}, "value": {"type": ["number", "null"], "title": "Float", "description": "The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point)."}}, "description": "The calculated tax amounts per type"}, {"type": "null"}]}}}, "description": "Invoice line item detail of Castlegate AR Invoice type"}, "FulfillmentCustomerCharge": {"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "Int64", "description": "The `Int64` scalar type represents non-fractional signed whole numeric values. Int can represent values between PHP_INT_MIN AND PHP_INT_MAX."}}, "description": "Charges we charge to the customers for the fulfillment services"}, "SponsoredProductsArInvoice": {"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "Int32", "description": "The `Int32` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1."}, "description": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "status": {"type": ["string", "null"], "anyOf": [{"enum": ["NEW"], "title": "Recently created or unprocessed", "description": "Recently created or unprocessed"}, {"enum": ["PENDING_APPROVAL"], "title": "Sent for approval but not approved yet", "description": "Sent for approval but not approved yet"}, {"enum": ["APPROVED"], "title": "Approved by the requested approver", "description": "Approved by the requested approver"}, {"enum": ["SENT_TO_RECIPIENT"], "title": "Sent to the intended recipient(s)", "description": "Sent to the intended recipient(s)"}, {"enum": ["PENDING_PAYMENT"], "title": "Is waiting for payment or to be reconciled", "description": "Is waiting for payment or to be reconciled"}, {"enum": ["PARTIALLY_PAID"], "title": "Is partially paid for and still to be matched against payment(s)", "description": "Is partially paid for and still to be matched against payment(s)"}, {"enum": ["FULLY_PAID"], "title": "Is fully paid for and matched/reconciled against payment(s)", "description": "Is fully paid for and matched/reconciled against payment(s)"}, {"enum": ["REJECTED"], "title": "Rejected in the process of approval", "description": "Rejected in the process of approval"}, {"enum": ["CANCELLED"], "title": "Cancelled due to some reason", "description": "Cancelled due to some reason"}], "description": "Enumerates all the statuses an AR Invoice can be in at any given point."}, "revenueSource": {"type": ["string", "null"], "anyOf": [{"enum": ["B2B"], "title": "Business to business type", "description": "Business to business type"}, {"enum": ["CASTLEGATE"], "title": "Castlegate or fulfillment services", "description": "Castlegate or fulfillment services"}, {"enum": ["SPONSORED_PRODUCTS"], "title": "Sponsored products type", "description": "Sponsored products type"}, {"enum": ["MAAS_MEDIA"], "title": "Maas media type", "description": "Maas media type"}, {"enum": ["LIQUIDATION"], "title": "Liquidation type", "description": "Liquidation type"}, {"enum": ["GIFT_CARD"], "title": "Gift card type", "description": "Gift card type"}], "description": "Types of different revenue sources or streams."}, "dueBy": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "paidOn": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "currency": {"type": ["string", "null"], "anyOf": [{"enum": ["US_DOLLAR"], "title": "US Dollar", "description": "US Dollar"}, {"enum": ["BRITISH_POUND"], "title": "British Pound", "description": "British Pound"}, {"enum": ["EURO"], "title": "Euro", "description": "Euro"}, {"enum": ["CANADIAN_DOLLAR"], "title": "Canadian Dollar", "description": "Canadian Dollar"}, {"enum": ["AUSTRALIAN_DOLLAR"], "title": "Australian Dollar", "description": "Australian Dollar"}], "description": "Types of currency"}, "invoiceAmount": {"type": ["number", "null"], "title": "Float", "description": "The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point)."}, "taxTotalAmount": {"type": ["number", "null"], "title": "Float", "description": "The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point)."}, "originalInvoiceTotalAmount": {"type": ["number", "null"], "title": "Float", "description": "The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point)."}, "originalTaxTotalAmount": {"type": ["number", "null"], "title": "Float", "description": "The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point)."}, "paidAmount": {"type": ["number", "null"], "title": "Float", "description": "The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point)."}, "dueAmount": {"type": ["number", "null"], "title": "Float", "description": "The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point)."}, "supplier": {"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "ID", "description": "The `ID` scalar type represents a unique identifier, often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\"4\"`) or integer (such as `4`) input value will be accepted as an ID."}, "name": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "shortName": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "status": {"type": ["string", "null"], "anyOf": [{"enum": ["ACTIVE"], "title": "Active Status", "description": "Active Status"}, {"enum": ["INACTIVE"], "title": "Inactive Status", "description": "Inactive Status"}, {"enum": ["BEING_ADDED"], "title": "Being Added Status", "description": "Being Added Status"}, {"enum": ["ON_HOLD"], "title": "On Hold Status", "description": "On Hold Status"}], "description": "Represents the status of the supplier"}, "websiteURL": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "currency": {"type": ["string", "null"], "anyOf": [{"enum": ["USD"], "title": "US dollars", "description": "US dollars"}, {"enum": ["GBP"], "title": "British pounds", "description": "British pounds"}, {"enum": ["EUR"], "title": "Euros", "description": "Euros"}, {"enum": ["CAD"], "title": "Canadian dollars", "description": "Canadian dollars"}, {"enum": ["AUD"], "title": "Australian dollars", "description": "Australian dollars"}], "description": "Represents the currency id of the supplier"}, "scopes": {"type": "array", "items": {"anyOf": [{"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "ID", "description": "The `ID` scalar type represents a unique identifier, often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\"4\"`) or integer (such as `4`) input value will be accepted as an ID."}, "name": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "permissionName": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "description": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}}, "description": "An API scope defining specific permissions for API access"}, {"type": "null"}]}}, "warehouses": {"type": "array", "items": {"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "ID", "description": "The `ID` scalar type represents a unique identifier, often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\"4\"`) or integer (such as `4`) input value will be accepted as an ID."}, "name": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "address": {"type": ["object", "string", "null"], "description": "An address"}, "supplier": {"type": ["object", "string", "null"], "description": "A supplier entity."}}, "description": "Information for a supplier warehouse"}}}, "description": "A supplier entity."}, "details": {"type": "array", "items": {"anyOf": [{"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "Int64", "description": "The `Int64` scalar type represents non-fractional signed whole numeric values. Int can represent values between PHP_INT_MIN AND PHP_INT_MAX."}, "quantity": {"type": ["number", "null"], "title": "Float", "description": "The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point)."}, "unitAmount": {"type": ["number", "null"], "title": "Float", "description": "The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point)."}, "itemAmount": {"type": ["number", "null"], "title": "Float", "description": "The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point)."}, "description": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "taxes": {"type": "array", "items": {"anyOf": [{"type": ["object", "string", "null"], "properties": {"type": {"type": ["string", "null"], "anyOf": [{"enum": ["SalesTax"], "title": "Sales Tax", "description": "Sales Tax"}, {"enum": ["SellersUseTax"], "title": "Sellers Use Tax", "description": "Sellers Use Tax"}, {"enum": ["EcoFee"], "title": "Eco Fee", "description": "Eco Fee"}, {"enum": ["SHP"], "title": "Shipment Tax", "description": "Shipment Tax"}, {"enum": ["GST"], "title": "GST Tax", "description": "GST Tax"}, {"enum": ["PST"], "title": "PST Tax", "description": "PST Tax"}, {"enum": ["QST"], "title": "QST Tax", "description": "QST Tax"}, {"enum": ["HST"], "title": "HST Tax", "description": "HST Tax"}, {"enum": ["VAT"], "title": "VAT Tax", "description": "VAT Tax"}, {"enum": ["NA"], "title": "Not Available", "description": "Not Available"}], "description": "An enumeration of Tax Types"}, "value": {"type": ["number", "null"], "title": "Float", "description": "The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point)."}}, "description": "The calculated tax amounts per type"}, {"type": "null"}]}}}, "description": "Detail of an AR Invoice - this contains all the common properties an invoice detail/line item should have"}, {"type": "null"}]}}, "documents": {"type": "array", "items": {"anyOf": [{"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "Int32", "description": "The `Int32` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1."}, "name": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "createdOn": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "type": {"type": ["string", "null"], "anyOf": [{"enum": ["pdf"], "title": "PDF form of an AR Invoice", "description": "PDF form of an AR Invoice"}, {"enum": ["csv"], "title": "CSV form of an AR Invoice", "description": "CSV form of an AR Invoice"}], "description": "Types of tangible readable AR Invoice document"}, "path": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "remoteStorageDownloadAdminUrl": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "remoteStoragePath": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}}, "description": "A document related to an AR Invoice"}, {"type": "null"}]}}, "communications": {"type": "array", "items": {"anyOf": [{"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "Int64", "description": "The `Int64` scalar type represents non-fractional signed whole numeric values. Int can represent values between PHP_INT_MIN AND PHP_INT_MAX."}, "type": {"type": ["string", "null"], "anyOf": [{"enum": ["UNSPECIFIED"], "title": "A communication for which no type was specified", "description": "A communication for which no type was specified"}, {"enum": ["INITIAL_COMMUNICATION"], "title": "An initial communication containing the invoice and payment information", "description": "An initial communication containing the invoice and payment information"}, {"enum": ["CANCELLATION_COMMUNICATION"], "title": "A cancellation communication containing the cancelled invoice information", "description": "A cancellation communication containing the cancelled invoice information"}, {"enum": ["NETTABLE_REMOVED"], "title": "A communication sent out when the netting status of an invoice is turned off", "description": "A communication sent out when the netting status of an invoice is turned off"}], "description": "Types of different revenue communications."}, "queuedOn": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "emailMessage": {"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "Int64", "description": "The `Int64` scalar type represents non-fractional signed whole numeric values. Int can represent values between PHP_INT_MIN AND PHP_INT_MAX."}}, "description": "An email communication"}}, "description": "A revenue invoice communication"}, {"type": "null"}]}}, "creator": {"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "Int64", "description": "The `Int64` scalar type represents non-fractional signed whole numeric values. Int can represent values between PHP_INT_MIN AND PHP_INT_MAX."}, "type": {"type": ["string", "null"], "anyOf": [{"enum": ["SUPPLIER"], "title": "Supplier type creator", "description": "Supplier type creator"}, {"enum": ["ADMIN_USER"], "title": "Admin user as a creator", "description": "Admin user as a creator"}, {"enum": ["EXTRANET_USER"], "title": "An extranet user as a creator", "description": "An extranet user as a creator"}, {"enum": ["INTERNAL"], "title": "An internal user as a creator", "description": "An internal user as a creator"}], "description": "Enumerates all the types of an AR Invoice creator."}}, "description": "A revenue invoice creator"}, "createdOn": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "effectiveOn": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "isReconciled": {"type": ["boolean", "null"], "title": "Boolean", "description": "The `Boolean` scalar type represents `true` or `false`."}, "reconciledBy": {"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "Int32", "description": "The `Int32` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1."}, "type": {"type": ["string", "null"], "anyOf": [{"enum": ["ADMIN_USER"], "title": "An admin user or employee logged in, having a valid Employee ID", "description": "An admin user or employee logged in, having a valid Employee ID"}, {"enum": ["AP_PAYMENT_PROCESSOR"], "title": "Automated accounts payable payment processor", "description": "Automated accounts payable payment processor"}], "description": "Types of different reconcilers that can potentially perform reconciliation of different AR components"}}, "description": "Represents a AR reconciler entity - who is responsible for reconciling the AR components"}, "nettable": {"type": ["boolean", "null"], "title": "Boolean", "description": "The `Boolean` scalar type represents `true` or `false`."}, "originallyNettable": {"type": ["boolean", "null"], "title": "Boolean", "description": "The `Boolean` scalar type represents `true` or `false`."}, "invoiceReceipientsEmailAddresses": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "payments": {"type": "array", "items": {"anyOf": [{"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "Int32", "description": "The `Int32` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1."}, "status": {"type": ["string", "null"], "anyOf": [{"enum": ["NEW"], "title": "Recently created or unprocessed", "description": "Recently created or unprocessed"}, {"enum": ["PARTIALLY_MATCHED"], "title": "Partially matched i.e. still available for reconciliation", "description": "Partially matched i.e. still available for reconciliation"}, {"enum": ["FULLY_MATCHED"], "title": "Fully matched i.e. reconciled completely", "description": "Fully matched i.e. reconciled completely"}, {"enum": ["VOID"], "title": "Voided", "description": "Voided"}], "description": "Enumerates all the statuses an AR Payment can be in at any given point."}, "revenueSource": {"type": ["string", "null"], "anyOf": [{"enum": ["B2B"], "title": "Business to business type", "description": "Business to business type"}, {"enum": ["CASTLEGATE"], "title": "Castlegate or fulfillment services", "description": "Castlegate or fulfillment services"}, {"enum": ["SPONSORED_PRODUCTS"], "title": "Sponsored products type", "description": "Sponsored products type"}, {"enum": ["MAAS_MEDIA"], "title": "Maas media type", "description": "Maas media type"}, {"enum": ["LIQUIDATION"], "title": "Liquidation type", "description": "Liquidation type"}, {"enum": ["GIFT_CARD"], "title": "Gift card type", "description": "Gift card type"}], "description": "Types of different revenue sources or streams."}, "amount": {"type": ["number", "null"], "title": "Float", "description": "The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point)."}, "currency": {"type": ["string", "null"], "anyOf": [{"enum": ["US_DOLLAR"], "title": "US Dollar", "description": "US Dollar"}, {"enum": ["BRITISH_POUND"], "title": "British Pound", "description": "British Pound"}, {"enum": ["EURO"], "title": "Euro", "description": "Euro"}, {"enum": ["CANADIAN_DOLLAR"], "title": "Canadian Dollar", "description": "Canadian Dollar"}, {"enum": ["AUSTRALIAN_DOLLAR"], "title": "Australian Dollar", "description": "Australian Dollar"}], "description": "Types of currency"}, "reference": {"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "Int64", "description": "The `Int64` scalar type represents non-fractional signed whole numeric values. Int can represent values between PHP_INT_MIN AND PHP_INT_MAX."}, "type": {"type": ["string", "null"], "anyOf": [{"enum": ["SELF"], "title": "Self if the payment was created directly by itself and there is no external reference", "description": "Self if the payment was created directly by itself and there is no external reference"}, {"enum": ["CLASSIFICATION_TOOL"], "title": "An admin classification tool", "description": "An admin classification tool"}, {"enum": ["AP_VOUCHER"], "title": "An accounts payable voucher or payment that was cut for a vendor to pay our AP balances", "description": "An accounts payable voucher or payment that was cut for a vendor to pay our AP balances"}, {"enum": ["CREDIT_MEMO"], "title": "A credit to the vendor", "description": "A credit to the vendor"}], "description": "Enumerates all the references types an AR payment can have."}}, "description": "Represents a reference or an origination of an AR payment. An AR payment can refer to an outside payment or simply to itself"}, "payer": {"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "Int64", "description": "The `Int64` scalar type represents non-fractional signed whole numeric values. Int can represent values between PHP_INT_MIN AND PHP_INT_MAX."}, "type": {"type": ["string", "null"], "anyOf": [{"enum": ["SUPPLIER"], "title": "Supplier as a payer of an AR Payment", "description": "Supplier as a payer of an AR Payment"}, {"enum": ["AP_VOUCHER"], "title": "AP Voucher as a payer of an AR Payment", "description": "AP Voucher as a payer of an AR Payment"}, {"enum": ["CUSTOMER"], "title": "Customer as a payer of an AR Payment", "description": "Customer as a payer of an AR Payment"}, {"enum": ["FULFILLMENT_CUSTOMER"], "title": "Fulfillment customer as a payer of an AR Payment", "description": "Fulfillment customer as a payer of an AR Payment"}], "description": "Enumerates all types of payers that can make an AR payment."}}, "description": "Represents an entity that uses Wayfair's services and pays for them"}, "createdOn": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "description": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "matchedAmount": {"type": ["number", "null"], "title": "Float", "description": "The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point)."}, "isReconciled": {"type": ["boolean", "null"], "title": "Boolean", "description": "The `Boolean` scalar type represents `true` or `false`."}, "reconciledOn": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "reconciledBy": {"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "Int32", "description": "The `Int32` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1."}, "type": {"type": ["string", "null"], "anyOf": [{"enum": ["ADMIN_USER"], "title": "An admin user or employee logged in, having a valid Employee ID", "description": "An admin user or employee logged in, having a valid Employee ID"}, {"enum": ["AP_PAYMENT_PROCESSOR"], "title": "Automated accounts payable payment processor", "description": "Automated accounts payable payment processor"}], "description": "Types of different reconcilers that can potentially perform reconciliation of different AR components"}}, "description": "Represents a AR reconciler entity - who is responsible for reconciling the AR components"}}, "description": "Accounts Receivable Payment entity which depicts a payment that we have realized as a \"Revenue\" and which we could have received from different revenue streams or sources."}, {"type": "null"}]}}, "isCreditMemo": {"type": ["boolean", "null"], "title": "Boolean", "description": "The `Boolean` scalar type represents `true` or `false`."}, "creditMemos": {"type": "array", "items": {"anyOf": [{"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "Int32", "description": "The `Int32` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1."}, "description": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "status": {"type": ["string", "null"], "anyOf": [{"enum": ["NEW"], "title": "Recently created or unprocessed", "description": "Recently created or unprocessed"}, {"enum": ["PENDING_APPROVAL"], "title": "Sent for approval but not approved yet", "description": "Sent for approval but not approved yet"}, {"enum": ["APPROVED"], "title": "Approved by the requested approver", "description": "Approved by the requested approver"}, {"enum": ["SENT_TO_RECIPIENT"], "title": "Sent to the intended recipient(s)", "description": "Sent to the intended recipient(s)"}, {"enum": ["PENDING_PAYMENT"], "title": "Is waiting for payment or to be reconciled", "description": "Is waiting for payment or to be reconciled"}, {"enum": ["PARTIALLY_PAID"], "title": "Is partially paid for and still to be matched against payment(s)", "description": "Is partially paid for and still to be matched against payment(s)"}, {"enum": ["FULLY_PAID"], "title": "Is fully paid for and matched/reconciled against payment(s)", "description": "Is fully paid for and matched/reconciled against payment(s)"}, {"enum": ["REJECTED"], "title": "Rejected in the process of approval", "description": "Rejected in the process of approval"}, {"enum": ["CANCELLED"], "title": "Cancelled due to some reason", "description": "Cancelled due to some reason"}], "description": "Enumerates all the statuses an AR Invoice can be in at any given point."}, "revenueSource": {"type": ["string", "null"], "anyOf": [{"enum": ["B2B"], "title": "Business to business type", "description": "Business to business type"}, {"enum": ["CASTLEGATE"], "title": "Castlegate or fulfillment services", "description": "Castlegate or fulfillment services"}, {"enum": ["SPONSORED_PRODUCTS"], "title": "Sponsored products type", "description": "Sponsored products type"}, {"enum": ["MAAS_MEDIA"], "title": "Maas media type", "description": "Maas media type"}, {"enum": ["LIQUIDATION"], "title": "Liquidation type", "description": "Liquidation type"}, {"enum": ["GIFT_CARD"], "title": "Gift card type", "description": "Gift card type"}], "description": "Types of different revenue sources or streams."}, "dueBy": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "paidOn": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "currency": {"type": ["string", "null"], "anyOf": [{"enum": ["US_DOLLAR"], "title": "US Dollar", "description": "US Dollar"}, {"enum": ["BRITISH_POUND"], "title": "British Pound", "description": "British Pound"}, {"enum": ["EURO"], "title": "Euro", "description": "Euro"}, {"enum": ["CANADIAN_DOLLAR"], "title": "Canadian Dollar", "description": "Canadian Dollar"}, {"enum": ["AUSTRALIAN_DOLLAR"], "title": "Australian Dollar", "description": "Australian Dollar"}], "description": "Types of currency"}, "invoiceAmount": {"type": ["number", "null"], "title": "Float", "description": "The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point)."}, "taxTotalAmount": {"type": ["number", "null"], "title": "Float", "description": "The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point)."}, "originalInvoiceTotalAmount": {"type": ["number", "null"], "title": "Float", "description": "The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point)."}, "originalTaxTotalAmount": {"type": ["number", "null"], "title": "Float", "description": "The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point)."}, "paidAmount": {"type": ["number", "null"], "title": "Float", "description": "The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point)."}, "dueAmount": {"type": ["number", "null"], "title": "Float", "description": "The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point)."}, "documents": {"type": "array", "items": {"anyOf": [{"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "Int32", "description": "The `Int32` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1."}, "name": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "createdOn": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "type": {"type": ["string", "null"], "anyOf": [{"enum": ["pdf"], "title": "PDF form of an AR Invoice", "description": "PDF form of an AR Invoice"}, {"enum": ["csv"], "title": "CSV form of an AR Invoice", "description": "CSV form of an AR Invoice"}], "description": "Types of tangible readable AR Invoice document"}, "path": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "remoteStorageDownloadAdminUrl": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "remoteStoragePath": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}}, "description": "A document related to an AR Invoice"}, {"type": "null"}]}}, "communications": {"type": "array", "items": {"anyOf": [{"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "Int64", "description": "The `Int64` scalar type represents non-fractional signed whole numeric values. Int can represent values between PHP_INT_MIN AND PHP_INT_MAX."}, "type": {"type": ["string", "null"], "anyOf": [{"enum": ["UNSPECIFIED"], "title": "A communication for which no type was specified", "description": "A communication for which no type was specified"}, {"enum": ["INITIAL_COMMUNICATION"], "title": "An initial communication containing the invoice and payment information", "description": "An initial communication containing the invoice and payment information"}, {"enum": ["CANCELLATION_COMMUNICATION"], "title": "A cancellation communication containing the cancelled invoice information", "description": "A cancellation communication containing the cancelled invoice information"}, {"enum": ["NETTABLE_REMOVED"], "title": "A communication sent out when the netting status of an invoice is turned off", "description": "A communication sent out when the netting status of an invoice is turned off"}], "description": "Types of different revenue communications."}, "queuedOn": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "emailMessage": {"type": ["object", "string", "null"], "description": "An email communication"}}, "description": "A revenue invoice communication"}, {"type": "null"}]}}, "creator": {"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "Int64", "description": "The `Int64` scalar type represents non-fractional signed whole numeric values. Int can represent values between PHP_INT_MIN AND PHP_INT_MAX."}, "type": {"type": ["string", "null"], "anyOf": [{"enum": ["SUPPLIER"], "title": "Supplier type creator", "description": "Supplier type creator"}, {"enum": ["ADMIN_USER"], "title": "Admin user as a creator", "description": "Admin user as a creator"}, {"enum": ["EXTRANET_USER"], "title": "An extranet user as a creator", "description": "An extranet user as a creator"}, {"enum": ["INTERNAL"], "title": "An internal user as a creator", "description": "An internal user as a creator"}], "description": "Enumerates all the types of an AR Invoice creator."}}, "description": "A revenue invoice creator"}, "createdOn": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "effectiveOn": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "isReconciled": {"type": ["boolean", "null"], "title": "Boolean", "description": "The `Boolean` scalar type represents `true` or `false`."}, "reconciledBy": {"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "Int32", "description": "The `Int32` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1."}, "type": {"type": ["string", "null"], "anyOf": [{"enum": ["ADMIN_USER"], "title": "An admin user or employee logged in, having a valid Employee ID", "description": "An admin user or employee logged in, having a valid Employee ID"}, {"enum": ["AP_PAYMENT_PROCESSOR"], "title": "Automated accounts payable payment processor", "description": "Automated accounts payable payment processor"}], "description": "Types of different reconcilers that can potentially perform reconciliation of different AR components"}}, "description": "Represents a AR reconciler entity - who is responsible for reconciling the AR components"}, "nettable": {"type": ["boolean", "null"], "title": "Boolean", "description": "The `Boolean` scalar type represents `true` or `false`."}, "originallyNettable": {"type": ["boolean", "null"], "title": "Boolean", "description": "The `Boolean` scalar type represents `true` or `false`."}, "invoiceReceipientsEmailAddresses": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "payments": {"type": "array", "items": {"anyOf": [{"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "Int32", "description": "The `Int32` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1."}, "status": {"type": ["string", "null"], "anyOf": [{"enum": ["NEW"], "title": "Recently created or unprocessed", "description": "Recently created or unprocessed"}, {"enum": ["PARTIALLY_MATCHED"], "title": "Partially matched i.e. still available for reconciliation", "description": "Partially matched i.e. still available for reconciliation"}, {"enum": ["FULLY_MATCHED"], "title": "Fully matched i.e. reconciled completely", "description": "Fully matched i.e. reconciled completely"}, {"enum": ["VOID"], "title": "Voided", "description": "Voided"}], "description": "Enumerates all the statuses an AR Payment can be in at any given point."}, "revenueSource": {"type": ["string", "null"], "anyOf": [{"enum": ["B2B"], "title": "Business to business type", "description": "Business to business type"}, {"enum": ["CASTLEGATE"], "title": "Castlegate or fulfillment services", "description": "Castlegate or fulfillment services"}, {"enum": ["SPONSORED_PRODUCTS"], "title": "Sponsored products type", "description": "Sponsored products type"}, {"enum": ["MAAS_MEDIA"], "title": "Maas media type", "description": "Maas media type"}, {"enum": ["LIQUIDATION"], "title": "Liquidation type", "description": "Liquidation type"}, {"enum": ["GIFT_CARD"], "title": "Gift card type", "description": "Gift card type"}], "description": "Types of different revenue sources or streams."}, "amount": {"type": ["number", "null"], "title": "Float", "description": "The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point)."}, "currency": {"type": ["string", "null"], "anyOf": [{"enum": ["US_DOLLAR"], "title": "US Dollar", "description": "US Dollar"}, {"enum": ["BRITISH_POUND"], "title": "British Pound", "description": "British Pound"}, {"enum": ["EURO"], "title": "Euro", "description": "Euro"}, {"enum": ["CANADIAN_DOLLAR"], "title": "Canadian Dollar", "description": "Canadian Dollar"}, {"enum": ["AUSTRALIAN_DOLLAR"], "title": "Australian Dollar", "description": "Australian Dollar"}], "description": "Types of currency"}, "reference": {"type": ["object", "string", "null"], "description": "Represents a reference or an origination of an AR payment. An AR payment can refer to an outside payment or simply to itself"}, "payer": {"type": ["object", "string", "null"], "description": "Represents an entity that uses Wayfair's services and pays for them"}, "createdOn": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "description": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "matchedAmount": {"type": ["number", "null"], "title": "Float", "description": "The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point)."}, "isReconciled": {"type": ["boolean", "null"], "title": "Boolean", "description": "The `Boolean` scalar type represents `true` or `false`."}, "reconciledOn": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "reconciledBy": {"type": ["object", "string", "null"], "description": "Represents a AR reconciler entity - who is responsible for reconciling the AR components"}}, "description": "Accounts Receivable Payment entity which depicts a payment that we have realized as a \"Revenue\" and which we could have received from different revenue streams or sources."}, {"type": "null"}]}}, "isCreditMemo": {"type": ["boolean", "null"], "title": "Boolean", "description": "The `Boolean` scalar type represents `true` or `false`."}, "statusUpdateLogs": {"type": "array", "items": {"anyOf": [{"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "Int64", "description": "The `Int64` scalar type represents non-fractional signed whole numeric values. Int can represent values between PHP_INT_MIN AND PHP_INT_MAX."}, "fromStatus": {"type": ["string", "null"], "anyOf": [{"enum": ["NEW"], "title": "Recently created or unprocessed", "description": "Recently created or unprocessed"}, {"enum": ["PENDING_APPROVAL"], "title": "Sent for approval but not approved yet", "description": "Sent for approval but not approved yet"}, {"enum": ["APPROVED"], "title": "Approved by the requested approver", "description": "Approved by the requested approver"}, {"enum": ["SENT_TO_RECIPIENT"], "title": "Sent to the intended recipient(s)", "description": "Sent to the intended recipient(s)"}, {"enum": ["PENDING_PAYMENT"], "title": "Is waiting for payment or to be reconciled", "description": "Is waiting for payment or to be reconciled"}, {"enum": ["PARTIALLY_PAID"], "title": "Is partially paid for and still to be matched against payment(s)", "description": "Is partially paid for and still to be matched against payment(s)"}, {"enum": ["FULLY_PAID"], "title": "Is fully paid for and matched/reconciled against payment(s)", "description": "Is fully paid for and matched/reconciled against payment(s)"}, {"enum": ["REJECTED"], "title": "Rejected in the process of approval", "description": "Rejected in the process of approval"}, {"enum": ["CANCELLED"], "title": "Cancelled due to some reason", "description": "Cancelled due to some reason"}], "description": "Enumerates all the statuses an AR Invoice can be in at any given point."}, "toStatus": {"type": ["string", "null"], "anyOf": [{"enum": ["NEW"], "title": "Recently created or unprocessed", "description": "Recently created or unprocessed"}, {"enum": ["PENDING_APPROVAL"], "title": "Sent for approval but not approved yet", "description": "Sent for approval but not approved yet"}, {"enum": ["APPROVED"], "title": "Approved by the requested approver", "description": "Approved by the requested approver"}, {"enum": ["SENT_TO_RECIPIENT"], "title": "Sent to the intended recipient(s)", "description": "Sent to the intended recipient(s)"}, {"enum": ["PENDING_PAYMENT"], "title": "Is waiting for payment or to be reconciled", "description": "Is waiting for payment or to be reconciled"}, {"enum": ["PARTIALLY_PAID"], "title": "Is partially paid for and still to be matched against payment(s)", "description": "Is partially paid for and still to be matched against payment(s)"}, {"enum": ["FULLY_PAID"], "title": "Is fully paid for and matched/reconciled against payment(s)", "description": "Is fully paid for and matched/reconciled against payment(s)"}, {"enum": ["REJECTED"], "title": "Rejected in the process of approval", "description": "Rejected in the process of approval"}, {"enum": ["CANCELLED"], "title": "Cancelled due to some reason", "description": "Cancelled due to some reason"}], "description": "Enumerates all the statuses an AR Invoice can be in at any given point."}, "updatedOn": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "updatedBy": {"type": ["object", "string", "null"], "description": "Fetches data for an employee."}}, "description": "Log entry for AR invoice status update"}, {"type": "null"}]}}, "reference": {"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "Int64", "description": "The `Int64` scalar type represents non-fractional signed whole numeric values. Int can represent values between PHP_INT_MIN AND PHP_INT_MAX."}}, "description": "A Reference to External Systems"}}, "description": "Interface for an AR Invoice - this contains all the common properties an AR Invoice should have"}, {"type": "null"}]}}, "statusUpdateLogs": {"type": "array", "items": {"anyOf": [{"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "Int64", "description": "The `Int64` scalar type represents non-fractional signed whole numeric values. Int can represent values between PHP_INT_MIN AND PHP_INT_MAX."}, "fromStatus": {"type": ["string", "null"], "anyOf": [{"enum": ["NEW"], "title": "Recently created or unprocessed", "description": "Recently created or unprocessed"}, {"enum": ["PENDING_APPROVAL"], "title": "Sent for approval but not approved yet", "description": "Sent for approval but not approved yet"}, {"enum": ["APPROVED"], "title": "Approved by the requested approver", "description": "Approved by the requested approver"}, {"enum": ["SENT_TO_RECIPIENT"], "title": "Sent to the intended recipient(s)", "description": "Sent to the intended recipient(s)"}, {"enum": ["PENDING_PAYMENT"], "title": "Is waiting for payment or to be reconciled", "description": "Is waiting for payment or to be reconciled"}, {"enum": ["PARTIALLY_PAID"], "title": "Is partially paid for and still to be matched against payment(s)", "description": "Is partially paid for and still to be matched against payment(s)"}, {"enum": ["FULLY_PAID"], "title": "Is fully paid for and matched/reconciled against payment(s)", "description": "Is fully paid for and matched/reconciled against payment(s)"}, {"enum": ["REJECTED"], "title": "Rejected in the process of approval", "description": "Rejected in the process of approval"}, {"enum": ["CANCELLED"], "title": "Cancelled due to some reason", "description": "Cancelled due to some reason"}], "description": "Enumerates all the statuses an AR Invoice can be in at any given point."}, "toStatus": {"type": ["string", "null"], "anyOf": [{"enum": ["NEW"], "title": "Recently created or unprocessed", "description": "Recently created or unprocessed"}, {"enum": ["PENDING_APPROVAL"], "title": "Sent for approval but not approved yet", "description": "Sent for approval but not approved yet"}, {"enum": ["APPROVED"], "title": "Approved by the requested approver", "description": "Approved by the requested approver"}, {"enum": ["SENT_TO_RECIPIENT"], "title": "Sent to the intended recipient(s)", "description": "Sent to the intended recipient(s)"}, {"enum": ["PENDING_PAYMENT"], "title": "Is waiting for payment or to be reconciled", "description": "Is waiting for payment or to be reconciled"}, {"enum": ["PARTIALLY_PAID"], "title": "Is partially paid for and still to be matched against payment(s)", "description": "Is partially paid for and still to be matched against payment(s)"}, {"enum": ["FULLY_PAID"], "title": "Is fully paid for and matched/reconciled against payment(s)", "description": "Is fully paid for and matched/reconciled against payment(s)"}, {"enum": ["REJECTED"], "title": "Rejected in the process of approval", "description": "Rejected in the process of approval"}, {"enum": ["CANCELLED"], "title": "Cancelled due to some reason", "description": "Cancelled due to some reason"}], "description": "Enumerates all the statuses an AR Invoice can be in at any given point."}, "updatedOn": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "updatedBy": {"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "ID", "description": "The `ID` scalar type represents a unique identifier, often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\"4\"`) or integer (such as `4`) input value will be accepted as an ID."}, "firstName": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "middleName": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "lastName": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "fullName": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "userName": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "nickname": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "displayLastName": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "email": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "samAccountName": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "isActive": {"type": ["boolean", "null"], "title": "Boolean", "description": "The `Boolean` scalar type represents `true` or `false`."}, "birthday": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "seniorityDate": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "startDate": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "forecastEndDate": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "terminationDate": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "isUnlimitedContract": {"type": ["boolean", "null"], "title": "Boolean", "description": "The `Boolean` scalar type represents `true` or `false`."}, "isEngineer": {"type": ["boolean", "null"], "title": "Boolean", "description": "The `Boolean` scalar type represents `true` or `false`."}, "worksOnSoftware": {"type": ["boolean", "null"], "title": "Boolean", "description": "The `Boolean` scalar type represents `true` or `false`."}, "title": {"type": ["object", "string", "null"], "description": "Wayfair job titles"}, "profile": {"type": ["object", "string", "null"], "description": "Profile information of an employee (ex: Massachusetts Employee, German Employee)"}, "type": {"type": ["object", "string", "null"], "description": "Wayfair employee categories (ex: intern, contract, full time)"}, "location": {"type": ["object", "string", "null"], "description": "Wayfair employee location (ex Copley Boston)"}, "phoneExtension": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "manager": {"type": ["object", "string", "null"], "description": "Fetches data for an employee."}, "workgroup": {"type": ["object", "string", "null"], "description": "Wayfair workgroup information"}, "processedByEmployee": {"type": ["object", "string", "null"], "description": "Fetches data for an employee."}, "directReports": {"type": "array", "items": {"anyOf": [{"type": ["object", "string", "null"], "description": "Fetches data for an employee."}, {"type": "null"}]}}}, "description": "Fetches data for an employee."}}, "description": "Log entry for AR invoice status update"}, {"type": "null"}]}}, "reference": {"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "Int64", "description": "The `Int64` scalar type represents non-fractional signed whole numeric values. Int can represent values between PHP_INT_MIN AND PHP_INT_MAX."}}, "description": "A Reference to External Systems"}}, "description": "SponsoredProducts Type of AR invoice which has all the properties of an AR invoice"}, "SponsoredProductsArInvoiceDetail": {"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "Int64", "description": "The `Int64` scalar type represents non-fractional signed whole numeric values. Int can represent values between PHP_INT_MIN AND PHP_INT_MAX."}, "quantity": {"type": ["number", "null"], "title": "Float", "description": "The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point)."}, "unitAmount": {"type": ["number", "null"], "title": "Float", "description": "The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point)."}, "itemAmount": {"type": ["number", "null"], "title": "Float", "description": "The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point)."}, "description": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "taxes": {"type": "array", "items": {"anyOf": [{"type": ["object", "string", "null"], "properties": {"type": {"type": ["string", "null"], "anyOf": [{"enum": ["SalesTax"], "title": "Sales Tax", "description": "Sales Tax"}, {"enum": ["SellersUseTax"], "title": "Sellers Use Tax", "description": "Sellers Use Tax"}, {"enum": ["EcoFee"], "title": "Eco Fee", "description": "Eco Fee"}, {"enum": ["SHP"], "title": "Shipment Tax", "description": "Shipment Tax"}, {"enum": ["GST"], "title": "GST Tax", "description": "GST Tax"}, {"enum": ["PST"], "title": "PST Tax", "description": "PST Tax"}, {"enum": ["QST"], "title": "QST Tax", "description": "QST Tax"}, {"enum": ["HST"], "title": "HST Tax", "description": "HST Tax"}, {"enum": ["VAT"], "title": "VAT Tax", "description": "VAT Tax"}, {"enum": ["NA"], "title": "Not Available", "description": "Not Available"}], "description": "An enumeration of Tax Types"}, "value": {"type": ["number", "null"], "title": "Float", "description": "The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point)."}}, "description": "The calculated tax amounts per type"}, {"type": "null"}]}}}, "description": "Invoice line item detail of Sponsored Products AR Invoice type"}, "MaasArInvoice": {"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "Int32", "description": "The `Int32` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1."}, "description": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "status": {"type": ["string", "null"], "anyOf": [{"enum": ["NEW"], "title": "Recently created or unprocessed", "description": "Recently created or unprocessed"}, {"enum": ["PENDING_APPROVAL"], "title": "Sent for approval but not approved yet", "description": "Sent for approval but not approved yet"}, {"enum": ["APPROVED"], "title": "Approved by the requested approver", "description": "Approved by the requested approver"}, {"enum": ["SENT_TO_RECIPIENT"], "title": "Sent to the intended recipient(s)", "description": "Sent to the intended recipient(s)"}, {"enum": ["PENDING_PAYMENT"], "title": "Is waiting for payment or to be reconciled", "description": "Is waiting for payment or to be reconciled"}, {"enum": ["PARTIALLY_PAID"], "title": "Is partially paid for and still to be matched against payment(s)", "description": "Is partially paid for and still to be matched against payment(s)"}, {"enum": ["FULLY_PAID"], "title": "Is fully paid for and matched/reconciled against payment(s)", "description": "Is fully paid for and matched/reconciled against payment(s)"}, {"enum": ["REJECTED"], "title": "Rejected in the process of approval", "description": "Rejected in the process of approval"}, {"enum": ["CANCELLED"], "title": "Cancelled due to some reason", "description": "Cancelled due to some reason"}], "description": "Enumerates all the statuses an AR Invoice can be in at any given point."}, "revenueSource": {"type": ["string", "null"], "anyOf": [{"enum": ["B2B"], "title": "Business to business type", "description": "Business to business type"}, {"enum": ["CASTLEGATE"], "title": "Castlegate or fulfillment services", "description": "Castlegate or fulfillment services"}, {"enum": ["SPONSORED_PRODUCTS"], "title": "Sponsored products type", "description": "Sponsored products type"}, {"enum": ["MAAS_MEDIA"], "title": "Maas media type", "description": "Maas media type"}, {"enum": ["LIQUIDATION"], "title": "Liquidation type", "description": "Liquidation type"}, {"enum": ["GIFT_CARD"], "title": "Gift card type", "description": "Gift card type"}], "description": "Types of different revenue sources or streams."}, "dueBy": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "paidOn": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "currency": {"type": ["string", "null"], "anyOf": [{"enum": ["US_DOLLAR"], "title": "US Dollar", "description": "US Dollar"}, {"enum": ["BRITISH_POUND"], "title": "British Pound", "description": "British Pound"}, {"enum": ["EURO"], "title": "Euro", "description": "Euro"}, {"enum": ["CANADIAN_DOLLAR"], "title": "Canadian Dollar", "description": "Canadian Dollar"}, {"enum": ["AUSTRALIAN_DOLLAR"], "title": "Australian Dollar", "description": "Australian Dollar"}], "description": "Types of currency"}, "invoiceAmount": {"type": ["number", "null"], "title": "Float", "description": "The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point)."}, "taxTotalAmount": {"type": ["number", "null"], "title": "Float", "description": "The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point)."}, "originalInvoiceTotalAmount": {"type": ["number", "null"], "title": "Float", "description": "The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point)."}, "originalTaxTotalAmount": {"type": ["number", "null"], "title": "Float", "description": "The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point)."}, "paidAmount": {"type": ["number", "null"], "title": "Float", "description": "The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point)."}, "dueAmount": {"type": ["number", "null"], "title": "Float", "description": "The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point)."}, "supplier": {"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "ID", "description": "The `ID` scalar type represents a unique identifier, often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\"4\"`) or integer (such as `4`) input value will be accepted as an ID."}, "name": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "shortName": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "status": {"type": ["string", "null"], "anyOf": [{"enum": ["ACTIVE"], "title": "Active Status", "description": "Active Status"}, {"enum": ["INACTIVE"], "title": "Inactive Status", "description": "Inactive Status"}, {"enum": ["BEING_ADDED"], "title": "Being Added Status", "description": "Being Added Status"}, {"enum": ["ON_HOLD"], "title": "On Hold Status", "description": "On Hold Status"}], "description": "Represents the status of the supplier"}, "websiteURL": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "currency": {"type": ["string", "null"], "anyOf": [{"enum": ["USD"], "title": "US dollars", "description": "US dollars"}, {"enum": ["GBP"], "title": "British pounds", "description": "British pounds"}, {"enum": ["EUR"], "title": "Euros", "description": "Euros"}, {"enum": ["CAD"], "title": "Canadian dollars", "description": "Canadian dollars"}, {"enum": ["AUD"], "title": "Australian dollars", "description": "Australian dollars"}], "description": "Represents the currency id of the supplier"}, "scopes": {"type": "array", "items": {"anyOf": [{"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "ID", "description": "The `ID` scalar type represents a unique identifier, often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\"4\"`) or integer (such as `4`) input value will be accepted as an ID."}, "name": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "permissionName": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "description": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}}, "description": "An API scope defining specific permissions for API access"}, {"type": "null"}]}}, "warehouses": {"type": "array", "items": {"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "ID", "description": "The `ID` scalar type represents a unique identifier, often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\"4\"`) or integer (such as `4`) input value will be accepted as an ID."}, "name": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "address": {"type": ["object", "string", "null"], "description": "An address"}, "supplier": {"type": ["object", "string", "null"], "description": "A supplier entity."}}, "description": "Information for a supplier warehouse"}}}, "description": "A supplier entity."}, "details": {"type": "array", "items": {"anyOf": [{"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "Int64", "description": "The `Int64` scalar type represents non-fractional signed whole numeric values. Int can represent values between PHP_INT_MIN AND PHP_INT_MAX."}, "quantity": {"type": ["number", "null"], "title": "Float", "description": "The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point)."}, "unitAmount": {"type": ["number", "null"], "title": "Float", "description": "The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point)."}, "itemAmount": {"type": ["number", "null"], "title": "Float", "description": "The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point)."}, "description": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "taxes": {"type": "array", "items": {"anyOf": [{"type": ["object", "string", "null"], "properties": {"type": {"type": ["string", "null"], "anyOf": [{"enum": ["SalesTax"], "title": "Sales Tax", "description": "Sales Tax"}, {"enum": ["SellersUseTax"], "title": "Sellers Use Tax", "description": "Sellers Use Tax"}, {"enum": ["EcoFee"], "title": "Eco Fee", "description": "Eco Fee"}, {"enum": ["SHP"], "title": "Shipment Tax", "description": "Shipment Tax"}, {"enum": ["GST"], "title": "GST Tax", "description": "GST Tax"}, {"enum": ["PST"], "title": "PST Tax", "description": "PST Tax"}, {"enum": ["QST"], "title": "QST Tax", "description": "QST Tax"}, {"enum": ["HST"], "title": "HST Tax", "description": "HST Tax"}, {"enum": ["VAT"], "title": "VAT Tax", "description": "VAT Tax"}, {"enum": ["NA"], "title": "Not Available", "description": "Not Available"}], "description": "An enumeration of Tax Types"}, "value": {"type": ["number", "null"], "title": "Float", "description": "The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point)."}}, "description": "The calculated tax amounts per type"}, {"type": "null"}]}}}, "description": "Detail of an AR Invoice - this contains all the common properties an invoice detail/line item should have"}, {"type": "null"}]}}, "documents": {"type": "array", "items": {"anyOf": [{"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "Int32", "description": "The `Int32` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1."}, "name": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "createdOn": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "type": {"type": ["string", "null"], "anyOf": [{"enum": ["pdf"], "title": "PDF form of an AR Invoice", "description": "PDF form of an AR Invoice"}, {"enum": ["csv"], "title": "CSV form of an AR Invoice", "description": "CSV form of an AR Invoice"}], "description": "Types of tangible readable AR Invoice document"}, "path": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "remoteStorageDownloadAdminUrl": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "remoteStoragePath": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}}, "description": "A document related to an AR Invoice"}, {"type": "null"}]}}, "communications": {"type": "array", "items": {"anyOf": [{"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "Int64", "description": "The `Int64` scalar type represents non-fractional signed whole numeric values. Int can represent values between PHP_INT_MIN AND PHP_INT_MAX."}, "type": {"type": ["string", "null"], "anyOf": [{"enum": ["UNSPECIFIED"], "title": "A communication for which no type was specified", "description": "A communication for which no type was specified"}, {"enum": ["INITIAL_COMMUNICATION"], "title": "An initial communication containing the invoice and payment information", "description": "An initial communication containing the invoice and payment information"}, {"enum": ["CANCELLATION_COMMUNICATION"], "title": "A cancellation communication containing the cancelled invoice information", "description": "A cancellation communication containing the cancelled invoice information"}, {"enum": ["NETTABLE_REMOVED"], "title": "A communication sent out when the netting status of an invoice is turned off", "description": "A communication sent out when the netting status of an invoice is turned off"}], "description": "Types of different revenue communications."}, "queuedOn": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "emailMessage": {"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "Int64", "description": "The `Int64` scalar type represents non-fractional signed whole numeric values. Int can represent values between PHP_INT_MIN AND PHP_INT_MAX."}}, "description": "An email communication"}}, "description": "A revenue invoice communication"}, {"type": "null"}]}}, "creator": {"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "Int64", "description": "The `Int64` scalar type represents non-fractional signed whole numeric values. Int can represent values between PHP_INT_MIN AND PHP_INT_MAX."}, "type": {"type": ["string", "null"], "anyOf": [{"enum": ["SUPPLIER"], "title": "Supplier type creator", "description": "Supplier type creator"}, {"enum": ["ADMIN_USER"], "title": "Admin user as a creator", "description": "Admin user as a creator"}, {"enum": ["EXTRANET_USER"], "title": "An extranet user as a creator", "description": "An extranet user as a creator"}, {"enum": ["INTERNAL"], "title": "An internal user as a creator", "description": "An internal user as a creator"}], "description": "Enumerates all the types of an AR Invoice creator."}}, "description": "A revenue invoice creator"}, "createdOn": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "isReconciled": {"type": ["boolean", "null"], "title": "Boolean", "description": "The `Boolean` scalar type represents `true` or `false`."}, "reconciledBy": {"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "Int32", "description": "The `Int32` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1."}, "type": {"type": ["string", "null"], "anyOf": [{"enum": ["ADMIN_USER"], "title": "An admin user or employee logged in, having a valid Employee ID", "description": "An admin user or employee logged in, having a valid Employee ID"}, {"enum": ["AP_PAYMENT_PROCESSOR"], "title": "Automated accounts payable payment processor", "description": "Automated accounts payable payment processor"}], "description": "Types of different reconcilers that can potentially perform reconciliation of different AR components"}}, "description": "Represents a AR reconciler entity - who is responsible for reconciling the AR components"}, "nettable": {"type": ["boolean", "null"], "title": "Boolean", "description": "The `Boolean` scalar type represents `true` or `false`."}, "originallyNettable": {"type": ["boolean", "null"], "title": "Boolean", "description": "The `Boolean` scalar type represents `true` or `false`."}, "netTerms": {"type": ["string", "null"], "anyOf": [{"enum": ["NET_15"], "title": "15 days term", "description": "15 days term"}, {"enum": ["NET_30"], "title": "30 days term", "description": "30 days term"}, {"enum": ["NET_45"], "title": "45 days term", "description": "45 days term"}, {"enum": ["NET_60"], "title": "60 days term", "description": "60 days term"}, {"enum": ["NET_90"], "title": "90 days term", "description": "90 days term"}], "description": "Types of Terms for an AR Invoice"}, "effectiveOn": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "invoiceReceipientsEmailAddresses": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "additionalInvoiceRecipientEmailAddresses": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "discounts": {"type": "array", "items": {"anyOf": [{"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "Int64", "description": "The `Int64` scalar type represents non-fractional signed whole numeric values. Int can represent values between PHP_INT_MIN AND PHP_INT_MAX."}, "description": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "quantity": {"type": ["object", "string", "null"], "title": "Int32", "description": "The `Int32` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1."}, "unitAmount": {"type": ["number", "null"], "title": "Float", "description": "The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point)."}, "amount": {"type": ["number", "null"], "title": "Float", "description": "The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point)."}}, "description": "AR invoice adjustment that can get applied on either an invoice line item or an overall invoice"}, {"type": "null"}]}}, "payments": {"type": "array", "items": {"anyOf": [{"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "Int32", "description": "The `Int32` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1."}, "status": {"type": ["string", "null"], "anyOf": [{"enum": ["NEW"], "title": "Recently created or unprocessed", "description": "Recently created or unprocessed"}, {"enum": ["PARTIALLY_MATCHED"], "title": "Partially matched i.e. still available for reconciliation", "description": "Partially matched i.e. still available for reconciliation"}, {"enum": ["FULLY_MATCHED"], "title": "Fully matched i.e. reconciled completely", "description": "Fully matched i.e. reconciled completely"}, {"enum": ["VOID"], "title": "Voided", "description": "Voided"}], "description": "Enumerates all the statuses an AR Payment can be in at any given point."}, "revenueSource": {"type": ["string", "null"], "anyOf": [{"enum": ["B2B"], "title": "Business to business type", "description": "Business to business type"}, {"enum": ["CASTLEGATE"], "title": "Castlegate or fulfillment services", "description": "Castlegate or fulfillment services"}, {"enum": ["SPONSORED_PRODUCTS"], "title": "Sponsored products type", "description": "Sponsored products type"}, {"enum": ["MAAS_MEDIA"], "title": "Maas media type", "description": "Maas media type"}, {"enum": ["LIQUIDATION"], "title": "Liquidation type", "description": "Liquidation type"}, {"enum": ["GIFT_CARD"], "title": "Gift card type", "description": "Gift card type"}], "description": "Types of different revenue sources or streams."}, "amount": {"type": ["number", "null"], "title": "Float", "description": "The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point)."}, "currency": {"type": ["string", "null"], "anyOf": [{"enum": ["US_DOLLAR"], "title": "US Dollar", "description": "US Dollar"}, {"enum": ["BRITISH_POUND"], "title": "British Pound", "description": "British Pound"}, {"enum": ["EURO"], "title": "Euro", "description": "Euro"}, {"enum": ["CANADIAN_DOLLAR"], "title": "Canadian Dollar", "description": "Canadian Dollar"}, {"enum": ["AUSTRALIAN_DOLLAR"], "title": "Australian Dollar", "description": "Australian Dollar"}], "description": "Types of currency"}, "reference": {"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "Int64", "description": "The `Int64` scalar type represents non-fractional signed whole numeric values. Int can represent values between PHP_INT_MIN AND PHP_INT_MAX."}, "type": {"type": ["string", "null"], "anyOf": [{"enum": ["SELF"], "title": "Self if the payment was created directly by itself and there is no external reference", "description": "Self if the payment was created directly by itself and there is no external reference"}, {"enum": ["CLASSIFICATION_TOOL"], "title": "An admin classification tool", "description": "An admin classification tool"}, {"enum": ["AP_VOUCHER"], "title": "An accounts payable voucher or payment that was cut for a vendor to pay our AP balances", "description": "An accounts payable voucher or payment that was cut for a vendor to pay our AP balances"}, {"enum": ["CREDIT_MEMO"], "title": "A credit to the vendor", "description": "A credit to the vendor"}], "description": "Enumerates all the references types an AR payment can have."}}, "description": "Represents a reference or an origination of an AR payment. An AR payment can refer to an outside payment or simply to itself"}, "payer": {"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "Int64", "description": "The `Int64` scalar type represents non-fractional signed whole numeric values. Int can represent values between PHP_INT_MIN AND PHP_INT_MAX."}, "type": {"type": ["string", "null"], "anyOf": [{"enum": ["SUPPLIER"], "title": "Supplier as a payer of an AR Payment", "description": "Supplier as a payer of an AR Payment"}, {"enum": ["AP_VOUCHER"], "title": "AP Voucher as a payer of an AR Payment", "description": "AP Voucher as a payer of an AR Payment"}, {"enum": ["CUSTOMER"], "title": "Customer as a payer of an AR Payment", "description": "Customer as a payer of an AR Payment"}, {"enum": ["FULFILLMENT_CUSTOMER"], "title": "Fulfillment customer as a payer of an AR Payment", "description": "Fulfillment customer as a payer of an AR Payment"}], "description": "Enumerates all types of payers that can make an AR payment."}}, "description": "Represents an entity that uses Wayfair's services and pays for them"}, "createdOn": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "description": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "matchedAmount": {"type": ["number", "null"], "title": "Float", "description": "The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point)."}, "isReconciled": {"type": ["boolean", "null"], "title": "Boolean", "description": "The `Boolean` scalar type represents `true` or `false`."}, "reconciledOn": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "reconciledBy": {"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "Int32", "description": "The `Int32` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1."}, "type": {"type": ["string", "null"], "anyOf": [{"enum": ["ADMIN_USER"], "title": "An admin user or employee logged in, having a valid Employee ID", "description": "An admin user or employee logged in, having a valid Employee ID"}, {"enum": ["AP_PAYMENT_PROCESSOR"], "title": "Automated accounts payable payment processor", "description": "Automated accounts payable payment processor"}], "description": "Types of different reconcilers that can potentially perform reconciliation of different AR components"}}, "description": "Represents a AR reconciler entity - who is responsible for reconciling the AR components"}}, "description": "Accounts Receivable Payment entity which depicts a payment that we have realized as a \"Revenue\" and which we could have received from different revenue streams or sources."}, {"type": "null"}]}}, "isCreditMemo": {"type": ["boolean", "null"], "title": "Boolean", "description": "The `Boolean` scalar type represents `true` or `false`."}, "creditMemos": {"type": "array", "items": {"anyOf": [{"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "Int32", "description": "The `Int32` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1."}, "description": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "status": {"type": ["string", "null"], "anyOf": [{"enum": ["NEW"], "title": "Recently created or unprocessed", "description": "Recently created or unprocessed"}, {"enum": ["PENDING_APPROVAL"], "title": "Sent for approval but not approved yet", "description": "Sent for approval but not approved yet"}, {"enum": ["APPROVED"], "title": "Approved by the requested approver", "description": "Approved by the requested approver"}, {"enum": ["SENT_TO_RECIPIENT"], "title": "Sent to the intended recipient(s)", "description": "Sent to the intended recipient(s)"}, {"enum": ["PENDING_PAYMENT"], "title": "Is waiting for payment or to be reconciled", "description": "Is waiting for payment or to be reconciled"}, {"enum": ["PARTIALLY_PAID"], "title": "Is partially paid for and still to be matched against payment(s)", "description": "Is partially paid for and still to be matched against payment(s)"}, {"enum": ["FULLY_PAID"], "title": "Is fully paid for and matched/reconciled against payment(s)", "description": "Is fully paid for and matched/reconciled against payment(s)"}, {"enum": ["REJECTED"], "title": "Rejected in the process of approval", "description": "Rejected in the process of approval"}, {"enum": ["CANCELLED"], "title": "Cancelled due to some reason", "description": "Cancelled due to some reason"}], "description": "Enumerates all the statuses an AR Invoice can be in at any given point."}, "revenueSource": {"type": ["string", "null"], "anyOf": [{"enum": ["B2B"], "title": "Business to business type", "description": "Business to business type"}, {"enum": ["CASTLEGATE"], "title": "Castlegate or fulfillment services", "description": "Castlegate or fulfillment services"}, {"enum": ["SPONSORED_PRODUCTS"], "title": "Sponsored products type", "description": "Sponsored products type"}, {"enum": ["MAAS_MEDIA"], "title": "Maas media type", "description": "Maas media type"}, {"enum": ["LIQUIDATION"], "title": "Liquidation type", "description": "Liquidation type"}, {"enum": ["GIFT_CARD"], "title": "Gift card type", "description": "Gift card type"}], "description": "Types of different revenue sources or streams."}, "dueBy": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "paidOn": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "currency": {"type": ["string", "null"], "anyOf": [{"enum": ["US_DOLLAR"], "title": "US Dollar", "description": "US Dollar"}, {"enum": ["BRITISH_POUND"], "title": "British Pound", "description": "British Pound"}, {"enum": ["EURO"], "title": "Euro", "description": "Euro"}, {"enum": ["CANADIAN_DOLLAR"], "title": "Canadian Dollar", "description": "Canadian Dollar"}, {"enum": ["AUSTRALIAN_DOLLAR"], "title": "Australian Dollar", "description": "Australian Dollar"}], "description": "Types of currency"}, "invoiceAmount": {"type": ["number", "null"], "title": "Float", "description": "The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point)."}, "taxTotalAmount": {"type": ["number", "null"], "title": "Float", "description": "The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point)."}, "originalInvoiceTotalAmount": {"type": ["number", "null"], "title": "Float", "description": "The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point)."}, "originalTaxTotalAmount": {"type": ["number", "null"], "title": "Float", "description": "The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point)."}, "paidAmount": {"type": ["number", "null"], "title": "Float", "description": "The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point)."}, "dueAmount": {"type": ["number", "null"], "title": "Float", "description": "The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point)."}, "documents": {"type": "array", "items": {"anyOf": [{"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "Int32", "description": "The `Int32` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1."}, "name": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "createdOn": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "type": {"type": ["string", "null"], "anyOf": [{"enum": ["pdf"], "title": "PDF form of an AR Invoice", "description": "PDF form of an AR Invoice"}, {"enum": ["csv"], "title": "CSV form of an AR Invoice", "description": "CSV form of an AR Invoice"}], "description": "Types of tangible readable AR Invoice document"}, "path": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "remoteStorageDownloadAdminUrl": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "remoteStoragePath": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}}, "description": "A document related to an AR Invoice"}, {"type": "null"}]}}, "communications": {"type": "array", "items": {"anyOf": [{"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "Int64", "description": "The `Int64` scalar type represents non-fractional signed whole numeric values. Int can represent values between PHP_INT_MIN AND PHP_INT_MAX."}, "type": {"type": ["string", "null"], "anyOf": [{"enum": ["UNSPECIFIED"], "title": "A communication for which no type was specified", "description": "A communication for which no type was specified"}, {"enum": ["INITIAL_COMMUNICATION"], "title": "An initial communication containing the invoice and payment information", "description": "An initial communication containing the invoice and payment information"}, {"enum": ["CANCELLATION_COMMUNICATION"], "title": "A cancellation communication containing the cancelled invoice information", "description": "A cancellation communication containing the cancelled invoice information"}, {"enum": ["NETTABLE_REMOVED"], "title": "A communication sent out when the netting status of an invoice is turned off", "description": "A communication sent out when the netting status of an invoice is turned off"}], "description": "Types of different revenue communications."}, "queuedOn": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "emailMessage": {"type": ["object", "string", "null"], "description": "An email communication"}}, "description": "A revenue invoice communication"}, {"type": "null"}]}}, "creator": {"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "Int64", "description": "The `Int64` scalar type represents non-fractional signed whole numeric values. Int can represent values between PHP_INT_MIN AND PHP_INT_MAX."}, "type": {"type": ["string", "null"], "anyOf": [{"enum": ["SUPPLIER"], "title": "Supplier type creator", "description": "Supplier type creator"}, {"enum": ["ADMIN_USER"], "title": "Admin user as a creator", "description": "Admin user as a creator"}, {"enum": ["EXTRANET_USER"], "title": "An extranet user as a creator", "description": "An extranet user as a creator"}, {"enum": ["INTERNAL"], "title": "An internal user as a creator", "description": "An internal user as a creator"}], "description": "Enumerates all the types of an AR Invoice creator."}}, "description": "A revenue invoice creator"}, "createdOn": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "effectiveOn": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "isReconciled": {"type": ["boolean", "null"], "title": "Boolean", "description": "The `Boolean` scalar type represents `true` or `false`."}, "reconciledBy": {"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "Int32", "description": "The `Int32` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1."}, "type": {"type": ["string", "null"], "anyOf": [{"enum": ["ADMIN_USER"], "title": "An admin user or employee logged in, having a valid Employee ID", "description": "An admin user or employee logged in, having a valid Employee ID"}, {"enum": ["AP_PAYMENT_PROCESSOR"], "title": "Automated accounts payable payment processor", "description": "Automated accounts payable payment processor"}], "description": "Types of different reconcilers that can potentially perform reconciliation of different AR components"}}, "description": "Represents a AR reconciler entity - who is responsible for reconciling the AR components"}, "nettable": {"type": ["boolean", "null"], "title": "Boolean", "description": "The `Boolean` scalar type represents `true` or `false`."}, "originallyNettable": {"type": ["boolean", "null"], "title": "Boolean", "description": "The `Boolean` scalar type represents `true` or `false`."}, "invoiceReceipientsEmailAddresses": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "payments": {"type": "array", "items": {"anyOf": [{"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "Int32", "description": "The `Int32` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1."}, "status": {"type": ["string", "null"], "anyOf": [{"enum": ["NEW"], "title": "Recently created or unprocessed", "description": "Recently created or unprocessed"}, {"enum": ["PARTIALLY_MATCHED"], "title": "Partially matched i.e. still available for reconciliation", "description": "Partially matched i.e. still available for reconciliation"}, {"enum": ["FULLY_MATCHED"], "title": "Fully matched i.e. reconciled completely", "description": "Fully matched i.e. reconciled completely"}, {"enum": ["VOID"], "title": "Voided", "description": "Voided"}], "description": "Enumerates all the statuses an AR Payment can be in at any given point."}, "revenueSource": {"type": ["string", "null"], "anyOf": [{"enum": ["B2B"], "title": "Business to business type", "description": "Business to business type"}, {"enum": ["CASTLEGATE"], "title": "Castlegate or fulfillment services", "description": "Castlegate or fulfillment services"}, {"enum": ["SPONSORED_PRODUCTS"], "title": "Sponsored products type", "description": "Sponsored products type"}, {"enum": ["MAAS_MEDIA"], "title": "Maas media type", "description": "Maas media type"}, {"enum": ["LIQUIDATION"], "title": "Liquidation type", "description": "Liquidation type"}, {"enum": ["GIFT_CARD"], "title": "Gift card type", "description": "Gift card type"}], "description": "Types of different revenue sources or streams."}, "amount": {"type": ["number", "null"], "title": "Float", "description": "The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point)."}, "currency": {"type": ["string", "null"], "anyOf": [{"enum": ["US_DOLLAR"], "title": "US Dollar", "description": "US Dollar"}, {"enum": ["BRITISH_POUND"], "title": "British Pound", "description": "British Pound"}, {"enum": ["EURO"], "title": "Euro", "description": "Euro"}, {"enum": ["CANADIAN_DOLLAR"], "title": "Canadian Dollar", "description": "Canadian Dollar"}, {"enum": ["AUSTRALIAN_DOLLAR"], "title": "Australian Dollar", "description": "Australian Dollar"}], "description": "Types of currency"}, "reference": {"type": ["object", "string", "null"], "description": "Represents a reference or an origination of an AR payment. An AR payment can refer to an outside payment or simply to itself"}, "payer": {"type": ["object", "string", "null"], "description": "Represents an entity that uses Wayfair's services and pays for them"}, "createdOn": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "description": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "matchedAmount": {"type": ["number", "null"], "title": "Float", "description": "The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point)."}, "isReconciled": {"type": ["boolean", "null"], "title": "Boolean", "description": "The `Boolean` scalar type represents `true` or `false`."}, "reconciledOn": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "reconciledBy": {"type": ["object", "string", "null"], "description": "Represents a AR reconciler entity - who is responsible for reconciling the AR components"}}, "description": "Accounts Receivable Payment entity which depicts a payment that we have realized as a \"Revenue\" and which we could have received from different revenue streams or sources."}, {"type": "null"}]}}, "isCreditMemo": {"type": ["boolean", "null"], "title": "Boolean", "description": "The `Boolean` scalar type represents `true` or `false`."}, "statusUpdateLogs": {"type": "array", "items": {"anyOf": [{"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "Int64", "description": "The `Int64` scalar type represents non-fractional signed whole numeric values. Int can represent values between PHP_INT_MIN AND PHP_INT_MAX."}, "fromStatus": {"type": ["string", "null"], "anyOf": [{"enum": ["NEW"], "title": "Recently created or unprocessed", "description": "Recently created or unprocessed"}, {"enum": ["PENDING_APPROVAL"], "title": "Sent for approval but not approved yet", "description": "Sent for approval but not approved yet"}, {"enum": ["APPROVED"], "title": "Approved by the requested approver", "description": "Approved by the requested approver"}, {"enum": ["SENT_TO_RECIPIENT"], "title": "Sent to the intended recipient(s)", "description": "Sent to the intended recipient(s)"}, {"enum": ["PENDING_PAYMENT"], "title": "Is waiting for payment or to be reconciled", "description": "Is waiting for payment or to be reconciled"}, {"enum": ["PARTIALLY_PAID"], "title": "Is partially paid for and still to be matched against payment(s)", "description": "Is partially paid for and still to be matched against payment(s)"}, {"enum": ["FULLY_PAID"], "title": "Is fully paid for and matched/reconciled against payment(s)", "description": "Is fully paid for and matched/reconciled against payment(s)"}, {"enum": ["REJECTED"], "title": "Rejected in the process of approval", "description": "Rejected in the process of approval"}, {"enum": ["CANCELLED"], "title": "Cancelled due to some reason", "description": "Cancelled due to some reason"}], "description": "Enumerates all the statuses an AR Invoice can be in at any given point."}, "toStatus": {"type": ["string", "null"], "anyOf": [{"enum": ["NEW"], "title": "Recently created or unprocessed", "description": "Recently created or unprocessed"}, {"enum": ["PENDING_APPROVAL"], "title": "Sent for approval but not approved yet", "description": "Sent for approval but not approved yet"}, {"enum": ["APPROVED"], "title": "Approved by the requested approver", "description": "Approved by the requested approver"}, {"enum": ["SENT_TO_RECIPIENT"], "title": "Sent to the intended recipient(s)", "description": "Sent to the intended recipient(s)"}, {"enum": ["PENDING_PAYMENT"], "title": "Is waiting for payment or to be reconciled", "description": "Is waiting for payment or to be reconciled"}, {"enum": ["PARTIALLY_PAID"], "title": "Is partially paid for and still to be matched against payment(s)", "description": "Is partially paid for and still to be matched against payment(s)"}, {"enum": ["FULLY_PAID"], "title": "Is fully paid for and matched/reconciled against payment(s)", "description": "Is fully paid for and matched/reconciled against payment(s)"}, {"enum": ["REJECTED"], "title": "Rejected in the process of approval", "description": "Rejected in the process of approval"}, {"enum": ["CANCELLED"], "title": "Cancelled due to some reason", "description": "Cancelled due to some reason"}], "description": "Enumerates all the statuses an AR Invoice can be in at any given point."}, "updatedOn": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "updatedBy": {"type": ["object", "string", "null"], "description": "Fetches data for an employee."}}, "description": "Log entry for AR invoice status update"}, {"type": "null"}]}}, "reference": {"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "Int64", "description": "The `Int64` scalar type represents non-fractional signed whole numeric values. Int can represent values between PHP_INT_MIN AND PHP_INT_MAX."}}, "description": "A Reference to External Systems"}}, "description": "Interface for an AR Invoice - this contains all the common properties an AR Invoice should have"}, {"type": "null"}]}}, "statusUpdateLogs": {"type": "array", "items": {"anyOf": [{"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "Int64", "description": "The `Int64` scalar type represents non-fractional signed whole numeric values. Int can represent values between PHP_INT_MIN AND PHP_INT_MAX."}, "fromStatus": {"type": ["string", "null"], "anyOf": [{"enum": ["NEW"], "title": "Recently created or unprocessed", "description": "Recently created or unprocessed"}, {"enum": ["PENDING_APPROVAL"], "title": "Sent for approval but not approved yet", "description": "Sent for approval but not approved yet"}, {"enum": ["APPROVED"], "title": "Approved by the requested approver", "description": "Approved by the requested approver"}, {"enum": ["SENT_TO_RECIPIENT"], "title": "Sent to the intended recipient(s)", "description": "Sent to the intended recipient(s)"}, {"enum": ["PENDING_PAYMENT"], "title": "Is waiting for payment or to be reconciled", "description": "Is waiting for payment or to be reconciled"}, {"enum": ["PARTIALLY_PAID"], "title": "Is partially paid for and still to be matched against payment(s)", "description": "Is partially paid for and still to be matched against payment(s)"}, {"enum": ["FULLY_PAID"], "title": "Is fully paid for and matched/reconciled against payment(s)", "description": "Is fully paid for and matched/reconciled against payment(s)"}, {"enum": ["REJECTED"], "title": "Rejected in the process of approval", "description": "Rejected in the process of approval"}, {"enum": ["CANCELLED"], "title": "Cancelled due to some reason", "description": "Cancelled due to some reason"}], "description": "Enumerates all the statuses an AR Invoice can be in at any given point."}, "toStatus": {"type": ["string", "null"], "anyOf": [{"enum": ["NEW"], "title": "Recently created or unprocessed", "description": "Recently created or unprocessed"}, {"enum": ["PENDING_APPROVAL"], "title": "Sent for approval but not approved yet", "description": "Sent for approval but not approved yet"}, {"enum": ["APPROVED"], "title": "Approved by the requested approver", "description": "Approved by the requested approver"}, {"enum": ["SENT_TO_RECIPIENT"], "title": "Sent to the intended recipient(s)", "description": "Sent to the intended recipient(s)"}, {"enum": ["PENDING_PAYMENT"], "title": "Is waiting for payment or to be reconciled", "description": "Is waiting for payment or to be reconciled"}, {"enum": ["PARTIALLY_PAID"], "title": "Is partially paid for and still to be matched against payment(s)", "description": "Is partially paid for and still to be matched against payment(s)"}, {"enum": ["FULLY_PAID"], "title": "Is fully paid for and matched/reconciled against payment(s)", "description": "Is fully paid for and matched/reconciled against payment(s)"}, {"enum": ["REJECTED"], "title": "Rejected in the process of approval", "description": "Rejected in the process of approval"}, {"enum": ["CANCELLED"], "title": "Cancelled due to some reason", "description": "Cancelled due to some reason"}], "description": "Enumerates all the statuses an AR Invoice can be in at any given point."}, "updatedOn": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "updatedBy": {"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "ID", "description": "The `ID` scalar type represents a unique identifier, often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\"4\"`) or integer (such as `4`) input value will be accepted as an ID."}, "firstName": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "middleName": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "lastName": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "fullName": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "userName": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "nickname": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "displayLastName": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "email": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "samAccountName": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "isActive": {"type": ["boolean", "null"], "title": "Boolean", "description": "The `Boolean` scalar type represents `true` or `false`."}, "birthday": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "seniorityDate": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "startDate": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "forecastEndDate": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "terminationDate": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "isUnlimitedContract": {"type": ["boolean", "null"], "title": "Boolean", "description": "The `Boolean` scalar type represents `true` or `false`."}, "isEngineer": {"type": ["boolean", "null"], "title": "Boolean", "description": "The `Boolean` scalar type represents `true` or `false`."}, "worksOnSoftware": {"type": ["boolean", "null"], "title": "Boolean", "description": "The `Boolean` scalar type represents `true` or `false`."}, "title": {"type": ["object", "string", "null"], "description": "Wayfair job titles"}, "profile": {"type": ["object", "string", "null"], "description": "Profile information of an employee (ex: Massachusetts Employee, German Employee)"}, "type": {"type": ["object", "string", "null"], "description": "Wayfair employee categories (ex: intern, contract, full time)"}, "location": {"type": ["object", "string", "null"], "description": "Wayfair employee location (ex Copley Boston)"}, "phoneExtension": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "manager": {"type": ["object", "string", "null"], "description": "Fetches data for an employee."}, "workgroup": {"type": ["object", "string", "null"], "description": "Wayfair workgroup information"}, "processedByEmployee": {"type": ["object", "string", "null"], "description": "Fetches data for an employee."}, "directReports": {"type": "array", "items": {"anyOf": [{"type": ["object", "string", "null"], "description": "Fetches data for an employee."}, {"type": "null"}]}}}, "description": "Fetches data for an employee."}}, "description": "Log entry for AR invoice status update"}, {"type": "null"}]}}, "reference": {"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "Int64", "description": "The `Int64` scalar type represents non-fractional signed whole numeric values. Int can represent values between PHP_INT_MIN AND PHP_INT_MAX."}}, "description": "A Reference to External Systems"}}, "description": "MaaS Type of AR invoice which has all the properties of an AR invoice"}, "ArInvoiceTermsType": {"type": ["string", "null"], "anyOf": [{"enum": ["NET_15"], "title": "15 days term", "description": "15 days term"}, {"enum": ["NET_30"], "title": "30 days term", "description": "30 days term"}, {"enum": ["NET_45"], "title": "45 days term", "description": "45 days term"}, {"enum": ["NET_60"], "title": "60 days term", "description": "60 days term"}, {"enum": ["NET_90"], "title": "90 days term", "description": "90 days term"}], "description": "Types of Terms for an AR Invoice"}, "ArInvoiceAdjustment": {"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "Int64", "description": "The `Int64` scalar type represents non-fractional signed whole numeric values. Int can represent values between PHP_INT_MIN AND PHP_INT_MAX."}, "description": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "quantity": {"type": ["object", "string", "null"], "title": "Int32", "description": "The `Int32` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1."}, "unitAmount": {"type": ["number", "null"], "title": "Float", "description": "The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point)."}, "amount": {"type": ["number", "null"], "title": "Float", "description": "The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point)."}}, "description": "AR invoice adjustment that can get applied on either an invoice line item or an overall invoice"}, "MaasArInvoiceDetail": {"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "Int64", "description": "The `Int64` scalar type represents non-fractional signed whole numeric values. Int can represent values between PHP_INT_MIN AND PHP_INT_MAX."}, "quantity": {"type": ["number", "null"], "title": "Float", "description": "The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point)."}, "unitAmount": {"type": ["number", "null"], "title": "Float", "description": "The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point)."}, "itemAmount": {"type": ["number", "null"], "title": "Float", "description": "The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point)."}, "description": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "manufacturerPartsId": {"type": ["object", "string", "null"], "title": "Int32", "description": "The `Int32` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1."}, "modelerAssignmentId": {"type": ["object", "string", "null"], "title": "Int32", "description": "The `Int32` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1."}, "taxes": {"type": "array", "items": {"anyOf": [{"type": ["object", "string", "null"], "properties": {"type": {"type": ["string", "null"], "anyOf": [{"enum": ["SalesTax"], "title": "Sales Tax", "description": "Sales Tax"}, {"enum": ["SellersUseTax"], "title": "Sellers Use Tax", "description": "Sellers Use Tax"}, {"enum": ["EcoFee"], "title": "Eco Fee", "description": "Eco Fee"}, {"enum": ["SHP"], "title": "Shipment Tax", "description": "Shipment Tax"}, {"enum": ["GST"], "title": "GST Tax", "description": "GST Tax"}, {"enum": ["PST"], "title": "PST Tax", "description": "PST Tax"}, {"enum": ["QST"], "title": "QST Tax", "description": "QST Tax"}, {"enum": ["HST"], "title": "HST Tax", "description": "HST Tax"}, {"enum": ["VAT"], "title": "VAT Tax", "description": "VAT Tax"}, {"enum": ["NA"], "title": "Not Available", "description": "Not Available"}], "description": "An enumeration of Tax Types"}, "value": {"type": ["number", "null"], "title": "Float", "description": "The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point)."}}, "description": "The calculated tax amounts per type"}, {"type": "null"}]}}, "discounts": {"type": "array", "items": {"anyOf": [{"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "Int64", "description": "The `Int64` scalar type represents non-fractional signed whole numeric values. Int can represent values between PHP_INT_MIN AND PHP_INT_MAX."}, "description": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "quantity": {"type": ["object", "string", "null"], "title": "Int32", "description": "The `Int32` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1."}, "unitAmount": {"type": ["number", "null"], "title": "Float", "description": "The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point)."}, "amount": {"type": ["number", "null"], "title": "Float", "description": "The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point)."}}, "description": "AR invoice adjustment that can get applied on either an invoice line item or an overall invoice"}, {"type": "null"}]}}}, "description": "Invoice line item detail of MaaS AR Invoice type"}, "BJSShippingLabelInfo": {"type": ["object", "string", "null"], "properties": {"carrier": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "carrierCode": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "trackingNumber": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "weight": {"type": ["object", "string", "null"], "properties": {"amount": {"type": ["number", "null"], "title": "Float", "description": "The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point)."}, "unit": {"type": ["string", "null"], "anyOf": [{"enum": ["POUNDS"], "title": "Pounds (lbs)", "description": "Pounds (lbs)"}, {"enum": ["KILOGRAMS"], "title": "Kilograms (kg)", "description": "Kilograms (kg)"}], "description": "An enumeration of the different weight units that are supported"}}, "description": "The weight of some object"}, "barcodeNumber": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "dimensions": {"type": ["object", "string", "null"], "properties": {"length": {"type": ["object", "string", "null"], "properties": {"amount": {"type": ["number", "null"], "title": "Float", "description": "The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point)."}, "unit": {"type": ["string", "null"], "anyOf": [{"enum": ["INCHES"], "title": "Inches", "description": "Inches"}, {"enum": ["CENTIMETERS"], "title": "Centimeters", "description": "Centimeters"}], "description": "Units that can be used to measure a length"}}, "description": "The size of some item in one direction."}, "width": {"type": ["object", "string", "null"], "properties": {"amount": {"type": ["number", "null"], "title": "Float", "description": "The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point)."}, "unit": {"type": ["string", "null"], "anyOf": [{"enum": ["INCHES"], "title": "Inches", "description": "Inches"}, {"enum": ["CENTIMETERS"], "title": "Centimeters", "description": "Centimeters"}], "description": "Units that can be used to measure a length"}}, "description": "The size of some item in one direction."}, "height": {"type": ["object", "string", "null"], "properties": {"amount": {"type": ["number", "null"], "title": "Float", "description": "The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point)."}, "unit": {"type": ["string", "null"], "anyOf": [{"enum": ["INCHES"], "title": "Inches", "description": "Inches"}, {"enum": ["CENTIMETERS"], "title": "Centimeters", "description": "Centimeters"}], "description": "Units that can be used to measure a length"}}, "description": "The size of some item in one direction."}}, "description": "Dimensions Type of the package."}, "serviceLevel": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "depotCode": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}}, "description": "BJS Shipping Label Information."}, "Weight": {"type": ["object", "string", "null"], "properties": {"amount": {"type": ["number", "null"], "title": "Float", "description": "The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point)."}, "unit": {"type": ["string", "null"], "anyOf": [{"enum": ["POUNDS"], "title": "Pounds (lbs)", "description": "Pounds (lbs)"}, {"enum": ["KILOGRAMS"], "title": "Kilograms (kg)", "description": "Kilograms (kg)"}], "description": "An enumeration of the different weight units that are supported"}}, "description": "The weight of some object"}, "PackageDimensionType": {"type": ["object", "string", "null"], "properties": {"length": {"type": ["object", "string", "null"], "properties": {"amount": {"type": ["number", "null"], "title": "Float", "description": "The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point)."}, "unit": {"type": ["string", "null"], "anyOf": [{"enum": ["INCHES"], "title": "Inches", "description": "Inches"}, {"enum": ["CENTIMETERS"], "title": "Centimeters", "description": "Centimeters"}], "description": "Units that can be used to measure a length"}}, "description": "The size of some item in one direction."}, "width": {"type": ["object", "string", "null"], "properties": {"amount": {"type": ["number", "null"], "title": "Float", "description": "The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point)."}, "unit": {"type": ["string", "null"], "anyOf": [{"enum": ["INCHES"], "title": "Inches", "description": "Inches"}, {"enum": ["CENTIMETERS"], "title": "Centimeters", "description": "Centimeters"}], "description": "Units that can be used to measure a length"}}, "description": "The size of some item in one direction."}, "height": {"type": ["object", "string", "null"], "properties": {"amount": {"type": ["number", "null"], "title": "Float", "description": "The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point)."}, "unit": {"type": ["string", "null"], "anyOf": [{"enum": ["INCHES"], "title": "Inches", "description": "Inches"}, {"enum": ["CENTIMETERS"], "title": "Centimeters", "description": "Centimeters"}], "description": "Units that can be used to measure a length"}}, "description": "The size of some item in one direction."}}, "description": "Dimensions Type of the package."}, "DPDShippingLabelInfo": {"type": ["object", "string", "null"], "properties": {"carrier": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "carrierCode": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "trackingNumber": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "weight": {"type": ["object", "string", "null"], "properties": {"amount": {"type": ["number", "null"], "title": "Float", "description": "The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point)."}, "unit": {"type": ["string", "null"], "anyOf": [{"enum": ["POUNDS"], "title": "Pounds (lbs)", "description": "Pounds (lbs)"}, {"enum": ["KILOGRAMS"], "title": "Kilograms (kg)", "description": "Kilograms (kg)"}], "description": "An enumeration of the different weight units that are supported"}}, "description": "The weight of some object"}, "barcodeText": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "dimensions": {"type": ["object", "string", "null"], "properties": {"length": {"type": ["object", "string", "null"], "properties": {"amount": {"type": ["number", "null"], "title": "Float", "description": "The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point)."}, "unit": {"type": ["string", "null"], "anyOf": [{"enum": ["INCHES"], "title": "Inches", "description": "Inches"}, {"enum": ["CENTIMETERS"], "title": "Centimeters", "description": "Centimeters"}], "description": "Units that can be used to measure a length"}}, "description": "The size of some item in one direction."}, "width": {"type": ["object", "string", "null"], "properties": {"amount": {"type": ["number", "null"], "title": "Float", "description": "The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point)."}, "unit": {"type": ["string", "null"], "anyOf": [{"enum": ["INCHES"], "title": "Inches", "description": "Inches"}, {"enum": ["CENTIMETERS"], "title": "Centimeters", "description": "Centimeters"}], "description": "Units that can be used to measure a length"}}, "description": "The size of some item in one direction."}, "height": {"type": ["object", "string", "null"], "properties": {"amount": {"type": ["number", "null"], "title": "Float", "description": "The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point)."}, "unit": {"type": ["string", "null"], "anyOf": [{"enum": ["INCHES"], "title": "Inches", "description": "Inches"}, {"enum": ["CENTIMETERS"], "title": "Centimeters", "description": "Centimeters"}], "description": "Units that can be used to measure a length"}}, "description": "The size of some item in one direction."}}, "description": "Dimensions Type of the package."}, "originSort": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "destinationSort": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "destinationDepotCode": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "serviceCode": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "originDepotCode": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "originDepotAddress": {"type": ["object", "string", "null"], "properties": {"name": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "address1": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "address2": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "address3": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "city": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "state": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "country": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "postalCode": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "phoneNumber": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}}, "description": "An address"}}, "description": "DPD Shipping Label Information"}, "LiquidationArInvoice": {"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "Int32", "description": "The `Int32` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1."}, "description": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "status": {"type": ["string", "null"], "anyOf": [{"enum": ["NEW"], "title": "Recently created or unprocessed", "description": "Recently created or unprocessed"}, {"enum": ["PENDING_APPROVAL"], "title": "Sent for approval but not approved yet", "description": "Sent for approval but not approved yet"}, {"enum": ["APPROVED"], "title": "Approved by the requested approver", "description": "Approved by the requested approver"}, {"enum": ["SENT_TO_RECIPIENT"], "title": "Sent to the intended recipient(s)", "description": "Sent to the intended recipient(s)"}, {"enum": ["PENDING_PAYMENT"], "title": "Is waiting for payment or to be reconciled", "description": "Is waiting for payment or to be reconciled"}, {"enum": ["PARTIALLY_PAID"], "title": "Is partially paid for and still to be matched against payment(s)", "description": "Is partially paid for and still to be matched against payment(s)"}, {"enum": ["FULLY_PAID"], "title": "Is fully paid for and matched/reconciled against payment(s)", "description": "Is fully paid for and matched/reconciled against payment(s)"}, {"enum": ["REJECTED"], "title": "Rejected in the process of approval", "description": "Rejected in the process of approval"}, {"enum": ["CANCELLED"], "title": "Cancelled due to some reason", "description": "Cancelled due to some reason"}], "description": "Enumerates all the statuses an AR Invoice can be in at any given point."}, "revenueSource": {"type": ["string", "null"], "anyOf": [{"enum": ["B2B"], "title": "Business to business type", "description": "Business to business type"}, {"enum": ["CASTLEGATE"], "title": "Castlegate or fulfillment services", "description": "Castlegate or fulfillment services"}, {"enum": ["SPONSORED_PRODUCTS"], "title": "Sponsored products type", "description": "Sponsored products type"}, {"enum": ["MAAS_MEDIA"], "title": "Maas media type", "description": "Maas media type"}, {"enum": ["LIQUIDATION"], "title": "Liquidation type", "description": "Liquidation type"}, {"enum": ["GIFT_CARD"], "title": "Gift card type", "description": "Gift card type"}], "description": "Types of different revenue sources or streams."}, "dueBy": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "paidOn": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "currency": {"type": ["string", "null"], "anyOf": [{"enum": ["US_DOLLAR"], "title": "US Dollar", "description": "US Dollar"}, {"enum": ["BRITISH_POUND"], "title": "British Pound", "description": "British Pound"}, {"enum": ["EURO"], "title": "Euro", "description": "Euro"}, {"enum": ["CANADIAN_DOLLAR"], "title": "Canadian Dollar", "description": "Canadian Dollar"}, {"enum": ["AUSTRALIAN_DOLLAR"], "title": "Australian Dollar", "description": "Australian Dollar"}], "description": "Types of currency"}, "originalInvoiceTotalAmount": {"type": ["number", "null"], "title": "Float", "description": "The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point)."}, "originalTaxTotalAmount": {"type": ["number", "null"], "title": "Float", "description": "The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point)."}, "paidAmount": {"type": ["number", "null"], "title": "Float", "description": "The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point)."}, "dueAmount": {"type": ["number", "null"], "title": "Float", "description": "The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point)."}, "details": {"type": "array", "items": {"anyOf": [{"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "Int64", "description": "The `Int64` scalar type represents non-fractional signed whole numeric values. Int can represent values between PHP_INT_MIN AND PHP_INT_MAX."}, "quantity": {"type": ["number", "null"], "title": "Float", "description": "The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point)."}, "unitAmount": {"type": ["number", "null"], "title": "Float", "description": "The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point)."}, "itemAmount": {"type": ["number", "null"], "title": "Float", "description": "The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point)."}, "description": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "taxes": {"type": "array", "items": {"anyOf": [{"type": ["object", "string", "null"], "properties": {"type": {"type": ["string", "null"], "anyOf": [{"enum": ["SalesTax"], "title": "Sales Tax", "description": "Sales Tax"}, {"enum": ["SellersUseTax"], "title": "Sellers Use Tax", "description": "Sellers Use Tax"}, {"enum": ["EcoFee"], "title": "Eco Fee", "description": "Eco Fee"}, {"enum": ["SHP"], "title": "Shipment Tax", "description": "Shipment Tax"}, {"enum": ["GST"], "title": "GST Tax", "description": "GST Tax"}, {"enum": ["PST"], "title": "PST Tax", "description": "PST Tax"}, {"enum": ["QST"], "title": "QST Tax", "description": "QST Tax"}, {"enum": ["HST"], "title": "HST Tax", "description": "HST Tax"}, {"enum": ["VAT"], "title": "VAT Tax", "description": "VAT Tax"}, {"enum": ["NA"], "title": "Not Available", "description": "Not Available"}], "description": "An enumeration of Tax Types"}, "value": {"type": ["number", "null"], "title": "Float", "description": "The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point)."}}, "description": "The calculated tax amounts per type"}, {"type": "null"}]}}}, "description": "Detail of an AR Invoice - this contains all the common properties an invoice detail/line item should have"}, {"type": "null"}]}}, "documents": {"type": "array", "items": {"anyOf": [{"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "Int32", "description": "The `Int32` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1."}, "name": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "createdOn": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "type": {"type": ["string", "null"], "anyOf": [{"enum": ["pdf"], "title": "PDF form of an AR Invoice", "description": "PDF form of an AR Invoice"}, {"enum": ["csv"], "title": "CSV form of an AR Invoice", "description": "CSV form of an AR Invoice"}], "description": "Types of tangible readable AR Invoice document"}, "path": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "remoteStorageDownloadAdminUrl": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "remoteStoragePath": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}}, "description": "A document related to an AR Invoice"}, {"type": "null"}]}}, "liquidator": {"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "ID", "description": "The `ID` scalar type represents a unique identifier, often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\"4\"`) or integer (such as `4`) input value will be accepted as an ID."}, "firstName": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "lastName": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "postalCode": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "email": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "contactAtPhone": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}}, "description": "A customer"}, "order": {"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "Int64", "description": "The `Int64` scalar type represents non-fractional signed whole numeric values. Int can represent values between PHP_INT_MIN AND PHP_INT_MAX."}}, "description": "Order entity, which denotes a customer placed order in one of the Wayfair customer facing sites."}, "communications": {"type": "array", "items": {"anyOf": [{"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "Int64", "description": "The `Int64` scalar type represents non-fractional signed whole numeric values. Int can represent values between PHP_INT_MIN AND PHP_INT_MAX."}, "type": {"type": ["string", "null"], "anyOf": [{"enum": ["UNSPECIFIED"], "title": "A communication for which no type was specified", "description": "A communication for which no type was specified"}, {"enum": ["INITIAL_COMMUNICATION"], "title": "An initial communication containing the invoice and payment information", "description": "An initial communication containing the invoice and payment information"}, {"enum": ["CANCELLATION_COMMUNICATION"], "title": "A cancellation communication containing the cancelled invoice information", "description": "A cancellation communication containing the cancelled invoice information"}, {"enum": ["NETTABLE_REMOVED"], "title": "A communication sent out when the netting status of an invoice is turned off", "description": "A communication sent out when the netting status of an invoice is turned off"}], "description": "Types of different revenue communications."}, "queuedOn": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "emailMessage": {"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "Int64", "description": "The `Int64` scalar type represents non-fractional signed whole numeric values. Int can represent values between PHP_INT_MIN AND PHP_INT_MAX."}}, "description": "An email communication"}}, "description": "A revenue invoice communication"}, {"type": "null"}]}}, "creator": {"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "Int64", "description": "The `Int64` scalar type represents non-fractional signed whole numeric values. Int can represent values between PHP_INT_MIN AND PHP_INT_MAX."}, "type": {"type": ["string", "null"], "anyOf": [{"enum": ["SUPPLIER"], "title": "Supplier type creator", "description": "Supplier type creator"}, {"enum": ["ADMIN_USER"], "title": "Admin user as a creator", "description": "Admin user as a creator"}, {"enum": ["EXTRANET_USER"], "title": "An extranet user as a creator", "description": "An extranet user as a creator"}, {"enum": ["INTERNAL"], "title": "An internal user as a creator", "description": "An internal user as a creator"}], "description": "Enumerates all the types of an AR Invoice creator."}}, "description": "A revenue invoice creator"}, "createdOn": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "effectiveOn": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "isReconciled": {"type": ["boolean", "null"], "title": "Boolean", "description": "The `Boolean` scalar type represents `true` or `false`."}, "reconciledBy": {"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "Int32", "description": "The `Int32` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1."}, "type": {"type": ["string", "null"], "anyOf": [{"enum": ["ADMIN_USER"], "title": "An admin user or employee logged in, having a valid Employee ID", "description": "An admin user or employee logged in, having a valid Employee ID"}, {"enum": ["AP_PAYMENT_PROCESSOR"], "title": "Automated accounts payable payment processor", "description": "Automated accounts payable payment processor"}], "description": "Types of different reconcilers that can potentially perform reconciliation of different AR components"}}, "description": "Represents a AR reconciler entity - who is responsible for reconciling the AR components"}, "nettable": {"type": ["boolean", "null"], "title": "Boolean", "description": "The `Boolean` scalar type represents `true` or `false`."}, "originallyNettable": {"type": ["boolean", "null"], "title": "Boolean", "description": "The `Boolean` scalar type represents `true` or `false`."}, "invoiceAmount": {"type": ["number", "null"], "title": "Float", "description": "The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point)."}, "taxTotalAmount": {"type": ["number", "null"], "title": "Float", "description": "The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point)."}, "invoiceReceipientsEmailAddresses": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "payments": {"type": "array", "items": {"anyOf": [{"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "Int32", "description": "The `Int32` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1."}, "status": {"type": ["string", "null"], "anyOf": [{"enum": ["NEW"], "title": "Recently created or unprocessed", "description": "Recently created or unprocessed"}, {"enum": ["PARTIALLY_MATCHED"], "title": "Partially matched i.e. still available for reconciliation", "description": "Partially matched i.e. still available for reconciliation"}, {"enum": ["FULLY_MATCHED"], "title": "Fully matched i.e. reconciled completely", "description": "Fully matched i.e. reconciled completely"}, {"enum": ["VOID"], "title": "Voided", "description": "Voided"}], "description": "Enumerates all the statuses an AR Payment can be in at any given point."}, "revenueSource": {"type": ["string", "null"], "anyOf": [{"enum": ["B2B"], "title": "Business to business type", "description": "Business to business type"}, {"enum": ["CASTLEGATE"], "title": "Castlegate or fulfillment services", "description": "Castlegate or fulfillment services"}, {"enum": ["SPONSORED_PRODUCTS"], "title": "Sponsored products type", "description": "Sponsored products type"}, {"enum": ["MAAS_MEDIA"], "title": "Maas media type", "description": "Maas media type"}, {"enum": ["LIQUIDATION"], "title": "Liquidation type", "description": "Liquidation type"}, {"enum": ["GIFT_CARD"], "title": "Gift card type", "description": "Gift card type"}], "description": "Types of different revenue sources or streams."}, "amount": {"type": ["number", "null"], "title": "Float", "description": "The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point)."}, "currency": {"type": ["string", "null"], "anyOf": [{"enum": ["US_DOLLAR"], "title": "US Dollar", "description": "US Dollar"}, {"enum": ["BRITISH_POUND"], "title": "British Pound", "description": "British Pound"}, {"enum": ["EURO"], "title": "Euro", "description": "Euro"}, {"enum": ["CANADIAN_DOLLAR"], "title": "Canadian Dollar", "description": "Canadian Dollar"}, {"enum": ["AUSTRALIAN_DOLLAR"], "title": "Australian Dollar", "description": "Australian Dollar"}], "description": "Types of currency"}, "reference": {"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "Int64", "description": "The `Int64` scalar type represents non-fractional signed whole numeric values. Int can represent values between PHP_INT_MIN AND PHP_INT_MAX."}, "type": {"type": ["string", "null"], "anyOf": [{"enum": ["SELF"], "title": "Self if the payment was created directly by itself and there is no external reference", "description": "Self if the payment was created directly by itself and there is no external reference"}, {"enum": ["CLASSIFICATION_TOOL"], "title": "An admin classification tool", "description": "An admin classification tool"}, {"enum": ["AP_VOUCHER"], "title": "An accounts payable voucher or payment that was cut for a vendor to pay our AP balances", "description": "An accounts payable voucher or payment that was cut for a vendor to pay our AP balances"}, {"enum": ["CREDIT_MEMO"], "title": "A credit to the vendor", "description": "A credit to the vendor"}], "description": "Enumerates all the references types an AR payment can have."}}, "description": "Represents a reference or an origination of an AR payment. An AR payment can refer to an outside payment or simply to itself"}, "payer": {"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "Int64", "description": "The `Int64` scalar type represents non-fractional signed whole numeric values. Int can represent values between PHP_INT_MIN AND PHP_INT_MAX."}, "type": {"type": ["string", "null"], "anyOf": [{"enum": ["SUPPLIER"], "title": "Supplier as a payer of an AR Payment", "description": "Supplier as a payer of an AR Payment"}, {"enum": ["AP_VOUCHER"], "title": "AP Voucher as a payer of an AR Payment", "description": "AP Voucher as a payer of an AR Payment"}, {"enum": ["CUSTOMER"], "title": "Customer as a payer of an AR Payment", "description": "Customer as a payer of an AR Payment"}, {"enum": ["FULFILLMENT_CUSTOMER"], "title": "Fulfillment customer as a payer of an AR Payment", "description": "Fulfillment customer as a payer of an AR Payment"}], "description": "Enumerates all types of payers that can make an AR payment."}}, "description": "Represents an entity that uses Wayfair's services and pays for them"}, "createdOn": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "description": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "matchedAmount": {"type": ["number", "null"], "title": "Float", "description": "The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point)."}, "isReconciled": {"type": ["boolean", "null"], "title": "Boolean", "description": "The `Boolean` scalar type represents `true` or `false`."}, "reconciledOn": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "reconciledBy": {"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "Int32", "description": "The `Int32` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1."}, "type": {"type": ["string", "null"], "anyOf": [{"enum": ["ADMIN_USER"], "title": "An admin user or employee logged in, having a valid Employee ID", "description": "An admin user or employee logged in, having a valid Employee ID"}, {"enum": ["AP_PAYMENT_PROCESSOR"], "title": "Automated accounts payable payment processor", "description": "Automated accounts payable payment processor"}], "description": "Types of different reconcilers that can potentially perform reconciliation of different AR components"}}, "description": "Represents a AR reconciler entity - who is responsible for reconciling the AR components"}}, "description": "Accounts Receivable Payment entity which depicts a payment that we have realized as a \"Revenue\" and which we could have received from different revenue streams or sources."}, {"type": "null"}]}}, "isCreditMemo": {"type": ["boolean", "null"], "title": "Boolean", "description": "The `Boolean` scalar type represents `true` or `false`."}, "creditMemos": {"type": "array", "items": {"anyOf": [{"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "Int32", "description": "The `Int32` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1."}, "description": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "status": {"type": ["string", "null"], "anyOf": [{"enum": ["NEW"], "title": "Recently created or unprocessed", "description": "Recently created or unprocessed"}, {"enum": ["PENDING_APPROVAL"], "title": "Sent for approval but not approved yet", "description": "Sent for approval but not approved yet"}, {"enum": ["APPROVED"], "title": "Approved by the requested approver", "description": "Approved by the requested approver"}, {"enum": ["SENT_TO_RECIPIENT"], "title": "Sent to the intended recipient(s)", "description": "Sent to the intended recipient(s)"}, {"enum": ["PENDING_PAYMENT"], "title": "Is waiting for payment or to be reconciled", "description": "Is waiting for payment or to be reconciled"}, {"enum": ["PARTIALLY_PAID"], "title": "Is partially paid for and still to be matched against payment(s)", "description": "Is partially paid for and still to be matched against payment(s)"}, {"enum": ["FULLY_PAID"], "title": "Is fully paid for and matched/reconciled against payment(s)", "description": "Is fully paid for and matched/reconciled against payment(s)"}, {"enum": ["REJECTED"], "title": "Rejected in the process of approval", "description": "Rejected in the process of approval"}, {"enum": ["CANCELLED"], "title": "Cancelled due to some reason", "description": "Cancelled due to some reason"}], "description": "Enumerates all the statuses an AR Invoice can be in at any given point."}, "revenueSource": {"type": ["string", "null"], "anyOf": [{"enum": ["B2B"], "title": "Business to business type", "description": "Business to business type"}, {"enum": ["CASTLEGATE"], "title": "Castlegate or fulfillment services", "description": "Castlegate or fulfillment services"}, {"enum": ["SPONSORED_PRODUCTS"], "title": "Sponsored products type", "description": "Sponsored products type"}, {"enum": ["MAAS_MEDIA"], "title": "Maas media type", "description": "Maas media type"}, {"enum": ["LIQUIDATION"], "title": "Liquidation type", "description": "Liquidation type"}, {"enum": ["GIFT_CARD"], "title": "Gift card type", "description": "Gift card type"}], "description": "Types of different revenue sources or streams."}, "dueBy": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "paidOn": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "currency": {"type": ["string", "null"], "anyOf": [{"enum": ["US_DOLLAR"], "title": "US Dollar", "description": "US Dollar"}, {"enum": ["BRITISH_POUND"], "title": "British Pound", "description": "British Pound"}, {"enum": ["EURO"], "title": "Euro", "description": "Euro"}, {"enum": ["CANADIAN_DOLLAR"], "title": "Canadian Dollar", "description": "Canadian Dollar"}, {"enum": ["AUSTRALIAN_DOLLAR"], "title": "Australian Dollar", "description": "Australian Dollar"}], "description": "Types of currency"}, "invoiceAmount": {"type": ["number", "null"], "title": "Float", "description": "The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point)."}, "taxTotalAmount": {"type": ["number", "null"], "title": "Float", "description": "The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point)."}, "originalInvoiceTotalAmount": {"type": ["number", "null"], "title": "Float", "description": "The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point)."}, "originalTaxTotalAmount": {"type": ["number", "null"], "title": "Float", "description": "The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point)."}, "paidAmount": {"type": ["number", "null"], "title": "Float", "description": "The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point)."}, "dueAmount": {"type": ["number", "null"], "title": "Float", "description": "The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point)."}, "documents": {"type": "array", "items": {"anyOf": [{"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "Int32", "description": "The `Int32` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1."}, "name": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "createdOn": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "type": {"type": ["string", "null"], "anyOf": [{"enum": ["pdf"], "title": "PDF form of an AR Invoice", "description": "PDF form of an AR Invoice"}, {"enum": ["csv"], "title": "CSV form of an AR Invoice", "description": "CSV form of an AR Invoice"}], "description": "Types of tangible readable AR Invoice document"}, "path": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "remoteStorageDownloadAdminUrl": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "remoteStoragePath": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}}, "description": "A document related to an AR Invoice"}, {"type": "null"}]}}, "communications": {"type": "array", "items": {"anyOf": [{"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "Int64", "description": "The `Int64` scalar type represents non-fractional signed whole numeric values. Int can represent values between PHP_INT_MIN AND PHP_INT_MAX."}, "type": {"type": ["string", "null"], "anyOf": [{"enum": ["UNSPECIFIED"], "title": "A communication for which no type was specified", "description": "A communication for which no type was specified"}, {"enum": ["INITIAL_COMMUNICATION"], "title": "An initial communication containing the invoice and payment information", "description": "An initial communication containing the invoice and payment information"}, {"enum": ["CANCELLATION_COMMUNICATION"], "title": "A cancellation communication containing the cancelled invoice information", "description": "A cancellation communication containing the cancelled invoice information"}, {"enum": ["NETTABLE_REMOVED"], "title": "A communication sent out when the netting status of an invoice is turned off", "description": "A communication sent out when the netting status of an invoice is turned off"}], "description": "Types of different revenue communications."}, "queuedOn": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "emailMessage": {"type": ["object", "string", "null"], "description": "An email communication"}}, "description": "A revenue invoice communication"}, {"type": "null"}]}}, "creator": {"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "Int64", "description": "The `Int64` scalar type represents non-fractional signed whole numeric values. Int can represent values between PHP_INT_MIN AND PHP_INT_MAX."}, "type": {"type": ["string", "null"], "anyOf": [{"enum": ["SUPPLIER"], "title": "Supplier type creator", "description": "Supplier type creator"}, {"enum": ["ADMIN_USER"], "title": "Admin user as a creator", "description": "Admin user as a creator"}, {"enum": ["EXTRANET_USER"], "title": "An extranet user as a creator", "description": "An extranet user as a creator"}, {"enum": ["INTERNAL"], "title": "An internal user as a creator", "description": "An internal user as a creator"}], "description": "Enumerates all the types of an AR Invoice creator."}}, "description": "A revenue invoice creator"}, "createdOn": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "effectiveOn": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "isReconciled": {"type": ["boolean", "null"], "title": "Boolean", "description": "The `Boolean` scalar type represents `true` or `false`."}, "reconciledBy": {"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "Int32", "description": "The `Int32` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1."}, "type": {"type": ["string", "null"], "anyOf": [{"enum": ["ADMIN_USER"], "title": "An admin user or employee logged in, having a valid Employee ID", "description": "An admin user or employee logged in, having a valid Employee ID"}, {"enum": ["AP_PAYMENT_PROCESSOR"], "title": "Automated accounts payable payment processor", "description": "Automated accounts payable payment processor"}], "description": "Types of different reconcilers that can potentially perform reconciliation of different AR components"}}, "description": "Represents a AR reconciler entity - who is responsible for reconciling the AR components"}, "nettable": {"type": ["boolean", "null"], "title": "Boolean", "description": "The `Boolean` scalar type represents `true` or `false`."}, "originallyNettable": {"type": ["boolean", "null"], "title": "Boolean", "description": "The `Boolean` scalar type represents `true` or `false`."}, "invoiceReceipientsEmailAddresses": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "payments": {"type": "array", "items": {"anyOf": [{"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "Int32", "description": "The `Int32` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1."}, "status": {"type": ["string", "null"], "anyOf": [{"enum": ["NEW"], "title": "Recently created or unprocessed", "description": "Recently created or unprocessed"}, {"enum": ["PARTIALLY_MATCHED"], "title": "Partially matched i.e. still available for reconciliation", "description": "Partially matched i.e. still available for reconciliation"}, {"enum": ["FULLY_MATCHED"], "title": "Fully matched i.e. reconciled completely", "description": "Fully matched i.e. reconciled completely"}, {"enum": ["VOID"], "title": "Voided", "description": "Voided"}], "description": "Enumerates all the statuses an AR Payment can be in at any given point."}, "revenueSource": {"type": ["string", "null"], "anyOf": [{"enum": ["B2B"], "title": "Business to business type", "description": "Business to business type"}, {"enum": ["CASTLEGATE"], "title": "Castlegate or fulfillment services", "description": "Castlegate or fulfillment services"}, {"enum": ["SPONSORED_PRODUCTS"], "title": "Sponsored products type", "description": "Sponsored products type"}, {"enum": ["MAAS_MEDIA"], "title": "Maas media type", "description": "Maas media type"}, {"enum": ["LIQUIDATION"], "title": "Liquidation type", "description": "Liquidation type"}, {"enum": ["GIFT_CARD"], "title": "Gift card type", "description": "Gift card type"}], "description": "Types of different revenue sources or streams."}, "amount": {"type": ["number", "null"], "title": "Float", "description": "The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point)."}, "currency": {"type": ["string", "null"], "anyOf": [{"enum": ["US_DOLLAR"], "title": "US Dollar", "description": "US Dollar"}, {"enum": ["BRITISH_POUND"], "title": "British Pound", "description": "British Pound"}, {"enum": ["EURO"], "title": "Euro", "description": "Euro"}, {"enum": ["CANADIAN_DOLLAR"], "title": "Canadian Dollar", "description": "Canadian Dollar"}, {"enum": ["AUSTRALIAN_DOLLAR"], "title": "Australian Dollar", "description": "Australian Dollar"}], "description": "Types of currency"}, "reference": {"type": ["object", "string", "null"], "description": "Represents a reference or an origination of an AR payment. An AR payment can refer to an outside payment or simply to itself"}, "payer": {"type": ["object", "string", "null"], "description": "Represents an entity that uses Wayfair's services and pays for them"}, "createdOn": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "description": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "matchedAmount": {"type": ["number", "null"], "title": "Float", "description": "The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point)."}, "isReconciled": {"type": ["boolean", "null"], "title": "Boolean", "description": "The `Boolean` scalar type represents `true` or `false`."}, "reconciledOn": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "reconciledBy": {"type": ["object", "string", "null"], "description": "Represents a AR reconciler entity - who is responsible for reconciling the AR components"}}, "description": "Accounts Receivable Payment entity which depicts a payment that we have realized as a \"Revenue\" and which we could have received from different revenue streams or sources."}, {"type": "null"}]}}, "isCreditMemo": {"type": ["boolean", "null"], "title": "Boolean", "description": "The `Boolean` scalar type represents `true` or `false`."}, "statusUpdateLogs": {"type": "array", "items": {"anyOf": [{"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "Int64", "description": "The `Int64` scalar type represents non-fractional signed whole numeric values. Int can represent values between PHP_INT_MIN AND PHP_INT_MAX."}, "fromStatus": {"type": ["string", "null"], "anyOf": [{"enum": ["NEW"], "title": "Recently created or unprocessed", "description": "Recently created or unprocessed"}, {"enum": ["PENDING_APPROVAL"], "title": "Sent for approval but not approved yet", "description": "Sent for approval but not approved yet"}, {"enum": ["APPROVED"], "title": "Approved by the requested approver", "description": "Approved by the requested approver"}, {"enum": ["SENT_TO_RECIPIENT"], "title": "Sent to the intended recipient(s)", "description": "Sent to the intended recipient(s)"}, {"enum": ["PENDING_PAYMENT"], "title": "Is waiting for payment or to be reconciled", "description": "Is waiting for payment or to be reconciled"}, {"enum": ["PARTIALLY_PAID"], "title": "Is partially paid for and still to be matched against payment(s)", "description": "Is partially paid for and still to be matched against payment(s)"}, {"enum": ["FULLY_PAID"], "title": "Is fully paid for and matched/reconciled against payment(s)", "description": "Is fully paid for and matched/reconciled against payment(s)"}, {"enum": ["REJECTED"], "title": "Rejected in the process of approval", "description": "Rejected in the process of approval"}, {"enum": ["CANCELLED"], "title": "Cancelled due to some reason", "description": "Cancelled due to some reason"}], "description": "Enumerates all the statuses an AR Invoice can be in at any given point."}, "toStatus": {"type": ["string", "null"], "anyOf": [{"enum": ["NEW"], "title": "Recently created or unprocessed", "description": "Recently created or unprocessed"}, {"enum": ["PENDING_APPROVAL"], "title": "Sent for approval but not approved yet", "description": "Sent for approval but not approved yet"}, {"enum": ["APPROVED"], "title": "Approved by the requested approver", "description": "Approved by the requested approver"}, {"enum": ["SENT_TO_RECIPIENT"], "title": "Sent to the intended recipient(s)", "description": "Sent to the intended recipient(s)"}, {"enum": ["PENDING_PAYMENT"], "title": "Is waiting for payment or to be reconciled", "description": "Is waiting for payment or to be reconciled"}, {"enum": ["PARTIALLY_PAID"], "title": "Is partially paid for and still to be matched against payment(s)", "description": "Is partially paid for and still to be matched against payment(s)"}, {"enum": ["FULLY_PAID"], "title": "Is fully paid for and matched/reconciled against payment(s)", "description": "Is fully paid for and matched/reconciled against payment(s)"}, {"enum": ["REJECTED"], "title": "Rejected in the process of approval", "description": "Rejected in the process of approval"}, {"enum": ["CANCELLED"], "title": "Cancelled due to some reason", "description": "Cancelled due to some reason"}], "description": "Enumerates all the statuses an AR Invoice can be in at any given point."}, "updatedOn": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "updatedBy": {"type": ["object", "string", "null"], "description": "Fetches data for an employee."}}, "description": "Log entry for AR invoice status update"}, {"type": "null"}]}}, "reference": {"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "Int64", "description": "The `Int64` scalar type represents non-fractional signed whole numeric values. Int can represent values between PHP_INT_MIN AND PHP_INT_MAX."}}, "description": "A Reference to External Systems"}}, "description": "Interface for an AR Invoice - this contains all the common properties an AR Invoice should have"}, {"type": "null"}]}}, "statusUpdateLogs": {"type": "array", "items": {"anyOf": [{"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "Int64", "description": "The `Int64` scalar type represents non-fractional signed whole numeric values. Int can represent values between PHP_INT_MIN AND PHP_INT_MAX."}, "fromStatus": {"type": ["string", "null"], "anyOf": [{"enum": ["NEW"], "title": "Recently created or unprocessed", "description": "Recently created or unprocessed"}, {"enum": ["PENDING_APPROVAL"], "title": "Sent for approval but not approved yet", "description": "Sent for approval but not approved yet"}, {"enum": ["APPROVED"], "title": "Approved by the requested approver", "description": "Approved by the requested approver"}, {"enum": ["SENT_TO_RECIPIENT"], "title": "Sent to the intended recipient(s)", "description": "Sent to the intended recipient(s)"}, {"enum": ["PENDING_PAYMENT"], "title": "Is waiting for payment or to be reconciled", "description": "Is waiting for payment or to be reconciled"}, {"enum": ["PARTIALLY_PAID"], "title": "Is partially paid for and still to be matched against payment(s)", "description": "Is partially paid for and still to be matched against payment(s)"}, {"enum": ["FULLY_PAID"], "title": "Is fully paid for and matched/reconciled against payment(s)", "description": "Is fully paid for and matched/reconciled against payment(s)"}, {"enum": ["REJECTED"], "title": "Rejected in the process of approval", "description": "Rejected in the process of approval"}, {"enum": ["CANCELLED"], "title": "Cancelled due to some reason", "description": "Cancelled due to some reason"}], "description": "Enumerates all the statuses an AR Invoice can be in at any given point."}, "toStatus": {"type": ["string", "null"], "anyOf": [{"enum": ["NEW"], "title": "Recently created or unprocessed", "description": "Recently created or unprocessed"}, {"enum": ["PENDING_APPROVAL"], "title": "Sent for approval but not approved yet", "description": "Sent for approval but not approved yet"}, {"enum": ["APPROVED"], "title": "Approved by the requested approver", "description": "Approved by the requested approver"}, {"enum": ["SENT_TO_RECIPIENT"], "title": "Sent to the intended recipient(s)", "description": "Sent to the intended recipient(s)"}, {"enum": ["PENDING_PAYMENT"], "title": "Is waiting for payment or to be reconciled", "description": "Is waiting for payment or to be reconciled"}, {"enum": ["PARTIALLY_PAID"], "title": "Is partially paid for and still to be matched against payment(s)", "description": "Is partially paid for and still to be matched against payment(s)"}, {"enum": ["FULLY_PAID"], "title": "Is fully paid for and matched/reconciled against payment(s)", "description": "Is fully paid for and matched/reconciled against payment(s)"}, {"enum": ["REJECTED"], "title": "Rejected in the process of approval", "description": "Rejected in the process of approval"}, {"enum": ["CANCELLED"], "title": "Cancelled due to some reason", "description": "Cancelled due to some reason"}], "description": "Enumerates all the statuses an AR Invoice can be in at any given point."}, "updatedOn": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "updatedBy": {"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "ID", "description": "The `ID` scalar type represents a unique identifier, often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\"4\"`) or integer (such as `4`) input value will be accepted as an ID."}, "firstName": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "middleName": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "lastName": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "fullName": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "userName": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "nickname": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "displayLastName": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "email": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "samAccountName": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "isActive": {"type": ["boolean", "null"], "title": "Boolean", "description": "The `Boolean` scalar type represents `true` or `false`."}, "birthday": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "seniorityDate": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "startDate": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "forecastEndDate": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "terminationDate": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "isUnlimitedContract": {"type": ["boolean", "null"], "title": "Boolean", "description": "The `Boolean` scalar type represents `true` or `false`."}, "isEngineer": {"type": ["boolean", "null"], "title": "Boolean", "description": "The `Boolean` scalar type represents `true` or `false`."}, "worksOnSoftware": {"type": ["boolean", "null"], "title": "Boolean", "description": "The `Boolean` scalar type represents `true` or `false`."}, "title": {"type": ["object", "string", "null"], "description": "Wayfair job titles"}, "profile": {"type": ["object", "string", "null"], "description": "Profile information of an employee (ex: Massachusetts Employee, German Employee)"}, "type": {"type": ["object", "string", "null"], "description": "Wayfair employee categories (ex: intern, contract, full time)"}, "location": {"type": ["object", "string", "null"], "description": "Wayfair employee location (ex Copley Boston)"}, "phoneExtension": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "manager": {"type": ["object", "string", "null"], "description": "Fetches data for an employee."}, "workgroup": {"type": ["object", "string", "null"], "description": "Wayfair workgroup information"}, "processedByEmployee": {"type": ["object", "string", "null"], "description": "Fetches data for an employee."}, "directReports": {"type": "array", "items": {"anyOf": [{"type": ["object", "string", "null"], "description": "Fetches data for an employee."}, {"type": "null"}]}}}, "description": "Fetches data for an employee."}}, "description": "Log entry for AR invoice status update"}, {"type": "null"}]}}, "reference": {"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "Int64", "description": "The `Int64` scalar type represents non-fractional signed whole numeric values. Int can represent values between PHP_INT_MIN AND PHP_INT_MAX."}}, "description": "A Reference to External Systems"}}, "description": "Liquidation Type of AR invoice which has all the properties of an AR invoice along with Liquidation specific details"}, "LiquidationArInvoiceDetail": {"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "Int64", "description": "The `Int64` scalar type represents non-fractional signed whole numeric values. Int can represent values between PHP_INT_MIN AND PHP_INT_MAX."}, "quantity": {"type": ["number", "null"], "title": "Float", "description": "The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point)."}, "unitAmount": {"type": ["number", "null"], "title": "Float", "description": "The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point)."}, "itemAmount": {"type": ["number", "null"], "title": "Float", "description": "The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point)."}, "description": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "taxes": {"type": "array", "items": {"anyOf": [{"type": ["object", "string", "null"], "properties": {"type": {"type": ["string", "null"], "anyOf": [{"enum": ["SalesTax"], "title": "Sales Tax", "description": "Sales Tax"}, {"enum": ["SellersUseTax"], "title": "Sellers Use Tax", "description": "Sellers Use Tax"}, {"enum": ["EcoFee"], "title": "Eco Fee", "description": "Eco Fee"}, {"enum": ["SHP"], "title": "Shipment Tax", "description": "Shipment Tax"}, {"enum": ["GST"], "title": "GST Tax", "description": "GST Tax"}, {"enum": ["PST"], "title": "PST Tax", "description": "PST Tax"}, {"enum": ["QST"], "title": "QST Tax", "description": "QST Tax"}, {"enum": ["HST"], "title": "HST Tax", "description": "HST Tax"}, {"enum": ["VAT"], "title": "VAT Tax", "description": "VAT Tax"}, {"enum": ["NA"], "title": "Not Available", "description": "Not Available"}], "description": "An enumeration of Tax Types"}, "value": {"type": ["number", "null"], "title": "Float", "description": "The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point)."}}, "description": "The calculated tax amounts per type"}, {"type": "null"}]}}}, "description": "Invoice line item detail of Liquidation AR Invoice type"}, "CachedInternationalStockPurchaseOrder": {"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "ID", "description": "The `ID` scalar type represents a unique identifier, often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\"4\"`) or integer (such as `4`) input value will be accepted as an ID."}, "serviceLevel": {"type": ["string", "null"], "anyOf": [{"enum": ["NGS"], "title": "NGS", "description": "NGS"}, {"enum": ["NVO"], "title": "NVO", "description": "NVO"}, {"enum": ["DRA"], "title": "DRA", "description": "DRA"}, {"enum": ["NRV"], "title": "NRV", "description": "NRV"}, {"enum": ["BCO"], "title": "BCO", "description": "BCO"}, {"enum": ["ACN"], "title": "ACN", "description": "ACN"}, {"enum": ["ACI"], "title": "ACI", "description": "ACI"}, {"enum": ["OND"], "title": "OND", "description": "OND"}], "description": "Enumeration of Stock Purchase Order Service Level Types"}}, "description": "Cached information related to International Stock Purchase Orders, specifically service levels"}, "InternationalStockPurchaseOrderReturnType": {"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "ID", "description": "The `ID` scalar type represents a unique identifier, often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\"4\"`) or integer (such as `4`) input value will be accepted as an ID."}, "serviceLevel": {"type": ["string", "null"], "anyOf": [{"enum": ["NGS"], "title": "NGS", "description": "NGS"}, {"enum": ["NVO"], "title": "NVO", "description": "NVO"}, {"enum": ["DRA"], "title": "DRA", "description": "DRA"}, {"enum": ["NRV"], "title": "NRV", "description": "NRV"}, {"enum": ["BCO"], "title": "BCO", "description": "BCO"}, {"enum": ["ACN"], "title": "ACN", "description": "ACN"}, {"enum": ["ACI"], "title": "ACI", "description": "ACI"}, {"enum": ["OND"], "title": "OND", "description": "OND"}], "description": "Enumeration of Stock Purchase Order Service Level Types"}}, "description": "Return type for updating international stock purchase orders"}, "StockPurchaseOrderServiceLevelType": {"type": ["string", "null"], "anyOf": [{"enum": ["NGS"], "title": "NGS", "description": "NGS"}, {"enum": ["NVO"], "title": "NVO", "description": "NVO"}, {"enum": ["DRA"], "title": "DRA", "description": "DRA"}, {"enum": ["NRV"], "title": "NRV", "description": "NRV"}, {"enum": ["BCO"], "title": "BCO", "description": "BCO"}, {"enum": ["ACN"], "title": "ACN", "description": "ACN"}, {"enum": ["ACI"], "title": "ACI", "description": "ACI"}, {"enum": ["OND"], "title": "OND", "description": "OND"}], "description": "Enumeration of Stock Purchase Order Service Level Types"}, "GiftCardArInvoice": {"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "Int32", "description": "The `Int32` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1."}, "description": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "status": {"type": ["string", "null"], "anyOf": [{"enum": ["NEW"], "title": "Recently created or unprocessed", "description": "Recently created or unprocessed"}, {"enum": ["PENDING_APPROVAL"], "title": "Sent for approval but not approved yet", "description": "Sent for approval but not approved yet"}, {"enum": ["APPROVED"], "title": "Approved by the requested approver", "description": "Approved by the requested approver"}, {"enum": ["SENT_TO_RECIPIENT"], "title": "Sent to the intended recipient(s)", "description": "Sent to the intended recipient(s)"}, {"enum": ["PENDING_PAYMENT"], "title": "Is waiting for payment or to be reconciled", "description": "Is waiting for payment or to be reconciled"}, {"enum": ["PARTIALLY_PAID"], "title": "Is partially paid for and still to be matched against payment(s)", "description": "Is partially paid for and still to be matched against payment(s)"}, {"enum": ["FULLY_PAID"], "title": "Is fully paid for and matched/reconciled against payment(s)", "description": "Is fully paid for and matched/reconciled against payment(s)"}, {"enum": ["REJECTED"], "title": "Rejected in the process of approval", "description": "Rejected in the process of approval"}, {"enum": ["CANCELLED"], "title": "Cancelled due to some reason", "description": "Cancelled due to some reason"}], "description": "Enumerates all the statuses an AR Invoice can be in at any given point."}, "revenueSource": {"type": ["string", "null"], "anyOf": [{"enum": ["B2B"], "title": "Business to business type", "description": "Business to business type"}, {"enum": ["CASTLEGATE"], "title": "Castlegate or fulfillment services", "description": "Castlegate or fulfillment services"}, {"enum": ["SPONSORED_PRODUCTS"], "title": "Sponsored products type", "description": "Sponsored products type"}, {"enum": ["MAAS_MEDIA"], "title": "Maas media type", "description": "Maas media type"}, {"enum": ["LIQUIDATION"], "title": "Liquidation type", "description": "Liquidation type"}, {"enum": ["GIFT_CARD"], "title": "Gift card type", "description": "Gift card type"}], "description": "Types of different revenue sources or streams."}, "dueBy": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "paidOn": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "currency": {"type": ["string", "null"], "anyOf": [{"enum": ["US_DOLLAR"], "title": "US Dollar", "description": "US Dollar"}, {"enum": ["BRITISH_POUND"], "title": "British Pound", "description": "British Pound"}, {"enum": ["EURO"], "title": "Euro", "description": "Euro"}, {"enum": ["CANADIAN_DOLLAR"], "title": "Canadian Dollar", "description": "Canadian Dollar"}, {"enum": ["AUSTRALIAN_DOLLAR"], "title": "Australian Dollar", "description": "Australian Dollar"}], "description": "Types of currency"}, "invoiceAmount": {"type": ["number", "null"], "title": "Float", "description": "The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point)."}, "taxTotalAmount": {"type": ["number", "null"], "title": "Float", "description": "The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point)."}, "originalInvoiceTotalAmount": {"type": ["number", "null"], "title": "Float", "description": "The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point)."}, "originalTaxTotalAmount": {"type": ["number", "null"], "title": "Float", "description": "The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point)."}, "paidAmount": {"type": ["number", "null"], "title": "Float", "description": "The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point)."}, "dueAmount": {"type": ["number", "null"], "title": "Float", "description": "The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point)."}, "customer": {"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "ID", "description": "The `ID` scalar type represents a unique identifier, often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\"4\"`) or integer (such as `4`) input value will be accepted as an ID."}, "firstName": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "lastName": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "postalCode": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "email": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "contactAtPhone": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}}, "description": "A customer"}, "orderCategory": {"type": ["string", "null"], "anyOf": [{"enum": ["BRAND"], "title": "Brand", "description": "Brand"}, {"enum": ["OFFICE_SUPPLIES"], "title": "Office Supplies/Equipment", "description": "Office Supplies/Equipment"}, {"enum": ["PHOTO_STUDIO"], "title": "Photo Studio", "description": "Photo Studio"}, {"enum": ["PUBLIC_RELATIONS"], "title": "Public Relations", "description": "Public Relations"}, {"enum": ["SAMPLE_COST"], "title": "Public Relations", "description": "Public Relations"}, {"enum": ["TRIED_AND_TRUE_MARKETING"], "title": "Tried and True Marketing", "description": "Tried and True Marketing"}, {"enum": ["CONTENT"], "title": "Content", "description": "Content"}], "description": "Enumerates all of the order categories for Gift Card Ar Invoices"}, "details": {"type": "array", "items": {"anyOf": [{"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "Int64", "description": "The `Int64` scalar type represents non-fractional signed whole numeric values. Int can represent values between PHP_INT_MIN AND PHP_INT_MAX."}, "quantity": {"type": ["number", "null"], "title": "Float", "description": "The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point)."}, "unitAmount": {"type": ["number", "null"], "title": "Float", "description": "The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point)."}, "itemAmount": {"type": ["number", "null"], "title": "Float", "description": "The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point)."}, "description": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "taxes": {"type": "array", "items": {"anyOf": [{"type": ["object", "string", "null"], "properties": {"type": {"type": ["string", "null"], "anyOf": [{"enum": ["SalesTax"], "title": "Sales Tax", "description": "Sales Tax"}, {"enum": ["SellersUseTax"], "title": "Sellers Use Tax", "description": "Sellers Use Tax"}, {"enum": ["EcoFee"], "title": "Eco Fee", "description": "Eco Fee"}, {"enum": ["SHP"], "title": "Shipment Tax", "description": "Shipment Tax"}, {"enum": ["GST"], "title": "GST Tax", "description": "GST Tax"}, {"enum": ["PST"], "title": "PST Tax", "description": "PST Tax"}, {"enum": ["QST"], "title": "QST Tax", "description": "QST Tax"}, {"enum": ["HST"], "title": "HST Tax", "description": "HST Tax"}, {"enum": ["VAT"], "title": "VAT Tax", "description": "VAT Tax"}, {"enum": ["NA"], "title": "Not Available", "description": "Not Available"}], "description": "An enumeration of Tax Types"}, "value": {"type": ["number", "null"], "title": "Float", "description": "The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point)."}}, "description": "The calculated tax amounts per type"}, {"type": "null"}]}}}, "description": "Detail of an AR Invoice - this contains all the common properties an invoice detail/line item should have"}, {"type": "null"}]}}, "documents": {"type": "array", "items": {"anyOf": [{"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "Int32", "description": "The `Int32` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1."}, "name": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "createdOn": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "type": {"type": ["string", "null"], "anyOf": [{"enum": ["pdf"], "title": "PDF form of an AR Invoice", "description": "PDF form of an AR Invoice"}, {"enum": ["csv"], "title": "CSV form of an AR Invoice", "description": "CSV form of an AR Invoice"}], "description": "Types of tangible readable AR Invoice document"}, "path": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "remoteStorageDownloadAdminUrl": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "remoteStoragePath": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}}, "description": "A document related to an AR Invoice"}, {"type": "null"}]}}, "communications": {"type": "array", "items": {"anyOf": [{"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "Int64", "description": "The `Int64` scalar type represents non-fractional signed whole numeric values. Int can represent values between PHP_INT_MIN AND PHP_INT_MAX."}, "type": {"type": ["string", "null"], "anyOf": [{"enum": ["UNSPECIFIED"], "title": "A communication for which no type was specified", "description": "A communication for which no type was specified"}, {"enum": ["INITIAL_COMMUNICATION"], "title": "An initial communication containing the invoice and payment information", "description": "An initial communication containing the invoice and payment information"}, {"enum": ["CANCELLATION_COMMUNICATION"], "title": "A cancellation communication containing the cancelled invoice information", "description": "A cancellation communication containing the cancelled invoice information"}, {"enum": ["NETTABLE_REMOVED"], "title": "A communication sent out when the netting status of an invoice is turned off", "description": "A communication sent out when the netting status of an invoice is turned off"}], "description": "Types of different revenue communications."}, "queuedOn": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "emailMessage": {"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "Int64", "description": "The `Int64` scalar type represents non-fractional signed whole numeric values. Int can represent values between PHP_INT_MIN AND PHP_INT_MAX."}}, "description": "An email communication"}}, "description": "A revenue invoice communication"}, {"type": "null"}]}}, "creator": {"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "Int64", "description": "The `Int64` scalar type represents non-fractional signed whole numeric values. Int can represent values between PHP_INT_MIN AND PHP_INT_MAX."}, "type": {"type": ["string", "null"], "anyOf": [{"enum": ["SUPPLIER"], "title": "Supplier type creator", "description": "Supplier type creator"}, {"enum": ["ADMIN_USER"], "title": "Admin user as a creator", "description": "Admin user as a creator"}, {"enum": ["EXTRANET_USER"], "title": "An extranet user as a creator", "description": "An extranet user as a creator"}, {"enum": ["INTERNAL"], "title": "An internal user as a creator", "description": "An internal user as a creator"}], "description": "Enumerates all the types of an AR Invoice creator."}}, "description": "A revenue invoice creator"}, "createdOn": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "effectiveOn": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "isReconciled": {"type": ["boolean", "null"], "title": "Boolean", "description": "The `Boolean` scalar type represents `true` or `false`."}, "reconciledBy": {"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "Int32", "description": "The `Int32` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1."}, "type": {"type": ["string", "null"], "anyOf": [{"enum": ["ADMIN_USER"], "title": "An admin user or employee logged in, having a valid Employee ID", "description": "An admin user or employee logged in, having a valid Employee ID"}, {"enum": ["AP_PAYMENT_PROCESSOR"], "title": "Automated accounts payable payment processor", "description": "Automated accounts payable payment processor"}], "description": "Types of different reconcilers that can potentially perform reconciliation of different AR components"}}, "description": "Represents a AR reconciler entity - who is responsible for reconciling the AR components"}, "nettable": {"type": ["boolean", "null"], "title": "Boolean", "description": "The `Boolean` scalar type represents `true` or `false`."}, "originallyNettable": {"type": ["boolean", "null"], "title": "Boolean", "description": "The `Boolean` scalar type represents `true` or `false`."}, "invoiceReceipientsEmailAddresses": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "payments": {"type": "array", "items": {"anyOf": [{"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "Int32", "description": "The `Int32` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1."}, "status": {"type": ["string", "null"], "anyOf": [{"enum": ["NEW"], "title": "Recently created or unprocessed", "description": "Recently created or unprocessed"}, {"enum": ["PARTIALLY_MATCHED"], "title": "Partially matched i.e. still available for reconciliation", "description": "Partially matched i.e. still available for reconciliation"}, {"enum": ["FULLY_MATCHED"], "title": "Fully matched i.e. reconciled completely", "description": "Fully matched i.e. reconciled completely"}, {"enum": ["VOID"], "title": "Voided", "description": "Voided"}], "description": "Enumerates all the statuses an AR Payment can be in at any given point."}, "revenueSource": {"type": ["string", "null"], "anyOf": [{"enum": ["B2B"], "title": "Business to business type", "description": "Business to business type"}, {"enum": ["CASTLEGATE"], "title": "Castlegate or fulfillment services", "description": "Castlegate or fulfillment services"}, {"enum": ["SPONSORED_PRODUCTS"], "title": "Sponsored products type", "description": "Sponsored products type"}, {"enum": ["MAAS_MEDIA"], "title": "Maas media type", "description": "Maas media type"}, {"enum": ["LIQUIDATION"], "title": "Liquidation type", "description": "Liquidation type"}, {"enum": ["GIFT_CARD"], "title": "Gift card type", "description": "Gift card type"}], "description": "Types of different revenue sources or streams."}, "amount": {"type": ["number", "null"], "title": "Float", "description": "The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point)."}, "currency": {"type": ["string", "null"], "anyOf": [{"enum": ["US_DOLLAR"], "title": "US Dollar", "description": "US Dollar"}, {"enum": ["BRITISH_POUND"], "title": "British Pound", "description": "British Pound"}, {"enum": ["EURO"], "title": "Euro", "description": "Euro"}, {"enum": ["CANADIAN_DOLLAR"], "title": "Canadian Dollar", "description": "Canadian Dollar"}, {"enum": ["AUSTRALIAN_DOLLAR"], "title": "Australian Dollar", "description": "Australian Dollar"}], "description": "Types of currency"}, "reference": {"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "Int64", "description": "The `Int64` scalar type represents non-fractional signed whole numeric values. Int can represent values between PHP_INT_MIN AND PHP_INT_MAX."}, "type": {"type": ["string", "null"], "anyOf": [{"enum": ["SELF"], "title": "Self if the payment was created directly by itself and there is no external reference", "description": "Self if the payment was created directly by itself and there is no external reference"}, {"enum": ["CLASSIFICATION_TOOL"], "title": "An admin classification tool", "description": "An admin classification tool"}, {"enum": ["AP_VOUCHER"], "title": "An accounts payable voucher or payment that was cut for a vendor to pay our AP balances", "description": "An accounts payable voucher or payment that was cut for a vendor to pay our AP balances"}, {"enum": ["CREDIT_MEMO"], "title": "A credit to the vendor", "description": "A credit to the vendor"}], "description": "Enumerates all the references types an AR payment can have."}}, "description": "Represents a reference or an origination of an AR payment. An AR payment can refer to an outside payment or simply to itself"}, "payer": {"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "Int64", "description": "The `Int64` scalar type represents non-fractional signed whole numeric values. Int can represent values between PHP_INT_MIN AND PHP_INT_MAX."}, "type": {"type": ["string", "null"], "anyOf": [{"enum": ["SUPPLIER"], "title": "Supplier as a payer of an AR Payment", "description": "Supplier as a payer of an AR Payment"}, {"enum": ["AP_VOUCHER"], "title": "AP Voucher as a payer of an AR Payment", "description": "AP Voucher as a payer of an AR Payment"}, {"enum": ["CUSTOMER"], "title": "Customer as a payer of an AR Payment", "description": "Customer as a payer of an AR Payment"}, {"enum": ["FULFILLMENT_CUSTOMER"], "title": "Fulfillment customer as a payer of an AR Payment", "description": "Fulfillment customer as a payer of an AR Payment"}], "description": "Enumerates all types of payers that can make an AR payment."}}, "description": "Represents an entity that uses Wayfair's services and pays for them"}, "createdOn": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "description": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "matchedAmount": {"type": ["number", "null"], "title": "Float", "description": "The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point)."}, "isReconciled": {"type": ["boolean", "null"], "title": "Boolean", "description": "The `Boolean` scalar type represents `true` or `false`."}, "reconciledOn": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "reconciledBy": {"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "Int32", "description": "The `Int32` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1."}, "type": {"type": ["string", "null"], "anyOf": [{"enum": ["ADMIN_USER"], "title": "An admin user or employee logged in, having a valid Employee ID", "description": "An admin user or employee logged in, having a valid Employee ID"}, {"enum": ["AP_PAYMENT_PROCESSOR"], "title": "Automated accounts payable payment processor", "description": "Automated accounts payable payment processor"}], "description": "Types of different reconcilers that can potentially perform reconciliation of different AR components"}}, "description": "Represents a AR reconciler entity - who is responsible for reconciling the AR components"}}, "description": "Accounts Receivable Payment entity which depicts a payment that we have realized as a \"Revenue\" and which we could have received from different revenue streams or sources."}, {"type": "null"}]}}, "isCreditMemo": {"type": ["boolean", "null"], "title": "Boolean", "description": "The `Boolean` scalar type represents `true` or `false`."}, "creditMemos": {"type": "array", "items": {"anyOf": [{"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "Int32", "description": "The `Int32` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1."}, "description": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "status": {"type": ["string", "null"], "anyOf": [{"enum": ["NEW"], "title": "Recently created or unprocessed", "description": "Recently created or unprocessed"}, {"enum": ["PENDING_APPROVAL"], "title": "Sent for approval but not approved yet", "description": "Sent for approval but not approved yet"}, {"enum": ["APPROVED"], "title": "Approved by the requested approver", "description": "Approved by the requested approver"}, {"enum": ["SENT_TO_RECIPIENT"], "title": "Sent to the intended recipient(s)", "description": "Sent to the intended recipient(s)"}, {"enum": ["PENDING_PAYMENT"], "title": "Is waiting for payment or to be reconciled", "description": "Is waiting for payment or to be reconciled"}, {"enum": ["PARTIALLY_PAID"], "title": "Is partially paid for and still to be matched against payment(s)", "description": "Is partially paid for and still to be matched against payment(s)"}, {"enum": ["FULLY_PAID"], "title": "Is fully paid for and matched/reconciled against payment(s)", "description": "Is fully paid for and matched/reconciled against payment(s)"}, {"enum": ["REJECTED"], "title": "Rejected in the process of approval", "description": "Rejected in the process of approval"}, {"enum": ["CANCELLED"], "title": "Cancelled due to some reason", "description": "Cancelled due to some reason"}], "description": "Enumerates all the statuses an AR Invoice can be in at any given point."}, "revenueSource": {"type": ["string", "null"], "anyOf": [{"enum": ["B2B"], "title": "Business to business type", "description": "Business to business type"}, {"enum": ["CASTLEGATE"], "title": "Castlegate or fulfillment services", "description": "Castlegate or fulfillment services"}, {"enum": ["SPONSORED_PRODUCTS"], "title": "Sponsored products type", "description": "Sponsored products type"}, {"enum": ["MAAS_MEDIA"], "title": "Maas media type", "description": "Maas media type"}, {"enum": ["LIQUIDATION"], "title": "Liquidation type", "description": "Liquidation type"}, {"enum": ["GIFT_CARD"], "title": "Gift card type", "description": "Gift card type"}], "description": "Types of different revenue sources or streams."}, "dueBy": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "paidOn": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "currency": {"type": ["string", "null"], "anyOf": [{"enum": ["US_DOLLAR"], "title": "US Dollar", "description": "US Dollar"}, {"enum": ["BRITISH_POUND"], "title": "British Pound", "description": "British Pound"}, {"enum": ["EURO"], "title": "Euro", "description": "Euro"}, {"enum": ["CANADIAN_DOLLAR"], "title": "Canadian Dollar", "description": "Canadian Dollar"}, {"enum": ["AUSTRALIAN_DOLLAR"], "title": "Australian Dollar", "description": "Australian Dollar"}], "description": "Types of currency"}, "invoiceAmount": {"type": ["number", "null"], "title": "Float", "description": "The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point)."}, "taxTotalAmount": {"type": ["number", "null"], "title": "Float", "description": "The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point)."}, "originalInvoiceTotalAmount": {"type": ["number", "null"], "title": "Float", "description": "The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point)."}, "originalTaxTotalAmount": {"type": ["number", "null"], "title": "Float", "description": "The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point)."}, "paidAmount": {"type": ["number", "null"], "title": "Float", "description": "The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point)."}, "dueAmount": {"type": ["number", "null"], "title": "Float", "description": "The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point)."}, "documents": {"type": "array", "items": {"anyOf": [{"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "Int32", "description": "The `Int32` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1."}, "name": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "createdOn": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "type": {"type": ["string", "null"], "anyOf": [{"enum": ["pdf"], "title": "PDF form of an AR Invoice", "description": "PDF form of an AR Invoice"}, {"enum": ["csv"], "title": "CSV form of an AR Invoice", "description": "CSV form of an AR Invoice"}], "description": "Types of tangible readable AR Invoice document"}, "path": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "remoteStorageDownloadAdminUrl": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "remoteStoragePath": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}}, "description": "A document related to an AR Invoice"}, {"type": "null"}]}}, "communications": {"type": "array", "items": {"anyOf": [{"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "Int64", "description": "The `Int64` scalar type represents non-fractional signed whole numeric values. Int can represent values between PHP_INT_MIN AND PHP_INT_MAX."}, "type": {"type": ["string", "null"], "anyOf": [{"enum": ["UNSPECIFIED"], "title": "A communication for which no type was specified", "description": "A communication for which no type was specified"}, {"enum": ["INITIAL_COMMUNICATION"], "title": "An initial communication containing the invoice and payment information", "description": "An initial communication containing the invoice and payment information"}, {"enum": ["CANCELLATION_COMMUNICATION"], "title": "A cancellation communication containing the cancelled invoice information", "description": "A cancellation communication containing the cancelled invoice information"}, {"enum": ["NETTABLE_REMOVED"], "title": "A communication sent out when the netting status of an invoice is turned off", "description": "A communication sent out when the netting status of an invoice is turned off"}], "description": "Types of different revenue communications."}, "queuedOn": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "emailMessage": {"type": ["object", "string", "null"], "description": "An email communication"}}, "description": "A revenue invoice communication"}, {"type": "null"}]}}, "creator": {"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "Int64", "description": "The `Int64` scalar type represents non-fractional signed whole numeric values. Int can represent values between PHP_INT_MIN AND PHP_INT_MAX."}, "type": {"type": ["string", "null"], "anyOf": [{"enum": ["SUPPLIER"], "title": "Supplier type creator", "description": "Supplier type creator"}, {"enum": ["ADMIN_USER"], "title": "Admin user as a creator", "description": "Admin user as a creator"}, {"enum": ["EXTRANET_USER"], "title": "An extranet user as a creator", "description": "An extranet user as a creator"}, {"enum": ["INTERNAL"], "title": "An internal user as a creator", "description": "An internal user as a creator"}], "description": "Enumerates all the types of an AR Invoice creator."}}, "description": "A revenue invoice creator"}, "createdOn": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "effectiveOn": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "isReconciled": {"type": ["boolean", "null"], "title": "Boolean", "description": "The `Boolean` scalar type represents `true` or `false`."}, "reconciledBy": {"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "Int32", "description": "The `Int32` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1."}, "type": {"type": ["string", "null"], "anyOf": [{"enum": ["ADMIN_USER"], "title": "An admin user or employee logged in, having a valid Employee ID", "description": "An admin user or employee logged in, having a valid Employee ID"}, {"enum": ["AP_PAYMENT_PROCESSOR"], "title": "Automated accounts payable payment processor", "description": "Automated accounts payable payment processor"}], "description": "Types of different reconcilers that can potentially perform reconciliation of different AR components"}}, "description": "Represents a AR reconciler entity - who is responsible for reconciling the AR components"}, "nettable": {"type": ["boolean", "null"], "title": "Boolean", "description": "The `Boolean` scalar type represents `true` or `false`."}, "originallyNettable": {"type": ["boolean", "null"], "title": "Boolean", "description": "The `Boolean` scalar type represents `true` or `false`."}, "invoiceReceipientsEmailAddresses": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "payments": {"type": "array", "items": {"anyOf": [{"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "Int32", "description": "The `Int32` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1."}, "status": {"type": ["string", "null"], "anyOf": [{"enum": ["NEW"], "title": "Recently created or unprocessed", "description": "Recently created or unprocessed"}, {"enum": ["PARTIALLY_MATCHED"], "title": "Partially matched i.e. still available for reconciliation", "description": "Partially matched i.e. still available for reconciliation"}, {"enum": ["FULLY_MATCHED"], "title": "Fully matched i.e. reconciled completely", "description": "Fully matched i.e. reconciled completely"}, {"enum": ["VOID"], "title": "Voided", "description": "Voided"}], "description": "Enumerates all the statuses an AR Payment can be in at any given point."}, "revenueSource": {"type": ["string", "null"], "anyOf": [{"enum": ["B2B"], "title": "Business to business type", "description": "Business to business type"}, {"enum": ["CASTLEGATE"], "title": "Castlegate or fulfillment services", "description": "Castlegate or fulfillment services"}, {"enum": ["SPONSORED_PRODUCTS"], "title": "Sponsored products type", "description": "Sponsored products type"}, {"enum": ["MAAS_MEDIA"], "title": "Maas media type", "description": "Maas media type"}, {"enum": ["LIQUIDATION"], "title": "Liquidation type", "description": "Liquidation type"}, {"enum": ["GIFT_CARD"], "title": "Gift card type", "description": "Gift card type"}], "description": "Types of different revenue sources or streams."}, "amount": {"type": ["number", "null"], "title": "Float", "description": "The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point)."}, "currency": {"type": ["string", "null"], "anyOf": [{"enum": ["US_DOLLAR"], "title": "US Dollar", "description": "US Dollar"}, {"enum": ["BRITISH_POUND"], "title": "British Pound", "description": "British Pound"}, {"enum": ["EURO"], "title": "Euro", "description": "Euro"}, {"enum": ["CANADIAN_DOLLAR"], "title": "Canadian Dollar", "description": "Canadian Dollar"}, {"enum": ["AUSTRALIAN_DOLLAR"], "title": "Australian Dollar", "description": "Australian Dollar"}], "description": "Types of currency"}, "reference": {"type": ["object", "string", "null"], "description": "Represents a reference or an origination of an AR payment. An AR payment can refer to an outside payment or simply to itself"}, "payer": {"type": ["object", "string", "null"], "description": "Represents an entity that uses Wayfair's services and pays for them"}, "createdOn": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "description": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "matchedAmount": {"type": ["number", "null"], "title": "Float", "description": "The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point)."}, "isReconciled": {"type": ["boolean", "null"], "title": "Boolean", "description": "The `Boolean` scalar type represents `true` or `false`."}, "reconciledOn": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "reconciledBy": {"type": ["object", "string", "null"], "description": "Represents a AR reconciler entity - who is responsible for reconciling the AR components"}}, "description": "Accounts Receivable Payment entity which depicts a payment that we have realized as a \"Revenue\" and which we could have received from different revenue streams or sources."}, {"type": "null"}]}}, "isCreditMemo": {"type": ["boolean", "null"], "title": "Boolean", "description": "The `Boolean` scalar type represents `true` or `false`."}, "statusUpdateLogs": {"type": "array", "items": {"anyOf": [{"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "Int64", "description": "The `Int64` scalar type represents non-fractional signed whole numeric values. Int can represent values between PHP_INT_MIN AND PHP_INT_MAX."}, "fromStatus": {"type": ["string", "null"], "anyOf": [{"enum": ["NEW"], "title": "Recently created or unprocessed", "description": "Recently created or unprocessed"}, {"enum": ["PENDING_APPROVAL"], "title": "Sent for approval but not approved yet", "description": "Sent for approval but not approved yet"}, {"enum": ["APPROVED"], "title": "Approved by the requested approver", "description": "Approved by the requested approver"}, {"enum": ["SENT_TO_RECIPIENT"], "title": "Sent to the intended recipient(s)", "description": "Sent to the intended recipient(s)"}, {"enum": ["PENDING_PAYMENT"], "title": "Is waiting for payment or to be reconciled", "description": "Is waiting for payment or to be reconciled"}, {"enum": ["PARTIALLY_PAID"], "title": "Is partially paid for and still to be matched against payment(s)", "description": "Is partially paid for and still to be matched against payment(s)"}, {"enum": ["FULLY_PAID"], "title": "Is fully paid for and matched/reconciled against payment(s)", "description": "Is fully paid for and matched/reconciled against payment(s)"}, {"enum": ["REJECTED"], "title": "Rejected in the process of approval", "description": "Rejected in the process of approval"}, {"enum": ["CANCELLED"], "title": "Cancelled due to some reason", "description": "Cancelled due to some reason"}], "description": "Enumerates all the statuses an AR Invoice can be in at any given point."}, "toStatus": {"type": ["string", "null"], "anyOf": [{"enum": ["NEW"], "title": "Recently created or unprocessed", "description": "Recently created or unprocessed"}, {"enum": ["PENDING_APPROVAL"], "title": "Sent for approval but not approved yet", "description": "Sent for approval but not approved yet"}, {"enum": ["APPROVED"], "title": "Approved by the requested approver", "description": "Approved by the requested approver"}, {"enum": ["SENT_TO_RECIPIENT"], "title": "Sent to the intended recipient(s)", "description": "Sent to the intended recipient(s)"}, {"enum": ["PENDING_PAYMENT"], "title": "Is waiting for payment or to be reconciled", "description": "Is waiting for payment or to be reconciled"}, {"enum": ["PARTIALLY_PAID"], "title": "Is partially paid for and still to be matched against payment(s)", "description": "Is partially paid for and still to be matched against payment(s)"}, {"enum": ["FULLY_PAID"], "title": "Is fully paid for and matched/reconciled against payment(s)", "description": "Is fully paid for and matched/reconciled against payment(s)"}, {"enum": ["REJECTED"], "title": "Rejected in the process of approval", "description": "Rejected in the process of approval"}, {"enum": ["CANCELLED"], "title": "Cancelled due to some reason", "description": "Cancelled due to some reason"}], "description": "Enumerates all the statuses an AR Invoice can be in at any given point."}, "updatedOn": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "updatedBy": {"type": ["object", "string", "null"], "description": "Fetches data for an employee."}}, "description": "Log entry for AR invoice status update"}, {"type": "null"}]}}, "reference": {"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "Int64", "description": "The `Int64` scalar type represents non-fractional signed whole numeric values. Int can represent values between PHP_INT_MIN AND PHP_INT_MAX."}}, "description": "A Reference to External Systems"}}, "description": "Interface for an AR Invoice - this contains all the common properties an AR Invoice should have"}, {"type": "null"}]}}, "statusUpdateLogs": {"type": "array", "items": {"anyOf": [{"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "Int64", "description": "The `Int64` scalar type represents non-fractional signed whole numeric values. Int can represent values between PHP_INT_MIN AND PHP_INT_MAX."}, "fromStatus": {"type": ["string", "null"], "anyOf": [{"enum": ["NEW"], "title": "Recently created or unprocessed", "description": "Recently created or unprocessed"}, {"enum": ["PENDING_APPROVAL"], "title": "Sent for approval but not approved yet", "description": "Sent for approval but not approved yet"}, {"enum": ["APPROVED"], "title": "Approved by the requested approver", "description": "Approved by the requested approver"}, {"enum": ["SENT_TO_RECIPIENT"], "title": "Sent to the intended recipient(s)", "description": "Sent to the intended recipient(s)"}, {"enum": ["PENDING_PAYMENT"], "title": "Is waiting for payment or to be reconciled", "description": "Is waiting for payment or to be reconciled"}, {"enum": ["PARTIALLY_PAID"], "title": "Is partially paid for and still to be matched against payment(s)", "description": "Is partially paid for and still to be matched against payment(s)"}, {"enum": ["FULLY_PAID"], "title": "Is fully paid for and matched/reconciled against payment(s)", "description": "Is fully paid for and matched/reconciled against payment(s)"}, {"enum": ["REJECTED"], "title": "Rejected in the process of approval", "description": "Rejected in the process of approval"}, {"enum": ["CANCELLED"], "title": "Cancelled due to some reason", "description": "Cancelled due to some reason"}], "description": "Enumerates all the statuses an AR Invoice can be in at any given point."}, "toStatus": {"type": ["string", "null"], "anyOf": [{"enum": ["NEW"], "title": "Recently created or unprocessed", "description": "Recently created or unprocessed"}, {"enum": ["PENDING_APPROVAL"], "title": "Sent for approval but not approved yet", "description": "Sent for approval but not approved yet"}, {"enum": ["APPROVED"], "title": "Approved by the requested approver", "description": "Approved by the requested approver"}, {"enum": ["SENT_TO_RECIPIENT"], "title": "Sent to the intended recipient(s)", "description": "Sent to the intended recipient(s)"}, {"enum": ["PENDING_PAYMENT"], "title": "Is waiting for payment or to be reconciled", "description": "Is waiting for payment or to be reconciled"}, {"enum": ["PARTIALLY_PAID"], "title": "Is partially paid for and still to be matched against payment(s)", "description": "Is partially paid for and still to be matched against payment(s)"}, {"enum": ["FULLY_PAID"], "title": "Is fully paid for and matched/reconciled against payment(s)", "description": "Is fully paid for and matched/reconciled against payment(s)"}, {"enum": ["REJECTED"], "title": "Rejected in the process of approval", "description": "Rejected in the process of approval"}, {"enum": ["CANCELLED"], "title": "Cancelled due to some reason", "description": "Cancelled due to some reason"}], "description": "Enumerates all the statuses an AR Invoice can be in at any given point."}, "updatedOn": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "updatedBy": {"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "ID", "description": "The `ID` scalar type represents a unique identifier, often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\"4\"`) or integer (such as `4`) input value will be accepted as an ID."}, "firstName": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "middleName": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "lastName": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "fullName": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "userName": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "nickname": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "displayLastName": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "email": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "samAccountName": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "isActive": {"type": ["boolean", "null"], "title": "Boolean", "description": "The `Boolean` scalar type represents `true` or `false`."}, "birthday": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "seniorityDate": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "startDate": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "forecastEndDate": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "terminationDate": {"type": ["object", "string", "null"], "title": "IsoDateTime", "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"}, "isUnlimitedContract": {"type": ["boolean", "null"], "title": "Boolean", "description": "The `Boolean` scalar type represents `true` or `false`."}, "isEngineer": {"type": ["boolean", "null"], "title": "Boolean", "description": "The `Boolean` scalar type represents `true` or `false`."}, "worksOnSoftware": {"type": ["boolean", "null"], "title": "Boolean", "description": "The `Boolean` scalar type represents `true` or `false`."}, "title": {"type": ["object", "string", "null"], "description": "Wayfair job titles"}, "profile": {"type": ["object", "string", "null"], "description": "Profile information of an employee (ex: Massachusetts Employee, German Employee)"}, "type": {"type": ["object", "string", "null"], "description": "Wayfair employee categories (ex: intern, contract, full time)"}, "location": {"type": ["object", "string", "null"], "description": "Wayfair employee location (ex Copley Boston)"}, "phoneExtension": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "manager": {"type": ["object", "string", "null"], "description": "Fetches data for an employee."}, "workgroup": {"type": ["object", "string", "null"], "description": "Wayfair workgroup information"}, "processedByEmployee": {"type": ["object", "string", "null"], "description": "Fetches data for an employee."}, "directReports": {"type": "array", "items": {"anyOf": [{"type": ["object", "string", "null"], "description": "Fetches data for an employee."}, {"type": "null"}]}}}, "description": "Fetches data for an employee."}}, "description": "Log entry for AR invoice status update"}, {"type": "null"}]}}, "reference": {"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "Int64", "description": "The `Int64` scalar type represents non-fractional signed whole numeric values. Int can represent values between PHP_INT_MIN AND PHP_INT_MAX."}}, "description": "A Reference to External Systems"}}, "description": "Gift Card Type of AR invoice which has all the properties of an AR invoice"}, "GiftCardArInvoiceOrderCategory": {"type": ["string", "null"], "anyOf": [{"enum": ["BRAND"], "title": "Brand", "description": "Brand"}, {"enum": ["OFFICE_SUPPLIES"], "title": "Office Supplies/Equipment", "description": "Office Supplies/Equipment"}, {"enum": ["PHOTO_STUDIO"], "title": "Photo Studio", "description": "Photo Studio"}, {"enum": ["PUBLIC_RELATIONS"], "title": "Public Relations", "description": "Public Relations"}, {"enum": ["SAMPLE_COST"], "title": "Public Relations", "description": "Public Relations"}, {"enum": ["TRIED_AND_TRUE_MARKETING"], "title": "Tried and True Marketing", "description": "Tried and True Marketing"}, {"enum": ["CONTENT"], "title": "Content", "description": "Content"}], "description": "Enumerates all of the order categories for Gift Card Ar Invoices"}, "GiftCardArInvoiceDetail": {"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "Int64", "description": "The `Int64` scalar type represents non-fractional signed whole numeric values. Int can represent values between PHP_INT_MIN AND PHP_INT_MAX."}, "quantity": {"type": ["number", "null"], "title": "Float", "description": "The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point)."}, "unitAmount": {"type": ["number", "null"], "title": "Float", "description": "The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point)."}, "itemAmount": {"type": ["number", "null"], "title": "Float", "description": "The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point)."}, "description": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "pan": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "transactionId": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "externalReference": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "taxes": {"type": "array", "items": {"anyOf": [{"type": ["object", "string", "null"], "properties": {"type": {"type": ["string", "null"], "anyOf": [{"enum": ["SalesTax"], "title": "Sales Tax", "description": "Sales Tax"}, {"enum": ["SellersUseTax"], "title": "Sellers Use Tax", "description": "Sellers Use Tax"}, {"enum": ["EcoFee"], "title": "Eco Fee", "description": "Eco Fee"}, {"enum": ["SHP"], "title": "Shipment Tax", "description": "Shipment Tax"}, {"enum": ["GST"], "title": "GST Tax", "description": "GST Tax"}, {"enum": ["PST"], "title": "PST Tax", "description": "PST Tax"}, {"enum": ["QST"], "title": "QST Tax", "description": "QST Tax"}, {"enum": ["HST"], "title": "HST Tax", "description": "HST Tax"}, {"enum": ["VAT"], "title": "VAT Tax", "description": "VAT Tax"}, {"enum": ["NA"], "title": "Not Available", "description": "Not Available"}], "description": "An enumeration of Tax Types"}, "value": {"type": ["number", "null"], "title": "Float", "description": "The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point)."}}, "description": "The calculated tax amounts per type"}, {"type": "null"}]}}, "discounts": {"type": "array", "items": {"anyOf": [{"type": ["object", "string", "null"], "properties": {"id": {"type": ["object", "string", "null"], "title": "Int64", "description": "The `Int64` scalar type represents non-fractional signed whole numeric values. Int can represent values between PHP_INT_MIN AND PHP_INT_MAX."}, "description": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "quantity": {"type": ["object", "string", "null"], "title": "Int32", "description": "The `Int32` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1."}, "unitAmount": {"type": ["number", "null"], "title": "Float", "description": "The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point)."}, "amount": {"type": ["number", "null"], "title": "Float", "description": "The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point)."}}, "description": "AR invoice adjustment that can get applied on either an invoice line item or an overall invoice"}, {"type": "null"}]}}}, "description": "Invoice line item detail of Gift Card AR Invoice type"}, "BrandImage": {"type": ["object", "string", "null"], "properties": {"componentMetaData": {"type": ["object", "string", "null"], "properties": {"componentId": {"type": ["object", "string", "null"], "title": "PositiveInt", "description": "The `PositiveInt` scalar type represents non-fractional signed whole\n    numeric values. PositiveInt can represent values between 1 and 2^31 - 1\n    inclusive"}, "componentType": {"type": ["object", "string", "null"], "title": "PositiveInt", "description": "The `PositiveInt` scalar type represents non-fractional signed whole\n    numeric values. PositiveInt can represent values between 1 and 2^31 - 1\n    inclusive"}, "versionId": {"type": ["object", "string", "null"], "title": "PositiveInt", "description": "The `PositiveInt` scalar type represents non-fractional signed whole\n    numeric values. PositiveInt can represent values between 1 and 2^31 - 1\n    inclusive"}, "isEnabled": {"type": ["boolean", "null"], "title": "Boolean", "description": "The `Boolean` scalar type represents `true` or `false`."}, "rank": {"type": ["object", "string", "null"], "title": "Int32", "description": "The `Int32` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1."}, "qaStatus": {"type": ["object", "string", "null"], "title": "PositiveInt", "description": "The `PositiveInt` scalar type represents non-fractional signed whole\n    numeric values. PositiveInt can represent values between 1 and 2^31 - 1\n    inclusive"}, "rejectionReasons": {"type": "array", "items": {"anyOf": [{"type": ["object", "string", "null"], "title": "PositiveInt", "description": "The `PositiveInt` scalar type represents non-fractional signed whole\n    numeric values. PositiveInt can represent values between 1 and 2^31 - 1\n    inclusive"}, {"type": "null"}]}}, "rejectionNote": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "isValidForDisplay": {"type": ["boolean", "null"], "title": "Boolean", "description": "The `Boolean` scalar type represents `true` or `false`."}}, "description": "A type for fields common to all brand page components"}, "ireid": {"type": ["object", "string", "null"], "title": "PositiveInt", "description": "The `PositiveInt` scalar type represents non-fractional signed whole\n    numeric values. PositiveInt can represent values between 1 and 2^31 - 1\n    inclusive"}, "mobileIreid": {"type": ["object", "string", "null"], "title": "PositiveInt", "description": "The `PositiveInt` scalar type represents non-fractional signed whole\n    numeric values. PositiveInt can represent values between 1 and 2^31 - 1\n    inclusive"}, "altText": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "ctaLink": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "isPageTitle": {"type": ["boolean", "null"], "title": "Boolean", "description": "The `Boolean` scalar type represents `true` or `false`."}}, "description": "The image resource id of an image component on a brand page"}, "BrandComponentInterface": {"type": ["object", "string", "null"], "properties": {"componentMetaData": {"type": ["object", "string", "null"], "properties": {"componentId": {"type": ["object", "string", "null"], "title": "PositiveInt", "description": "The `PositiveInt` scalar type represents non-fractional signed whole\n    numeric values. PositiveInt can represent values between 1 and 2^31 - 1\n    inclusive"}, "componentType": {"type": ["object", "string", "null"], "title": "PositiveInt", "description": "The `PositiveInt` scalar type represents non-fractional signed whole\n    numeric values. PositiveInt can represent values between 1 and 2^31 - 1\n    inclusive"}, "versionId": {"type": ["object", "string", "null"], "title": "PositiveInt", "description": "The `PositiveInt` scalar type represents non-fractional signed whole\n    numeric values. PositiveInt can represent values between 1 and 2^31 - 1\n    inclusive"}, "isEnabled": {"type": ["boolean", "null"], "title": "Boolean", "description": "The `Boolean` scalar type represents `true` or `false`."}, "rank": {"type": ["object", "string", "null"], "title": "Int32", "description": "The `Int32` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1."}, "qaStatus": {"type": ["object", "string", "null"], "title": "PositiveInt", "description": "The `PositiveInt` scalar type represents non-fractional signed whole\n    numeric values. PositiveInt can represent values between 1 and 2^31 - 1\n    inclusive"}, "rejectionReasons": {"type": "array", "items": {"anyOf": [{"type": ["object", "string", "null"], "title": "PositiveInt", "description": "The `PositiveInt` scalar type represents non-fractional signed whole\n    numeric values. PositiveInt can represent values between 1 and 2^31 - 1\n    inclusive"}, {"type": "null"}]}}, "rejectionNote": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "isValidForDisplay": {"type": ["boolean", "null"], "title": "Boolean", "description": "The `Boolean` scalar type represents `true` or `false`."}}, "description": "A type for fields common to all brand page components"}}, "description": "The interface type for a brand page component"}, "BrandComponentMetadataType": {"type": ["object", "string", "null"], "properties": {"componentId": {"type": ["object", "string", "null"], "title": "PositiveInt", "description": "The `PositiveInt` scalar type represents non-fractional signed whole\n    numeric values. PositiveInt can represent values between 1 and 2^31 - 1\n    inclusive"}, "componentType": {"type": ["object", "string", "null"], "title": "PositiveInt", "description": "The `PositiveInt` scalar type represents non-fractional signed whole\n    numeric values. PositiveInt can represent values between 1 and 2^31 - 1\n    inclusive"}, "versionId": {"type": ["object", "string", "null"], "title": "PositiveInt", "description": "The `PositiveInt` scalar type represents non-fractional signed whole\n    numeric values. PositiveInt can represent values between 1 and 2^31 - 1\n    inclusive"}, "isEnabled": {"type": ["boolean", "null"], "title": "Boolean", "description": "The `Boolean` scalar type represents `true` or `false`."}, "rank": {"type": ["object", "string", "null"], "title": "Int32", "description": "The `Int32` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1."}, "qaStatus": {"type": ["object", "string", "null"], "title": "PositiveInt", "description": "The `PositiveInt` scalar type represents non-fractional signed whole\n    numeric values. PositiveInt can represent values between 1 and 2^31 - 1\n    inclusive"}, "rejectionReasons": {"type": "array", "items": {"anyOf": [{"type": ["object", "string", "null"], "title": "PositiveInt", "description": "The `PositiveInt` scalar type represents non-fractional signed whole\n    numeric values. PositiveInt can represent values between 1 and 2^31 - 1\n    inclusive"}, {"type": "null"}]}}, "rejectionNote": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "isValidForDisplay": {"type": ["boolean", "null"], "title": "Boolean", "description": "The `Boolean` scalar type represents `true` or `false`."}}, "description": "A type for fields common to all brand page components"}, "BrandDescription": {"type": ["object", "string", "null"], "properties": {"componentMetaData": {"type": ["object", "string", "null"], "properties": {"componentId": {"type": ["object", "string", "null"], "title": "PositiveInt", "description": "The `PositiveInt` scalar type represents non-fractional signed whole\n    numeric values. PositiveInt can represent values between 1 and 2^31 - 1\n    inclusive"}, "componentType": {"type": ["object", "string", "null"], "title": "PositiveInt", "description": "The `PositiveInt` scalar type represents non-fractional signed whole\n    numeric values. PositiveInt can represent values between 1 and 2^31 - 1\n    inclusive"}, "versionId": {"type": ["object", "string", "null"], "title": "PositiveInt", "description": "The `PositiveInt` scalar type represents non-fractional signed whole\n    numeric values. PositiveInt can represent values between 1 and 2^31 - 1\n    inclusive"}, "isEnabled": {"type": ["boolean", "null"], "title": "Boolean", "description": "The `Boolean` scalar type represents `true` or `false`."}, "rank": {"type": ["object", "string", "null"], "title": "Int32", "description": "The `Int32` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1."}, "qaStatus": {"type": ["object", "string", "null"], "title": "PositiveInt", "description": "The `PositiveInt` scalar type represents non-fractional signed whole\n    numeric values. PositiveInt can represent values between 1 and 2^31 - 1\n    inclusive"}, "rejectionReasons": {"type": "array", "items": {"anyOf": [{"type": ["object", "string", "null"], "title": "PositiveInt", "description": "The `PositiveInt` scalar type represents non-fractional signed whole\n    numeric values. PositiveInt can represent values between 1 and 2^31 - 1\n    inclusive"}, {"type": "null"}]}}, "rejectionNote": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "isValidForDisplay": {"type": ["boolean", "null"], "title": "Boolean", "description": "The `Boolean` scalar type represents `true` or `false`."}}, "description": "A type for fields common to all brand page components"}, "text": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}}, "description": "An element with a single description field on a brand page"}, "BrandImageCta": {"type": ["object", "string", "null"], "properties": {"componentMetaData": {"type": ["object", "string", "null"], "properties": {"componentId": {"type": ["object", "string", "null"], "title": "PositiveInt", "description": "The `PositiveInt` scalar type represents non-fractional signed whole\n    numeric values. PositiveInt can represent values between 1 and 2^31 - 1\n    inclusive"}, "componentType": {"type": ["object", "string", "null"], "title": "PositiveInt", "description": "The `PositiveInt` scalar type represents non-fractional signed whole\n    numeric values. PositiveInt can represent values between 1 and 2^31 - 1\n    inclusive"}, "versionId": {"type": ["object", "string", "null"], "title": "PositiveInt", "description": "The `PositiveInt` scalar type represents non-fractional signed whole\n    numeric values. PositiveInt can represent values between 1 and 2^31 - 1\n    inclusive"}, "isEnabled": {"type": ["boolean", "null"], "title": "Boolean", "description": "The `Boolean` scalar type represents `true` or `false`."}, "rank": {"type": ["object", "string", "null"], "title": "Int32", "description": "The `Int32` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1."}, "qaStatus": {"type": ["object", "string", "null"], "title": "PositiveInt", "description": "The `PositiveInt` scalar type represents non-fractional signed whole\n    numeric values. PositiveInt can represent values between 1 and 2^31 - 1\n    inclusive"}, "rejectionReasons": {"type": "array", "items": {"anyOf": [{"type": ["object", "string", "null"], "title": "PositiveInt", "description": "The `PositiveInt` scalar type represents non-fractional signed whole\n    numeric values. PositiveInt can represent values between 1 and 2^31 - 1\n    inclusive"}, {"type": "null"}]}}, "rejectionNote": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "isValidForDisplay": {"type": ["boolean", "null"], "title": "Boolean", "description": "The `Boolean` scalar type represents `true` or `false`."}}, "description": "A type for fields common to all brand page components"}, "headerText": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "description": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "ctaLink": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "ctaText": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "ireid": {"type": ["object", "string", "null"], "title": "PositiveInt", "description": "The `PositiveInt` scalar type represents non-fractional signed whole\n    numeric values. PositiveInt can represent values between 1 and 2^31 - 1\n    inclusive"}, "textLocation": {"type": ["string", "null"], "anyOf": [{"enum": ["TEXT_LOCATION_RIGHT"], "title": "Denotes that the text should be to the right of the image/video", "description": "Denotes that the text should be to the right of the image/video"}, {"enum": ["TEXT_LOCATION_LEFT"], "title": "Denotes that the text should be to the left of the image/video", "description": "Denotes that the text should be to the left of the image/video"}], "description": "Enum for brand text location information. Denotes where the text appears in relation to the image/video for brand components"}, "altText": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}}, "description": "An image with a call to action"}, "BrandCtaInterface": {"type": ["object", "string", "null"], "properties": {"headerText": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "description": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "ctaLink": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "ctaText": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}}, "description": "The interface type for a brand component with a call to action (cta)"}, "BRAND_TEXT_LOCATION": {"type": ["string", "null"], "anyOf": [{"enum": ["TEXT_LOCATION_RIGHT"], "title": "Denotes that the text should be to the right of the image/video", "description": "Denotes that the text should be to the right of the image/video"}, {"enum": ["TEXT_LOCATION_LEFT"], "title": "Denotes that the text should be to the left of the image/video", "description": "Denotes that the text should be to the left of the image/video"}], "description": "Enum for brand text location information. Denotes where the text appears in relation to the image/video for brand components"}, "BrandImageCtaCollection": {"type": ["object", "string", "null"], "properties": {"componentMetaData": {"type": ["object", "string", "null"], "properties": {"componentId": {"type": ["object", "string", "null"], "title": "PositiveInt", "description": "The `PositiveInt` scalar type represents non-fractional signed whole\n    numeric values. PositiveInt can represent values between 1 and 2^31 - 1\n    inclusive"}, "componentType": {"type": ["object", "string", "null"], "title": "PositiveInt", "description": "The `PositiveInt` scalar type represents non-fractional signed whole\n    numeric values. PositiveInt can represent values between 1 and 2^31 - 1\n    inclusive"}, "versionId": {"type": ["object", "string", "null"], "title": "PositiveInt", "description": "The `PositiveInt` scalar type represents non-fractional signed whole\n    numeric values. PositiveInt can represent values between 1 and 2^31 - 1\n    inclusive"}, "isEnabled": {"type": ["boolean", "null"], "title": "Boolean", "description": "The `Boolean` scalar type represents `true` or `false`."}, "rank": {"type": ["object", "string", "null"], "title": "Int32", "description": "The `Int32` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1."}, "qaStatus": {"type": ["object", "string", "null"], "title": "PositiveInt", "description": "The `PositiveInt` scalar type represents non-fractional signed whole\n    numeric values. PositiveInt can represent values between 1 and 2^31 - 1\n    inclusive"}, "rejectionReasons": {"type": "array", "items": {"anyOf": [{"type": ["object", "string", "null"], "title": "PositiveInt", "description": "The `PositiveInt` scalar type represents non-fractional signed whole\n    numeric values. PositiveInt can represent values between 1 and 2^31 - 1\n    inclusive"}, {"type": "null"}]}}, "rejectionNote": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "isValidForDisplay": {"type": ["boolean", "null"], "title": "Boolean", "description": "The `Boolean` scalar type represents `true` or `false`."}}, "description": "A type for fields common to all brand page components"}, "collection": {"type": "array", "items": {"anyOf": [{"type": ["object", "string", "null"], "properties": {"componentMetaData": {"type": ["object", "string", "null"], "properties": {"componentId": {"type": ["object", "string", "null"], "title": "PositiveInt", "description": "The `PositiveInt` scalar type represents non-fractional signed whole\n    numeric values. PositiveInt can represent values between 1 and 2^31 - 1\n    inclusive"}, "componentType": {"type": ["object", "string", "null"], "title": "PositiveInt", "description": "The `PositiveInt` scalar type represents non-fractional signed whole\n    numeric values. PositiveInt can represent values between 1 and 2^31 - 1\n    inclusive"}, "versionId": {"type": ["object", "string", "null"], "title": "PositiveInt", "description": "The `PositiveInt` scalar type represents non-fractional signed whole\n    numeric values. PositiveInt can represent values between 1 and 2^31 - 1\n    inclusive"}, "isEnabled": {"type": ["boolean", "null"], "title": "Boolean", "description": "The `Boolean` scalar type represents `true` or `false`."}, "rank": {"type": ["object", "string", "null"], "title": "Int32", "description": "The `Int32` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1."}, "qaStatus": {"type": ["object", "string", "null"], "title": "PositiveInt", "description": "The `PositiveInt` scalar type represents non-fractional signed whole\n    numeric values. PositiveInt can represent values between 1 and 2^31 - 1\n    inclusive"}, "rejectionReasons": {"type": "array", "items": {"anyOf": [{"type": ["object", "string", "null"], "title": "PositiveInt", "description": "The `PositiveInt` scalar type represents non-fractional signed whole\n    numeric values. PositiveInt can represent values between 1 and 2^31 - 1\n    inclusive"}, {"type": "null"}]}}, "rejectionNote": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "isValidForDisplay": {"type": ["boolean", "null"], "title": "Boolean", "description": "The `Boolean` scalar type represents `true` or `false`."}}, "description": "A type for fields common to all brand page components"}, "headerText": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "description": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "ctaLink": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "ctaText": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "ireid": {"type": ["object", "string", "null"], "title": "PositiveInt", "description": "The `PositiveInt` scalar type represents non-fractional signed whole\n    numeric values. PositiveInt can represent values between 1 and 2^31 - 1\n    inclusive"}, "textLocation": {"type": ["string", "null"], "anyOf": [{"enum": ["TEXT_LOCATION_RIGHT"], "title": "Denotes that the text should be to the right of the image/video", "description": "Denotes that the text should be to the right of the image/video"}, {"enum": ["TEXT_LOCATION_LEFT"], "title": "Denotes that the text should be to the left of the image/video", "description": "Denotes that the text should be to the left of the image/video"}], "description": "Enum for brand text location information. Denotes where the text appears in relation to the image/video for brand components"}, "altText": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}}, "description": "An image with a call to action"}, {"type": "null"}]}}, "headline": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "isSquare": {"type": ["boolean", "null"], "title": "Boolean", "description": "The `Boolean` scalar type represents `true` or `false`."}, "subheaderText": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "mobileLayout": {"type": ["string", "null"], "anyOf": [{"enum": ["MOBILE_LAYOUT_CAROUSEL"], "title": "Denotes that the mobile layout should use a carousel to display the component", "description": "Denotes that the mobile layout should use a carousel to display the component"}, {"enum": ["MOBILE_LAYOUT_SINGLE_COLUMN"], "title": "Denotes that the mobile layout should use a single, full-width column to display the component", "description": "Denotes that the mobile layout should use a single, full-width column to display the component"}], "description": "Enum for brand mobile layout information. Denotes what layout the component uses on mobile"}}, "description": "A collection of images that each have a call to action"}, "BRAND_MOBILE_LAYOUT": {"type": ["string", "null"], "anyOf": [{"enum": ["MOBILE_LAYOUT_CAROUSEL"], "title": "Denotes that the mobile layout should use a carousel to display the component", "description": "Denotes that the mobile layout should use a carousel to display the component"}, {"enum": ["MOBILE_LAYOUT_SINGLE_COLUMN"], "title": "Denotes that the mobile layout should use a single, full-width column to display the component", "description": "Denotes that the mobile layout should use a single, full-width column to display the component"}], "description": "Enum for brand mobile layout information. Denotes what layout the component uses on mobile"}, "BrandValuePropImageCollection": {"type": ["object", "string", "null"], "properties": {"componentMetaData": {"type": ["object", "string", "null"], "properties": {"componentId": {"type": ["object", "string", "null"], "title": "PositiveInt", "description": "The `PositiveInt` scalar type represents non-fractional signed whole\n    numeric values. PositiveInt can represent values between 1 and 2^31 - 1\n    inclusive"}, "componentType": {"type": ["object", "string", "null"], "title": "PositiveInt", "description": "The `PositiveInt` scalar type represents non-fractional signed whole\n    numeric values. PositiveInt can represent values between 1 and 2^31 - 1\n    inclusive"}, "versionId": {"type": ["object", "string", "null"], "title": "PositiveInt", "description": "The `PositiveInt` scalar type represents non-fractional signed whole\n    numeric values. PositiveInt can represent values between 1 and 2^31 - 1\n    inclusive"}, "isEnabled": {"type": ["boolean", "null"], "title": "Boolean", "description": "The `Boolean` scalar type represents `true` or `false`."}, "rank": {"type": ["object", "string", "null"], "title": "Int32", "description": "The `Int32` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1."}, "qaStatus": {"type": ["object", "string", "null"], "title": "PositiveInt", "description": "The `PositiveInt` scalar type represents non-fractional signed whole\n    numeric values. PositiveInt can represent values between 1 and 2^31 - 1\n    inclusive"}, "rejectionReasons": {"type": "array", "items": {"anyOf": [{"type": ["object", "string", "null"], "title": "PositiveInt", "description": "The `PositiveInt` scalar type represents non-fractional signed whole\n    numeric values. PositiveInt can represent values between 1 and 2^31 - 1\n    inclusive"}, {"type": "null"}]}}, "rejectionNote": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "isValidForDisplay": {"type": ["boolean", "null"], "title": "Boolean", "description": "The `Boolean` scalar type represents `true` or `false`."}}, "description": "A type for fields common to all brand page components"}, "collection": {"type": "array", "items": {"anyOf": [{"type": ["object", "string", "null"], "properties": {"componentMetaData": {"type": ["object", "string", "null"], "properties": {"componentId": {"type": ["object", "string", "null"], "title": "PositiveInt", "description": "The `PositiveInt` scalar type represents non-fractional signed whole\n    numeric values. PositiveInt can represent values between 1 and 2^31 - 1\n    inclusive"}, "componentType": {"type": ["object", "string", "null"], "title": "PositiveInt", "description": "The `PositiveInt` scalar type represents non-fractional signed whole\n    numeric values. PositiveInt can represent values between 1 and 2^31 - 1\n    inclusive"}, "versionId": {"type": ["object", "string", "null"], "title": "PositiveInt", "description": "The `PositiveInt` scalar type represents non-fractional signed whole\n    numeric values. PositiveInt can represent values between 1 and 2^31 - 1\n    inclusive"}, "isEnabled": {"type": ["boolean", "null"], "title": "Boolean", "description": "The `Boolean` scalar type represents `true` or `false`."}, "rank": {"type": ["object", "string", "null"], "title": "Int32", "description": "The `Int32` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1."}, "qaStatus": {"type": ["object", "string", "null"], "title": "PositiveInt", "description": "The `PositiveInt` scalar type represents non-fractional signed whole\n    numeric values. PositiveInt can represent values between 1 and 2^31 - 1\n    inclusive"}, "rejectionReasons": {"type": "array", "items": {"anyOf": [{"type": ["object", "string", "null"], "title": "PositiveInt", "description": "The `PositiveInt` scalar type represents non-fractional signed whole\n    numeric values. PositiveInt can represent values between 1 and 2^31 - 1\n    inclusive"}, {"type": "null"}]}}, "rejectionNote": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "isValidForDisplay": {"type": ["boolean", "null"], "title": "Boolean", "description": "The `Boolean` scalar type represents `true` or `false`."}}, "description": "A type for fields common to all brand page components"}, "headerText": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "description": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "ctaLink": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "ctaText": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "ireid": {"type": ["object", "string", "null"], "title": "PositiveInt", "description": "The `PositiveInt` scalar type represents non-fractional signed whole\n    numeric values. PositiveInt can represent values between 1 and 2^31 - 1\n    inclusive"}, "textLocation": {"type": ["string", "null"], "anyOf": [{"enum": ["TEXT_LOCATION_RIGHT"], "title": "Denotes that the text should be to the right of the image/video", "description": "Denotes that the text should be to the right of the image/video"}, {"enum": ["TEXT_LOCATION_LEFT"], "title": "Denotes that the text should be to the left of the image/video", "description": "Denotes that the text should be to the left of the image/video"}], "description": "Enum for brand text location information. Denotes where the text appears in relation to the image/video for brand components"}, "altText": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "textBullets": {"type": "array", "items": {"anyOf": [{"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, {"type": "null"}]}}}, "description": "An image with call to action, and informational bullet text"}, {"type": "null"}]}}, "headline": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}}, "description": "A collection of value prop image that has click to action, and informational bullet texts"}, "BrandValuePropImage": {"type": ["object", "string", "null"], "properties": {"componentMetaData": {"type": ["object", "string", "null"], "properties": {"componentId": {"type": ["object", "string", "null"], "title": "PositiveInt", "description": "The `PositiveInt` scalar type represents non-fractional signed whole\n    numeric values. PositiveInt can represent values between 1 and 2^31 - 1\n    inclusive"}, "componentType": {"type": ["object", "string", "null"], "title": "PositiveInt", "description": "The `PositiveInt` scalar type represents non-fractional signed whole\n    numeric values. PositiveInt can represent values between 1 and 2^31 - 1\n    inclusive"}, "versionId": {"type": ["object", "string", "null"], "title": "PositiveInt", "description": "The `PositiveInt` scalar type represents non-fractional signed whole\n    numeric values. PositiveInt can represent values between 1 and 2^31 - 1\n    inclusive"}, "isEnabled": {"type": ["boolean", "null"], "title": "Boolean", "description": "The `Boolean` scalar type represents `true` or `false`."}, "rank": {"type": ["object", "string", "null"], "title": "Int32", "description": "The `Int32` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1."}, "qaStatus": {"type": ["object", "string", "null"], "title": "PositiveInt", "description": "The `PositiveInt` scalar type represents non-fractional signed whole\n    numeric values. PositiveInt can represent values between 1 and 2^31 - 1\n    inclusive"}, "rejectionReasons": {"type": "array", "items": {"anyOf": [{"type": ["object", "string", "null"], "title": "PositiveInt", "description": "The `PositiveInt` scalar type represents non-fractional signed whole\n    numeric values. PositiveInt can represent values between 1 and 2^31 - 1\n    inclusive"}, {"type": "null"}]}}, "rejectionNote": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "isValidForDisplay": {"type": ["boolean", "null"], "title": "Boolean", "description": "The `Boolean` scalar type represents `true` or `false`."}}, "description": "A type for fields common to all brand page components"}, "headerText": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "description": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "ctaLink": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "ctaText": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "ireid": {"type": ["object", "string", "null"], "title": "PositiveInt", "description": "The `PositiveInt` scalar type represents non-fractional signed whole\n    numeric values. PositiveInt can represent values between 1 and 2^31 - 1\n    inclusive"}, "textLocation": {"type": ["string", "null"], "anyOf": [{"enum": ["TEXT_LOCATION_RIGHT"], "title": "Denotes that the text should be to the right of the image/video", "description": "Denotes that the text should be to the right of the image/video"}, {"enum": ["TEXT_LOCATION_LEFT"], "title": "Denotes that the text should be to the left of the image/video", "description": "Denotes that the text should be to the left of the image/video"}], "description": "Enum for brand text location information. Denotes where the text appears in relation to the image/video for brand components"}, "altText": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "textBullets": {"type": "array", "items": {"anyOf": [{"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, {"type": "null"}]}}}, "description": "An image with call to action, and informational bullet text"}, "BrandVideoCta": {"type": ["object", "string", "null"], "properties": {"componentMetaData": {"type": ["object", "string", "null"], "properties": {"componentId": {"type": ["object", "string", "null"], "title": "PositiveInt", "description": "The `PositiveInt` scalar type represents non-fractional signed whole\n    numeric values. PositiveInt can represent values between 1 and 2^31 - 1\n    inclusive"}, "componentType": {"type": ["object", "string", "null"], "title": "PositiveInt", "description": "The `PositiveInt` scalar type represents non-fractional signed whole\n    numeric values. PositiveInt can represent values between 1 and 2^31 - 1\n    inclusive"}, "versionId": {"type": ["object", "string", "null"], "title": "PositiveInt", "description": "The `PositiveInt` scalar type represents non-fractional signed whole\n    numeric values. PositiveInt can represent values between 1 and 2^31 - 1\n    inclusive"}, "isEnabled": {"type": ["boolean", "null"], "title": "Boolean", "description": "The `Boolean` scalar type represents `true` or `false`."}, "rank": {"type": ["object", "string", "null"], "title": "Int32", "description": "The `Int32` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1."}, "qaStatus": {"type": ["object", "string", "null"], "title": "PositiveInt", "description": "The `PositiveInt` scalar type represents non-fractional signed whole\n    numeric values. PositiveInt can represent values between 1 and 2^31 - 1\n    inclusive"}, "rejectionReasons": {"type": "array", "items": {"anyOf": [{"type": ["object", "string", "null"], "title": "PositiveInt", "description": "The `PositiveInt` scalar type represents non-fractional signed whole\n    numeric values. PositiveInt can represent values between 1 and 2^31 - 1\n    inclusive"}, {"type": "null"}]}}, "rejectionNote": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "isValidForDisplay": {"type": ["boolean", "null"], "title": "Boolean", "description": "The `Boolean` scalar type represents `true` or `false`."}}, "description": "A type for fields common to all brand page components"}, "headerText": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "description": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "ctaLink": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "ctaText": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "vreid": {"type": ["object", "string", "null"], "title": "PositiveInt", "description": "The `PositiveInt` scalar type represents non-fractional signed whole\n    numeric values. PositiveInt can represent values between 1 and 2^31 - 1\n    inclusive"}, "previewImageId": {"type": ["object", "string", "null"], "title": "PositiveInt", "description": "The `PositiveInt` scalar type represents non-fractional signed whole\n    numeric values. PositiveInt can represent values between 1 and 2^31 - 1\n    inclusive"}, "sources": {"type": "array", "items": {"anyOf": [{"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, {"type": "null"}]}}, "textLocation": {"type": ["string", "null"], "anyOf": [{"enum": ["TEXT_LOCATION_RIGHT"], "title": "Denotes that the text should be to the right of the image/video", "description": "Denotes that the text should be to the right of the image/video"}, {"enum": ["TEXT_LOCATION_LEFT"], "title": "Denotes that the text should be to the left of the image/video", "description": "Denotes that the text should be to the left of the image/video"}], "description": "Enum for brand text location information. Denotes where the text appears in relation to the image/video for brand components"}}, "description": "A video with a call to action"}, "BrandProductsCta": {"type": ["object", "string", "null"], "properties": {"componentMetaData": {"type": ["object", "string", "null"], "properties": {"componentId": {"type": ["object", "string", "null"], "title": "PositiveInt", "description": "The `PositiveInt` scalar type represents non-fractional signed whole\n    numeric values. PositiveInt can represent values between 1 and 2^31 - 1\n    inclusive"}, "componentType": {"type": ["object", "string", "null"], "title": "PositiveInt", "description": "The `PositiveInt` scalar type represents non-fractional signed whole\n    numeric values. PositiveInt can represent values between 1 and 2^31 - 1\n    inclusive"}, "versionId": {"type": ["object", "string", "null"], "title": "PositiveInt", "description": "The `PositiveInt` scalar type represents non-fractional signed whole\n    numeric values. PositiveInt can represent values between 1 and 2^31 - 1\n    inclusive"}, "isEnabled": {"type": ["boolean", "null"], "title": "Boolean", "description": "The `Boolean` scalar type represents `true` or `false`."}, "rank": {"type": ["object", "string", "null"], "title": "Int32", "description": "The `Int32` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1."}, "qaStatus": {"type": ["object", "string", "null"], "title": "PositiveInt", "description": "The `PositiveInt` scalar type represents non-fractional signed whole\n    numeric values. PositiveInt can represent values between 1 and 2^31 - 1\n    inclusive"}, "rejectionReasons": {"type": "array", "items": {"anyOf": [{"type": ["object", "string", "null"], "title": "PositiveInt", "description": "The `PositiveInt` scalar type represents non-fractional signed whole\n    numeric values. PositiveInt can represent values between 1 and 2^31 - 1\n    inclusive"}, {"type": "null"}]}}, "rejectionNote": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "isValidForDisplay": {"type": ["boolean", "null"], "title": "Boolean", "description": "The `Boolean` scalar type represents `true` or `false`."}}, "description": "A type for fields common to all brand page components"}, "headerText": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "description": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "ctaLink": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "ctaText": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "eventId": {"type": ["object", "string", "null"], "title": "PositiveInt", "description": "The `PositiveInt` scalar type represents non-fractional signed whole\n    numeric values. PositiveInt can represent values between 1 and 2^31 - 1\n    inclusive"}, "ireid": {"type": ["object", "string", "null"], "title": "PositiveInt", "description": "The `PositiveInt` scalar type represents non-fractional signed whole\n    numeric values. PositiveInt can represent values between 1 and 2^31 - 1\n    inclusive"}, "headline": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "isCriteriaEvent": {"type": ["boolean", "null"], "title": "Boolean", "description": "The `Boolean` scalar type represents `true` or `false`."}, "altText": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}}, "description": "The fields for products with cta component type"}, "BrandProductCarousel": {"type": ["object", "string", "null"], "properties": {"componentMetaData": {"type": ["object", "string", "null"], "properties": {"componentId": {"type": ["object", "string", "null"], "title": "PositiveInt", "description": "The `PositiveInt` scalar type represents non-fractional signed whole\n    numeric values. PositiveInt can represent values between 1 and 2^31 - 1\n    inclusive"}, "componentType": {"type": ["object", "string", "null"], "title": "PositiveInt", "description": "The `PositiveInt` scalar type represents non-fractional signed whole\n    numeric values. PositiveInt can represent values between 1 and 2^31 - 1\n    inclusive"}, "versionId": {"type": ["object", "string", "null"], "title": "PositiveInt", "description": "The `PositiveInt` scalar type represents non-fractional signed whole\n    numeric values. PositiveInt can represent values between 1 and 2^31 - 1\n    inclusive"}, "isEnabled": {"type": ["boolean", "null"], "title": "Boolean", "description": "The `Boolean` scalar type represents `true` or `false`."}, "rank": {"type": ["object", "string", "null"], "title": "Int32", "description": "The `Int32` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1."}, "qaStatus": {"type": ["object", "string", "null"], "title": "PositiveInt", "description": "The `PositiveInt` scalar type represents non-fractional signed whole\n    numeric values. PositiveInt can represent values between 1 and 2^31 - 1\n    inclusive"}, "rejectionReasons": {"type": "array", "items": {"anyOf": [{"type": ["object", "string", "null"], "title": "PositiveInt", "description": "The `PositiveInt` scalar type represents non-fractional signed whole\n    numeric values. PositiveInt can represent values between 1 and 2^31 - 1\n    inclusive"}, {"type": "null"}]}}, "rejectionNote": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "isValidForDisplay": {"type": ["boolean", "null"], "title": "Boolean", "description": "The `Boolean` scalar type represents `true` or `false`."}}, "description": "A type for fields common to all brand page components"}, "headerText": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "description": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "ctaLink": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "ctaText": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "eventId": {"type": ["object", "string", "null"], "title": "PositiveInt", "description": "The `PositiveInt` scalar type represents non-fractional signed whole\n    numeric values. PositiveInt can represent values between 1 and 2^31 - 1\n    inclusive"}, "headline": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "isCriteriaEvent": {"type": ["boolean", "null"], "title": "Boolean", "description": "The `Boolean` scalar type represents `true` or `false`."}}, "description": "The fields for product carousel component type"}, "BrandShopByAttribute": {"type": ["object", "string", "null"], "properties": {"componentMetaData": {"type": ["object", "string", "null"], "properties": {"componentId": {"type": ["object", "string", "null"], "title": "PositiveInt", "description": "The `PositiveInt` scalar type represents non-fractional signed whole\n    numeric values. PositiveInt can represent values between 1 and 2^31 - 1\n    inclusive"}, "componentType": {"type": ["object", "string", "null"], "title": "PositiveInt", "description": "The `PositiveInt` scalar type represents non-fractional signed whole\n    numeric values. PositiveInt can represent values between 1 and 2^31 - 1\n    inclusive"}, "versionId": {"type": ["object", "string", "null"], "title": "PositiveInt", "description": "The `PositiveInt` scalar type represents non-fractional signed whole\n    numeric values. PositiveInt can represent values between 1 and 2^31 - 1\n    inclusive"}, "isEnabled": {"type": ["boolean", "null"], "title": "Boolean", "description": "The `Boolean` scalar type represents `true` or `false`."}, "rank": {"type": ["object", "string", "null"], "title": "Int32", "description": "The `Int32` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1."}, "qaStatus": {"type": ["object", "string", "null"], "title": "PositiveInt", "description": "The `PositiveInt` scalar type represents non-fractional signed whole\n    numeric values. PositiveInt can represent values between 1 and 2^31 - 1\n    inclusive"}, "rejectionReasons": {"type": "array", "items": {"anyOf": [{"type": ["object", "string", "null"], "title": "PositiveInt", "description": "The `PositiveInt` scalar type represents non-fractional signed whole\n    numeric values. PositiveInt can represent values between 1 and 2^31 - 1\n    inclusive"}, {"type": "null"}]}}, "rejectionNote": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "isValidForDisplay": {"type": ["boolean", "null"], "title": "Boolean", "description": "The `Boolean` scalar type represents `true` or `false`."}}, "description": "A type for fields common to all brand page components"}, "attributeName": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "description": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "eventId": {"type": ["object", "string", "null"], "title": "PositiveInt", "description": "The `PositiveInt` scalar type represents non-fractional signed whole\n    numeric values. PositiveInt can represent values between 1 and 2^31 - 1\n    inclusive"}, "filterOptions": {"type": "array", "items": {"anyOf": [{"type": ["object", "string", "null"], "properties": {"id": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "url": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}}, "description": "The fields for the shop by attribute brand content component type"}, {"type": "null"}]}}}, "description": "The fields for the shop by attribute brand content component type"}, "BrandShopByAttributeFilterOptionType": {"type": ["object", "string", "null"], "properties": {"id": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "url": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}}, "description": "The fields for the shop by attribute brand content component type"}, "BrandTextBlock": {"type": ["object", "string", "null"], "properties": {"componentMetaData": {"type": ["object", "string", "null"], "properties": {"componentId": {"type": ["object", "string", "null"], "title": "PositiveInt", "description": "The `PositiveInt` scalar type represents non-fractional signed whole\n    numeric values. PositiveInt can represent values between 1 and 2^31 - 1\n    inclusive"}, "componentType": {"type": ["object", "string", "null"], "title": "PositiveInt", "description": "The `PositiveInt` scalar type represents non-fractional signed whole\n    numeric values. PositiveInt can represent values between 1 and 2^31 - 1\n    inclusive"}, "versionId": {"type": ["object", "string", "null"], "title": "PositiveInt", "description": "The `PositiveInt` scalar type represents non-fractional signed whole\n    numeric values. PositiveInt can represent values between 1 and 2^31 - 1\n    inclusive"}, "isEnabled": {"type": ["boolean", "null"], "title": "Boolean", "description": "The `Boolean` scalar type represents `true` or `false`."}, "rank": {"type": ["object", "string", "null"], "title": "Int32", "description": "The `Int32` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1."}, "qaStatus": {"type": ["object", "string", "null"], "title": "PositiveInt", "description": "The `PositiveInt` scalar type represents non-fractional signed whole\n    numeric values. PositiveInt can represent values between 1 and 2^31 - 1\n    inclusive"}, "rejectionReasons": {"type": "array", "items": {"anyOf": [{"type": ["object", "string", "null"], "title": "PositiveInt", "description": "The `PositiveInt` scalar type represents non-fractional signed whole\n    numeric values. PositiveInt can represent values between 1 and 2^31 - 1\n    inclusive"}, {"type": "null"}]}}, "rejectionNote": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "isValidForDisplay": {"type": ["boolean", "null"], "title": "Boolean", "description": "The `Boolean` scalar type represents `true` or `false`."}}, "description": "A type for fields common to all brand page components"}, "text": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "headline": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}}, "description": "A text block with a headline and paragraph"}, "BrandVideoHero": {"type": ["object", "string", "null"], "properties": {"componentMetaData": {"type": ["object", "string", "null"], "properties": {"componentId": {"type": ["object", "string", "null"], "title": "PositiveInt", "description": "The `PositiveInt` scalar type represents non-fractional signed whole\n    numeric values. PositiveInt can represent values between 1 and 2^31 - 1\n    inclusive"}, "componentType": {"type": ["object", "string", "null"], "title": "PositiveInt", "description": "The `PositiveInt` scalar type represents non-fractional signed whole\n    numeric values. PositiveInt can represent values between 1 and 2^31 - 1\n    inclusive"}, "versionId": {"type": ["object", "string", "null"], "title": "PositiveInt", "description": "The `PositiveInt` scalar type represents non-fractional signed whole\n    numeric values. PositiveInt can represent values between 1 and 2^31 - 1\n    inclusive"}, "isEnabled": {"type": ["boolean", "null"], "title": "Boolean", "description": "The `Boolean` scalar type represents `true` or `false`."}, "rank": {"type": ["object", "string", "null"], "title": "Int32", "description": "The `Int32` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1."}, "qaStatus": {"type": ["object", "string", "null"], "title": "PositiveInt", "description": "The `PositiveInt` scalar type represents non-fractional signed whole\n    numeric values. PositiveInt can represent values between 1 and 2^31 - 1\n    inclusive"}, "rejectionReasons": {"type": "array", "items": {"anyOf": [{"type": ["object", "string", "null"], "title": "PositiveInt", "description": "The `PositiveInt` scalar type represents non-fractional signed whole\n    numeric values. PositiveInt can represent values between 1 and 2^31 - 1\n    inclusive"}, {"type": "null"}]}}, "rejectionNote": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "isValidForDisplay": {"type": ["boolean", "null"], "title": "Boolean", "description": "The `Boolean` scalar type represents `true` or `false`."}}, "description": "A type for fields common to all brand page components"}, "vreid": {"type": ["object", "string", "null"], "title": "PositiveInt", "description": "The `PositiveInt` scalar type represents non-fractional signed whole\n    numeric values. PositiveInt can represent values between 1 and 2^31 - 1\n    inclusive"}, "previewImageId": {"type": ["object", "string", "null"], "title": "PositiveInt", "description": "The `PositiveInt` scalar type represents non-fractional signed whole\n    numeric values. PositiveInt can represent values between 1 and 2^31 - 1\n    inclusive"}}, "description": "A hero sized video"}, "BrandBannerCta": {"type": ["object", "string", "null"], "properties": {"componentMetaData": {"type": ["object", "string", "null"], "properties": {"componentId": {"type": ["object", "string", "null"], "title": "PositiveInt", "description": "The `PositiveInt` scalar type represents non-fractional signed whole\n    numeric values. PositiveInt can represent values between 1 and 2^31 - 1\n    inclusive"}, "componentType": {"type": ["object", "string", "null"], "title": "PositiveInt", "description": "The `PositiveInt` scalar type represents non-fractional signed whole\n    numeric values. PositiveInt can represent values between 1 and 2^31 - 1\n    inclusive"}, "versionId": {"type": ["object", "string", "null"], "title": "PositiveInt", "description": "The `PositiveInt` scalar type represents non-fractional signed whole\n    numeric values. PositiveInt can represent values between 1 and 2^31 - 1\n    inclusive"}, "isEnabled": {"type": ["boolean", "null"], "title": "Boolean", "description": "The `Boolean` scalar type represents `true` or `false`."}, "rank": {"type": ["object", "string", "null"], "title": "Int32", "description": "The `Int32` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1."}, "qaStatus": {"type": ["object", "string", "null"], "title": "PositiveInt", "description": "The `PositiveInt` scalar type represents non-fractional signed whole\n    numeric values. PositiveInt can represent values between 1 and 2^31 - 1\n    inclusive"}, "rejectionReasons": {"type": "array", "items": {"anyOf": [{"type": ["object", "string", "null"], "title": "PositiveInt", "description": "The `PositiveInt` scalar type represents non-fractional signed whole\n    numeric values. PositiveInt can represent values between 1 and 2^31 - 1\n    inclusive"}, {"type": "null"}]}}, "rejectionNote": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "isValidForDisplay": {"type": ["boolean", "null"], "title": "Boolean", "description": "The `Boolean` scalar type represents `true` or `false`."}}, "description": "A type for fields common to all brand page components"}, "headerText": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "description": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "ctaLink": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "ctaText": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "subheaderText": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "ireid": {"type": ["object", "string", "null"], "title": "PositiveInt", "description": "The `PositiveInt` scalar type represents non-fractional signed whole\n    numeric values. PositiveInt can represent values between 1 and 2^31 - 1\n    inclusive"}, "ctaOrientation": {"type": ["string", "null"], "anyOf": [{"enum": ["LEFT"], "title": "The left orientation for the banner's cta location. If designated, the CTA portion of the BrandBannerCta will appear on the left", "description": "The left orientation for the banner's cta location. If designated, the CTA portion of the BrandBannerCta will appear on the left"}, {"enum": ["RIGHT"], "title": "The right orientation for the banner's cta location. If designated, the CTA portion of the BrandBannerCta will appear on the right", "description": "The right orientation for the banner's cta location. If designated, the CTA portion of the BrandBannerCta will appear on the right"}, {"enum": ["CENTER"], "title": "The center orientation for the banner's cta location. If designated, the CTA portion of the BrandBannerCta will appear in the center", "description": "The center orientation for the banner's cta location. If designated, the CTA portion of the BrandBannerCta will appear in the center"}], "description": "Enum for banner with cta orientation. Determines how the CTA portion, in BrandBannerCta, is oriented"}}, "description": "A banner image with a call to action"}, "BRAND_BANNER_CTA_ORIENTATION": {"type": ["string", "null"], "anyOf": [{"enum": ["LEFT"], "title": "The left orientation for the banner's cta location. If designated, the CTA portion of the BrandBannerCta will appear on the left", "description": "The left orientation for the banner's cta location. If designated, the CTA portion of the BrandBannerCta will appear on the left"}, {"enum": ["RIGHT"], "title": "The right orientation for the banner's cta location. If designated, the CTA portion of the BrandBannerCta will appear on the right", "description": "The right orientation for the banner's cta location. If designated, the CTA portion of the BrandBannerCta will appear on the right"}, {"enum": ["CENTER"], "title": "The center orientation for the banner's cta location. If designated, the CTA portion of the BrandBannerCta will appear in the center", "description": "The center orientation for the banner's cta location. If designated, the CTA portion of the BrandBannerCta will appear in the center"}], "description": "Enum for banner with cta orientation. Determines how the CTA portion, in BrandBannerCta, is oriented"}, "BrandDefaultComponent": {"type": ["object", "string", "null"], "properties": {"componentMetaData": {"type": ["object", "string", "null"], "properties": {"componentId": {"type": ["object", "string", "null"], "title": "PositiveInt", "description": "The `PositiveInt` scalar type represents non-fractional signed whole\n    numeric values. PositiveInt can represent values between 1 and 2^31 - 1\n    inclusive"}, "componentType": {"type": ["object", "string", "null"], "title": "PositiveInt", "description": "The `PositiveInt` scalar type represents non-fractional signed whole\n    numeric values. PositiveInt can represent values between 1 and 2^31 - 1\n    inclusive"}, "versionId": {"type": ["object", "string", "null"], "title": "PositiveInt", "description": "The `PositiveInt` scalar type represents non-fractional signed whole\n    numeric values. PositiveInt can represent values between 1 and 2^31 - 1\n    inclusive"}, "isEnabled": {"type": ["boolean", "null"], "title": "Boolean", "description": "The `Boolean` scalar type represents `true` or `false`."}, "rank": {"type": ["object", "string", "null"], "title": "Int32", "description": "The `Int32` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1."}, "qaStatus": {"type": ["object", "string", "null"], "title": "PositiveInt", "description": "The `PositiveInt` scalar type represents non-fractional signed whole\n    numeric values. PositiveInt can represent values between 1 and 2^31 - 1\n    inclusive"}, "rejectionReasons": {"type": "array", "items": {"anyOf": [{"type": ["object", "string", "null"], "title": "PositiveInt", "description": "The `PositiveInt` scalar type represents non-fractional signed whole\n    numeric values. PositiveInt can represent values between 1 and 2^31 - 1\n    inclusive"}, {"type": "null"}]}}, "rejectionNote": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "isValidForDisplay": {"type": ["boolean", "null"], "title": "Boolean", "description": "The `Boolean` scalar type represents `true` or `false`."}}, "description": "A type for fields common to all brand page components"}}, "description": "The default type for brand components that have not been implemented on the config tool (e.g. product tabs)"}, "BrandSTLRoomExplorer": {"type": ["object", "string", "null"], "properties": {"componentMetaData": {"type": ["object", "string", "null"], "properties": {"componentId": {"type": ["object", "string", "null"], "title": "PositiveInt", "description": "The `PositiveInt` scalar type represents non-fractional signed whole\n    numeric values. PositiveInt can represent values between 1 and 2^31 - 1\n    inclusive"}, "componentType": {"type": ["object", "string", "null"], "title": "PositiveInt", "description": "The `PositiveInt` scalar type represents non-fractional signed whole\n    numeric values. PositiveInt can represent values between 1 and 2^31 - 1\n    inclusive"}, "versionId": {"type": ["object", "string", "null"], "title": "PositiveInt", "description": "The `PositiveInt` scalar type represents non-fractional signed whole\n    numeric values. PositiveInt can represent values between 1 and 2^31 - 1\n    inclusive"}, "isEnabled": {"type": ["boolean", "null"], "title": "Boolean", "description": "The `Boolean` scalar type represents `true` or `false`."}, "rank": {"type": ["object", "string", "null"], "title": "Int32", "description": "The `Int32` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1."}, "qaStatus": {"type": ["object", "string", "null"], "title": "PositiveInt", "description": "The `PositiveInt` scalar type represents non-fractional signed whole\n    numeric values. PositiveInt can represent values between 1 and 2^31 - 1\n    inclusive"}, "rejectionReasons": {"type": "array", "items": {"anyOf": [{"type": ["object", "string", "null"], "title": "PositiveInt", "description": "The `PositiveInt` scalar type represents non-fractional signed whole\n    numeric values. PositiveInt can represent values between 1 and 2^31 - 1\n    inclusive"}, {"type": "null"}]}}, "rejectionNote": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "isValidForDisplay": {"type": ["boolean", "null"], "title": "Boolean", "description": "The `Boolean` scalar type represents `true` or `false`."}}, "description": "A type for fields common to all brand page components"}, "tabs": {"type": "array", "items": {"type": ["object", "string", "null"], "properties": {"headerText": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "description": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "ctaLink": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "ctaText": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "ireid": {"type": ["object", "string", "null"], "title": "PositiveInt", "description": "The `PositiveInt` scalar type represents non-fractional signed whole\n    numeric values. PositiveInt can represent values between 1 and 2^31 - 1\n    inclusive"}, "tabName": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "tabRank": {"type": ["object", "string", "null"], "title": "PositiveInt", "description": "The `PositiveInt` scalar type represents non-fractional signed whole\n    numeric values. PositiveInt can represent values between 1 and 2^31 - 1\n    inclusive"}, "altText": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}}, "description": "A type for fields common to all stl room explorer tab components"}}}, "description": "A type for fields common to all stl room explorer components"}, "BrandSTLRoomExplorerTab": {"type": ["object", "string", "null"], "properties": {"headerText": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "description": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "ctaLink": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "ctaText": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "ireid": {"type": ["object", "string", "null"], "title": "PositiveInt", "description": "The `PositiveInt` scalar type represents non-fractional signed whole\n    numeric values. PositiveInt can represent values between 1 and 2^31 - 1\n    inclusive"}, "tabName": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "tabRank": {"type": ["object", "string", "null"], "title": "PositiveInt", "description": "The `PositiveInt` scalar type represents non-fractional signed whole\n    numeric values. PositiveInt can represent values between 1 and 2^31 - 1\n    inclusive"}, "altText": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}}, "description": "A type for fields common to all stl room explorer tab components"}, "BrandImageLiveText": {"type": ["object", "string", "null"], "properties": {"componentMetaData": {"type": ["object", "string", "null"], "properties": {"componentId": {"type": ["object", "string", "null"], "title": "PositiveInt", "description": "The `PositiveInt` scalar type represents non-fractional signed whole\n    numeric values. PositiveInt can represent values between 1 and 2^31 - 1\n    inclusive"}, "componentType": {"type": ["object", "string", "null"], "title": "PositiveInt", "description": "The `PositiveInt` scalar type represents non-fractional signed whole\n    numeric values. PositiveInt can represent values between 1 and 2^31 - 1\n    inclusive"}, "versionId": {"type": ["object", "string", "null"], "title": "PositiveInt", "description": "The `PositiveInt` scalar type represents non-fractional signed whole\n    numeric values. PositiveInt can represent values between 1 and 2^31 - 1\n    inclusive"}, "isEnabled": {"type": ["boolean", "null"], "title": "Boolean", "description": "The `Boolean` scalar type represents `true` or `false`."}, "rank": {"type": ["object", "string", "null"], "title": "Int32", "description": "The `Int32` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1."}, "qaStatus": {"type": ["object", "string", "null"], "title": "PositiveInt", "description": "The `PositiveInt` scalar type represents non-fractional signed whole\n    numeric values. PositiveInt can represent values between 1 and 2^31 - 1\n    inclusive"}, "rejectionReasons": {"type": "array", "items": {"anyOf": [{"type": ["object", "string", "null"], "title": "PositiveInt", "description": "The `PositiveInt` scalar type represents non-fractional signed whole\n    numeric values. PositiveInt can represent values between 1 and 2^31 - 1\n    inclusive"}, {"type": "null"}]}}, "rejectionNote": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "isValidForDisplay": {"type": ["boolean", "null"], "title": "Boolean", "description": "The `Boolean` scalar type represents `true` or `false`."}}, "description": "A type for fields common to all brand page components"}, "headerText": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "description": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "ctaLink": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "ctaText": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "ireid": {"type": ["object", "string", "null"], "title": "PositiveInt", "description": "The `PositiveInt` scalar type represents non-fractional signed whole\n    numeric values. PositiveInt can represent values between 1 and 2^31 - 1\n    inclusive"}, "isDarkText": {"type": ["boolean", "null"], "title": "Boolean", "description": "The `Boolean` scalar type represents `true` or `false`."}, "hasOverlay": {"type": ["boolean", "null"], "title": "Boolean", "description": "The `Boolean` scalar type represents `true` or `false`."}, "alignment": {"type": ["string", "null"], "anyOf": [{"enum": ["LEFT"], "title": "The left orientation for the banner's cta location. If designated, the CTA portion of the BrandBannerCta will appear on the left", "description": "The left orientation for the banner's cta location. If designated, the CTA portion of the BrandBannerCta will appear on the left"}, {"enum": ["RIGHT"], "title": "The right orientation for the banner's cta location. If designated, the CTA portion of the BrandBannerCta will appear on the right", "description": "The right orientation for the banner's cta location. If designated, the CTA portion of the BrandBannerCta will appear on the right"}, {"enum": ["CENTER"], "title": "The center orientation for the banner's cta location. If designated, the CTA portion of the BrandBannerCta will appear in the center", "description": "The center orientation for the banner's cta location. If designated, the CTA portion of the BrandBannerCta will appear in the center"}], "description": "Enum for banner with cta orientation. Determines how the CTA portion, in BrandBannerCta, is oriented"}}, "description": "Brand Image Live Text type"}, "BrandCelebrityFooter": {"type": ["object", "string", "null"], "properties": {"componentMetaData": {"type": ["object", "string", "null"], "properties": {"componentId": {"type": ["object", "string", "null"], "title": "PositiveInt", "description": "The `PositiveInt` scalar type represents non-fractional signed whole\n    numeric values. PositiveInt can represent values between 1 and 2^31 - 1\n    inclusive"}, "componentType": {"type": ["object", "string", "null"], "title": "PositiveInt", "description": "The `PositiveInt` scalar type represents non-fractional signed whole\n    numeric values. PositiveInt can represent values between 1 and 2^31 - 1\n    inclusive"}, "versionId": {"type": ["object", "string", "null"], "title": "PositiveInt", "description": "The `PositiveInt` scalar type represents non-fractional signed whole\n    numeric values. PositiveInt can represent values between 1 and 2^31 - 1\n    inclusive"}, "isEnabled": {"type": ["boolean", "null"], "title": "Boolean", "description": "The `Boolean` scalar type represents `true` or `false`."}, "rank": {"type": ["object", "string", "null"], "title": "Int32", "description": "The `Int32` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1."}, "qaStatus": {"type": ["object", "string", "null"], "title": "PositiveInt", "description": "The `PositiveInt` scalar type represents non-fractional signed whole\n    numeric values. PositiveInt can represent values between 1 and 2^31 - 1\n    inclusive"}, "rejectionReasons": {"type": "array", "items": {"anyOf": [{"type": ["object", "string", "null"], "title": "PositiveInt", "description": "The `PositiveInt` scalar type represents non-fractional signed whole\n    numeric values. PositiveInt can represent values between 1 and 2^31 - 1\n    inclusive"}, {"type": "null"}]}}, "rejectionNote": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "isValidForDisplay": {"type": ["boolean", "null"], "title": "Boolean", "description": "The `Boolean` scalar type represents `true` or `false`."}}, "description": "A type for fields common to all brand page components"}, "text": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "ireid": {"type": ["object", "string", "null"], "title": "PositiveInt", "description": "The `PositiveInt` scalar type represents non-fractional signed whole\n    numeric values. PositiveInt can represent values between 1 and 2^31 - 1\n    inclusive"}, "logoIreid": {"type": ["object", "string", "null"], "title": "PositiveInt", "description": "The `PositiveInt` scalar type represents non-fractional signed whole\n    numeric values. PositiveInt can represent values between 1 and 2^31 - 1\n    inclusive"}}, "description": "Brand celebrity footer type"}, "BrandShopCardCarousel": {"type": ["object", "string", "null"], "properties": {"componentMetaData": {"type": ["object", "string", "null"], "properties": {"componentId": {"type": ["object", "string", "null"], "title": "PositiveInt", "description": "The `PositiveInt` scalar type represents non-fractional signed whole\n    numeric values. PositiveInt can represent values between 1 and 2^31 - 1\n    inclusive"}, "componentType": {"type": ["object", "string", "null"], "title": "PositiveInt", "description": "The `PositiveInt` scalar type represents non-fractional signed whole\n    numeric values. PositiveInt can represent values between 1 and 2^31 - 1\n    inclusive"}, "versionId": {"type": ["object", "string", "null"], "title": "PositiveInt", "description": "The `PositiveInt` scalar type represents non-fractional signed whole\n    numeric values. PositiveInt can represent values between 1 and 2^31 - 1\n    inclusive"}, "isEnabled": {"type": ["boolean", "null"], "title": "Boolean", "description": "The `Boolean` scalar type represents `true` or `false`."}, "rank": {"type": ["object", "string", "null"], "title": "Int32", "description": "The `Int32` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1."}, "qaStatus": {"type": ["object", "string", "null"], "title": "PositiveInt", "description": "The `PositiveInt` scalar type represents non-fractional signed whole\n    numeric values. PositiveInt can represent values between 1 and 2^31 - 1\n    inclusive"}, "rejectionReasons": {"type": "array", "items": {"anyOf": [{"type": ["object", "string", "null"], "title": "PositiveInt", "description": "The `PositiveInt` scalar type represents non-fractional signed whole\n    numeric values. PositiveInt can represent values between 1 and 2^31 - 1\n    inclusive"}, {"type": "null"}]}}, "rejectionNote": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "isValidForDisplay": {"type": ["boolean", "null"], "title": "Boolean", "description": "The `Boolean` scalar type represents `true` or `false`."}}, "description": "A type for fields common to all brand page components"}, "headerText": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "description": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "manufacturerIds": {"type": "array", "items": {"anyOf": [{"type": ["object", "string", "null"], "title": "Int64", "description": "The `Int64` scalar type represents non-fractional signed whole numeric values. Int can represent values between PHP_INT_MIN AND PHP_INT_MAX."}, {"type": "null"}]}}}, "description": "Brand shop card carousel type"}, "BrandCustomizedNavigation": {"type": ["object", "string", "null"], "properties": {"componentMetaData": {"type": ["object", "string", "null"], "properties": {"componentId": {"type": ["object", "string", "null"], "title": "PositiveInt", "description": "The `PositiveInt` scalar type represents non-fractional signed whole\n    numeric values. PositiveInt can represent values between 1 and 2^31 - 1\n    inclusive"}, "componentType": {"type": ["object", "string", "null"], "title": "PositiveInt", "description": "The `PositiveInt` scalar type represents non-fractional signed whole\n    numeric values. PositiveInt can represent values between 1 and 2^31 - 1\n    inclusive"}, "versionId": {"type": ["object", "string", "null"], "title": "PositiveInt", "description": "The `PositiveInt` scalar type represents non-fractional signed whole\n    numeric values. PositiveInt can represent values between 1 and 2^31 - 1\n    inclusive"}, "isEnabled": {"type": ["boolean", "null"], "title": "Boolean", "description": "The `Boolean` scalar type represents `true` or `false`."}, "rank": {"type": ["object", "string", "null"], "title": "Int32", "description": "The `Int32` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1."}, "qaStatus": {"type": ["object", "string", "null"], "title": "PositiveInt", "description": "The `PositiveInt` scalar type represents non-fractional signed whole\n    numeric values. PositiveInt can represent values between 1 and 2^31 - 1\n    inclusive"}, "rejectionReasons": {"type": "array", "items": {"anyOf": [{"type": ["object", "string", "null"], "title": "PositiveInt", "description": "The `PositiveInt` scalar type represents non-fractional signed whole\n    numeric values. PositiveInt can represent values between 1 and 2^31 - 1\n    inclusive"}, {"type": "null"}]}}, "rejectionNote": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "isValidForDisplay": {"type": ["boolean", "null"], "title": "Boolean", "description": "The `Boolean` scalar type represents `true` or `false`."}}, "description": "A type for fields common to all brand page components"}, "headerText": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "description": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "links": {"type": "array", "items": {"anyOf": [{"type": ["object", "string", "null"], "properties": {"name": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "url": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "ireid": {"type": ["object", "string", "null"], "title": "PositiveInt", "description": "The `PositiveInt` scalar type represents non-fractional signed whole\n    numeric values. PositiveInt can represent values between 1 and 2^31 - 1\n    inclusive"}}, "description": "The fields for the customized navigation component type link"}, {"type": "null"}]}}}, "description": "The brand component for customized navigation powered by links"}, "BrandCustomizedNavigationLinkType": {"type": ["object", "string", "null"], "properties": {"name": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "url": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "ireid": {"type": ["object", "string", "null"], "title": "PositiveInt", "description": "The `PositiveInt` scalar type represents non-fractional signed whole\n    numeric values. PositiveInt can represent values between 1 and 2^31 - 1\n    inclusive"}}, "description": "The fields for the customized navigation component type link"}, "BrandB2BDynamicBAMCard": {"type": ["object", "string", "null"], "properties": {"componentMetaData": {"type": ["object", "string", "null"], "properties": {"componentId": {"type": ["object", "string", "null"], "title": "PositiveInt", "description": "The `PositiveInt` scalar type represents non-fractional signed whole\n    numeric values. PositiveInt can represent values between 1 and 2^31 - 1\n    inclusive"}, "componentType": {"type": ["object", "string", "null"], "title": "PositiveInt", "description": "The `PositiveInt` scalar type represents non-fractional signed whole\n    numeric values. PositiveInt can represent values between 1 and 2^31 - 1\n    inclusive"}, "versionId": {"type": ["object", "string", "null"], "title": "PositiveInt", "description": "The `PositiveInt` scalar type represents non-fractional signed whole\n    numeric values. PositiveInt can represent values between 1 and 2^31 - 1\n    inclusive"}, "isEnabled": {"type": ["boolean", "null"], "title": "Boolean", "description": "The `Boolean` scalar type represents `true` or `false`."}, "rank": {"type": ["object", "string", "null"], "title": "Int32", "description": "The `Int32` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1."}, "qaStatus": {"type": ["object", "string", "null"], "title": "PositiveInt", "description": "The `PositiveInt` scalar type represents non-fractional signed whole\n    numeric values. PositiveInt can represent values between 1 and 2^31 - 1\n    inclusive"}, "rejectionReasons": {"type": "array", "items": {"anyOf": [{"type": ["object", "string", "null"], "title": "PositiveInt", "description": "The `PositiveInt` scalar type represents non-fractional signed whole\n    numeric values. PositiveInt can represent values between 1 and 2^31 - 1\n    inclusive"}, {"type": "null"}]}}, "rejectionNote": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "isValidForDisplay": {"type": ["boolean", "null"], "title": "Boolean", "description": "The `Boolean` scalar type represents `true` or `false`."}}, "description": "A type for fields common to all brand page components"}, "managedAccountHeaderText": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "unmanagedAccountHeaderText": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}}, "description": "B2B dynamic bam card type"}, "BrandSubcategoryNavigation": {"type": ["object", "string", "null"], "properties": {"componentMetaData": {"type": ["object", "string", "null"], "properties": {"componentId": {"type": ["object", "string", "null"], "title": "PositiveInt", "description": "The `PositiveInt` scalar type represents non-fractional signed whole\n    numeric values. PositiveInt can represent values between 1 and 2^31 - 1\n    inclusive"}, "componentType": {"type": ["object", "string", "null"], "title": "PositiveInt", "description": "The `PositiveInt` scalar type represents non-fractional signed whole\n    numeric values. PositiveInt can represent values between 1 and 2^31 - 1\n    inclusive"}, "versionId": {"type": ["object", "string", "null"], "title": "PositiveInt", "description": "The `PositiveInt` scalar type represents non-fractional signed whole\n    numeric values. PositiveInt can represent values between 1 and 2^31 - 1\n    inclusive"}, "isEnabled": {"type": ["boolean", "null"], "title": "Boolean", "description": "The `Boolean` scalar type represents `true` or `false`."}, "rank": {"type": ["object", "string", "null"], "title": "Int32", "description": "The `Int32` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1."}, "qaStatus": {"type": ["object", "string", "null"], "title": "PositiveInt", "description": "The `PositiveInt` scalar type represents non-fractional signed whole\n    numeric values. PositiveInt can represent values between 1 and 2^31 - 1\n    inclusive"}, "rejectionReasons": {"type": "array", "items": {"anyOf": [{"type": ["object", "string", "null"], "title": "PositiveInt", "description": "The `PositiveInt` scalar type represents non-fractional signed whole\n    numeric values. PositiveInt can represent values between 1 and 2^31 - 1\n    inclusive"}, {"type": "null"}]}}, "rejectionNote": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "isValidForDisplay": {"type": ["boolean", "null"], "title": "Boolean", "description": "The `Boolean` scalar type represents `true` or `false`."}}, "description": "A type for fields common to all brand page components"}, "headerText": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "subheaderText": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "useLargeImagery": {"type": ["boolean", "null"], "title": "Boolean", "description": "The `Boolean` scalar type represents `true` or `false`."}}, "description": "The brand component for subcategory navigation"}, "BrandMap": {"type": ["object", "string", "null"], "properties": {"componentMetaData": {"type": ["object", "string", "null"], "properties": {"componentId": {"type": ["object", "string", "null"], "title": "PositiveInt", "description": "The `PositiveInt` scalar type represents non-fractional signed whole\n    numeric values. PositiveInt can represent values between 1 and 2^31 - 1\n    inclusive"}, "componentType": {"type": ["object", "string", "null"], "title": "PositiveInt", "description": "The `PositiveInt` scalar type represents non-fractional signed whole\n    numeric values. PositiveInt can represent values between 1 and 2^31 - 1\n    inclusive"}, "versionId": {"type": ["object", "string", "null"], "title": "PositiveInt", "description": "The `PositiveInt` scalar type represents non-fractional signed whole\n    numeric values. PositiveInt can represent values between 1 and 2^31 - 1\n    inclusive"}, "isEnabled": {"type": ["boolean", "null"], "title": "Boolean", "description": "The `Boolean` scalar type represents `true` or `false`."}, "rank": {"type": ["object", "string", "null"], "title": "Int32", "description": "The `Int32` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1."}, "qaStatus": {"type": ["object", "string", "null"], "title": "PositiveInt", "description": "The `PositiveInt` scalar type represents non-fractional signed whole\n    numeric values. PositiveInt can represent values between 1 and 2^31 - 1\n    inclusive"}, "rejectionReasons": {"type": "array", "items": {"anyOf": [{"type": ["object", "string", "null"], "title": "PositiveInt", "description": "The `PositiveInt` scalar type represents non-fractional signed whole\n    numeric values. PositiveInt can represent values between 1 and 2^31 - 1\n    inclusive"}, {"type": "null"}]}}, "rejectionNote": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "isValidForDisplay": {"type": ["boolean", "null"], "title": "Boolean", "description": "The `Boolean` scalar type represents `true` or `false`."}}, "description": "A type for fields common to all brand page components"}, "mapImageUrl": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "altText": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "ctaLink": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "isPageTitle": {"type": ["boolean", "null"], "title": "Boolean", "description": "The `Boolean` scalar type represents `true` or `false`."}}, "description": "The image resource id of an image component on a brand page"}, "BrandMapCta": {"type": ["object", "string", "null"], "properties": {"componentMetaData": {"type": ["object", "string", "null"], "properties": {"componentId": {"type": ["object", "string", "null"], "title": "PositiveInt", "description": "The `PositiveInt` scalar type represents non-fractional signed whole\n    numeric values. PositiveInt can represent values between 1 and 2^31 - 1\n    inclusive"}, "componentType": {"type": ["object", "string", "null"], "title": "PositiveInt", "description": "The `PositiveInt` scalar type represents non-fractional signed whole\n    numeric values. PositiveInt can represent values between 1 and 2^31 - 1\n    inclusive"}, "versionId": {"type": ["object", "string", "null"], "title": "PositiveInt", "description": "The `PositiveInt` scalar type represents non-fractional signed whole\n    numeric values. PositiveInt can represent values between 1 and 2^31 - 1\n    inclusive"}, "isEnabled": {"type": ["boolean", "null"], "title": "Boolean", "description": "The `Boolean` scalar type represents `true` or `false`."}, "rank": {"type": ["object", "string", "null"], "title": "Int32", "description": "The `Int32` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1."}, "qaStatus": {"type": ["object", "string", "null"], "title": "PositiveInt", "description": "The `PositiveInt` scalar type represents non-fractional signed whole\n    numeric values. PositiveInt can represent values between 1 and 2^31 - 1\n    inclusive"}, "rejectionReasons": {"type": "array", "items": {"anyOf": [{"type": ["object", "string", "null"], "title": "PositiveInt", "description": "The `PositiveInt` scalar type represents non-fractional signed whole\n    numeric values. PositiveInt can represent values between 1 and 2^31 - 1\n    inclusive"}, {"type": "null"}]}}, "rejectionNote": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "isValidForDisplay": {"type": ["boolean", "null"], "title": "Boolean", "description": "The `Boolean` scalar type represents `true` or `false`."}}, "description": "A type for fields common to all brand page components"}, "headerText": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "description": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "ctaLink": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "ctaText": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "textLocation": {"type": ["string", "null"], "anyOf": [{"enum": ["TEXT_LOCATION_RIGHT"], "title": "Denotes that the text should be to the right of the image/video", "description": "Denotes that the text should be to the right of the image/video"}, {"enum": ["TEXT_LOCATION_LEFT"], "title": "Denotes that the text should be to the left of the image/video", "description": "Denotes that the text should be to the left of the image/video"}], "description": "Enum for brand text location information. Denotes where the text appears in relation to the image/video for brand components"}, "mapImageUrl": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}, "altText": {"type": ["string", "null"], "title": "String", "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."}}, "description": "An image with a call to action"}}}, "supported_sync_modes": ["full_refresh", "incremental"], "source_defined_cursor": true, "default_cursor_field": ["poDate"], "source_defined_primary_key": [["poNumber"]]}]}}
