{
    "type": "object",
    "properties": {
        "wsaId": {
            "$ref": "#/definitions/String"
        },
        "supplierId": {
            "$ref": "#/definitions/Int32"
        },
        "poNumber": {
            "$ref": "#/definitions/String"
        },
        "fulfillmentCustomerOrderNumber": {
            "$ref": "#/definitions/String"
        },
        "fulfillmentCustomerId": {
            "$ref": "#/definitions/Int32"
        },
        "retailerOrderNumber": {
            "$ref": "#/definitions/String"
        },
        "fulfillmentPurchaseOrderNumber": {
            "$ref": "#/definitions/String"
        },
        "creationDate": {
            "$ref": "#/definitions/IsoDateTime"
        },
        "shipDate": {
            "$ref": "#/definitions/IsoDateTime"
        },
        "shipSpeed": {
            "$ref": "#/definitions/String"
        },
        "carrierCode": {
            "$ref": "#/definitions/String"
        },
        "totalShipmentWeight": {
            "$ref": "#/definitions/Float"
        },
        "totalQuantity": {
            "$ref": "#/definitions/Int32"
        },
        "clientNumber": {
            "$ref": "#/definitions/String"
        },
        "warehouseId": {
            "$ref": "#/definitions/Int32"
        },
        "actionDate": {
            "$ref": "#/definitions/IsoDateTime"
        },
        "transactionHandle": {
            "$ref": "#/definitions/String"
        },
        "packages": {
            "type": "array",
            "items": {
                "anyOf": [
                    {
                        "$ref": "#/definitions/WarehouseShippingAdvicePackageType"
                    },
                    {
                        "type": "null"
                    }
                ]
            }
        },
        "shipFrom": {
            "$ref": "#/definitions/WarehouseShippingAdviceAddress"
        },
        "shipTo": {
            "$ref": "#/definitions/WarehouseShippingAdviceAddress"
        },
        "products": {
            "type": "array",
            "items": {
                "anyOf": [
                    {
                        "$ref": "#/definitions/WarehouseShippingAdviceProduct"
                    },
                    {
                        "type": "null"
                    }
                ]
            }
        }
    },
    "description": "A warehouse shipping advice",
    "$schema": "http://json-schema.org/draft-06/schema#",
    "definitions": {
        "Boolean": {
            "type": "boolean",
            "title": "Boolean",
            "description": "The `Boolean` scalar type represents `true` or `false`."
        },
        "String": {
            "type": "string",
            "title": "String",
            "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."
        },
        "Int": {
            "type": "number",
            "title": "Int",
            "description": "The `Int` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1."
        },
        "Int32": {
            "type": "object",
            "title": "Int32",
            "description": "The `Int32` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1."
        },
        "IsoDateTime": {
            "type": "object",
            "title": "IsoDateTime",
            "description": "A date and time in the ISO 8601 format.\n\nFormat Rules:\n  - Everything must be in the ISO 8601 extended format (- separator for dates and : for time)\n  - The date and time separator is allowed to be a space or \"T\"\n  - There does not need to be a separator between time and timezone, but a space can be provided\n  - Year and month are always required\n  - Timezone is always optional if a time is provided (if no time is provided a timezone cannot be provided either)\n  - Any optional fields not provided will default to their value in the Unix epoch\n  - If any optional field is provided all larger time components must always be provided (a time cannot be provided if a day is not)"
        },
        "SortOrder": {
            "type": "string",
            "anyOf": [
                {
                    "enum": [
                        "ASC"
                    ],
                    "title": "Ascending order",
                    "description": "Ascending order"
                },
                {
                    "enum": [
                        "DESC"
                    ],
                    "title": "Descending order",
                    "description": "Descending order"
                }
            ],
            "description": "The values a result set can be sorted in."
        },
        "PurchaseOrder_v2": {
            "type": "object",
            "properties": {
                "id": {
                    "$ref": "#/definitions/Int"
                },
                "storePrefix": {
                    "$ref": "#/definitions/String"
                },
                "poNumber": {
                    "$ref": "#/definitions/String"
                },
                "poDate": {
                    "$ref": "#/definitions/IsoDateTime"
                },
                "orderId": {
                    "$ref": "#/definitions/Int"
                },
                "supplierId": {
                    "$ref": "#/definitions/Int"
                },
                "supplierName": {
                    "$ref": "#/definitions/String"
                },
                "supplierAddress1": {
                    "$ref": "#/definitions/String"
                },
                "supplierAddress2": {
                    "$ref": "#/definitions/String"
                },
                "supplierAddress3": {
                    "$ref": "#/definitions/String"
                },
                "supplierCity": {
                    "$ref": "#/definitions/String"
                },
                "supplierState": {
                    "$ref": "#/definitions/String"
                },
                "supplierPostalCode": {
                    "$ref": "#/definitions/String"
                },
                "estimatedShipDate": {
                    "$ref": "#/definitions/IsoDateTime"
                },
                "scheduledDeliveryDate": {
                    "$ref": "#/definitions/IsoDateTime"
                },
                "deliveryMethodCode": {
                    "$ref": "#/definitions/String"
                },
                "customerName": {
                    "$ref": "#/definitions/String"
                },
                "customerAddress1": {
                    "$ref": "#/definitions/String"
                },
                "customerAddress2": {
                    "$ref": "#/definitions/String"
                },
                "customerCity": {
                    "$ref": "#/definitions/String"
                },
                "customerState": {
                    "$ref": "#/definitions/String"
                },
                "customerPostalCode": {
                    "$ref": "#/definitions/String"
                },
                "customerCountry": {
                    "$ref": "#/definitions/String"
                },
                "customerEmail": {
                    "$ref": "#/definitions/String"
                },
                "salesChannelName": {
                    "$ref": "#/definitions/String"
                },
                "orderType": {
                    "$ref": "#/definitions/String"
                },
                "shippingInfo": {
                    "$ref": "#/definitions/PurchaseOrderShipping"
                },
                "packingSlipUrl": {
                    "$ref": "#/definitions/String"
                },
                "warehouse": {
                    "$ref": "#/definitions/Warehouse"
                },
                "products": {
                    "type": "array",
                    "items": {
                        "anyOf": [
                            {
                                "$ref": "#/definitions/PurchaseOrderProduct"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    }
                },
                "shipTo": {
                    "$ref": "#/definitions/Address"
                },
                "billTo": {
                    "$ref": "#/definitions/Address"
                },
                "billingInfo": {
                    "$ref": "#/definitions/BillingInfo"
                }
            },
            "description": "Represents information related to purchase orders"
        },
        "PurchaseOrderShipping": {
            "type": "object",
            "properties": {
                "shipSpeed": {
                    "$ref": "#/definitions/ShipSpeed"
                },
                "carrierCode": {
                    "$ref": "#/definitions/String"
                },
                "poolPointAgent": {
                    "$ref": "#/definitions/Agent"
                },
                "crossDockAgent": {
                    "$ref": "#/definitions/Agent"
                },
                "deliveryAgent": {
                    "$ref": "#/definitions/Agent"
                }
            },
            "description": "Shipping information related to a purchase order"
        },
        "ShipSpeed": {
            "type": "string",
            "anyOf": [
                {
                    "enum": [
                        "SECOND_DAY_AIR"
                    ],
                    "title": "2nd Day Air Delivery",
                    "description": "2nd Day Air Delivery"
                },
                {
                    "enum": [
                        "SECOND_DAY_AIR_FREE"
                    ],
                    "title": "2-Day Delivery -- Free!",
                    "description": "2-Day Delivery -- Free!"
                },
                {
                    "enum": [
                        "FIVE_DAY_DIRECT"
                    ],
                    "title": "Global 5-Day Direct Delivery",
                    "description": "Global 5-Day Direct Delivery"
                },
                {
                    "enum": [
                        "THREE_DAY"
                    ],
                    "title": "3 Day Delivery",
                    "description": "3 Day Delivery"
                },
                {
                    "enum": [
                        "CONTAINER"
                    ],
                    "title": "Container",
                    "description": "Container"
                },
                {
                    "enum": [
                        "EMAIL"
                    ],
                    "title": "Zustellung per Email",
                    "description": "Zustellung per Email"
                },
                {
                    "enum": [
                        "FEDEX_HOME"
                    ],
                    "title": "FedEx Home Delivery",
                    "description": "FedEx Home Delivery"
                },
                {
                    "enum": [
                        "GROUND"
                    ],
                    "title": "Small Parcel Courier",
                    "description": "Small Parcel Courier"
                },
                {
                    "enum": [
                        "PAKETVERSAND"
                    ],
                    "title": "Small Parcel Courier",
                    "description": "Small Parcel Courier"
                },
                {
                    "enum": [
                        "IMPERIAL_POOL_FREIGHT"
                    ],
                    "title": "Imperial Pool Freight",
                    "description": "Imperial Pool Freight"
                },
                {
                    "enum": [
                        "NEXT_DAY"
                    ],
                    "title": "Next Day Air",
                    "description": "Next Day Air"
                },
                {
                    "enum": [
                        "NEXT_DAY_OVERSEAS"
                    ],
                    "title": "Next Day Air (AK,HI,PR)",
                    "description": "Next Day Air (AK,HI,PR)"
                },
                {
                    "enum": [
                        "NEXT_MORNING"
                    ],
                    "title": "UK - SP - Next day before noon",
                    "description": "UK - SP - Next day before noon"
                },
                {
                    "enum": [
                        "NEXT_DAY_BEFORE_NINE"
                    ],
                    "title": "UK - SP - Next day before 9am",
                    "description": "UK - SP - Next day before 9am"
                },
                {
                    "enum": [
                        "WILL_CALL"
                    ],
                    "title": "Will Call",
                    "description": "Will Call"
                },
                {
                    "enum": [
                        "SATURDAY_DELIVERY"
                    ],
                    "title": "UK - SP - Saturday delivery",
                    "description": "UK - SP - Saturday delivery"
                },
                {
                    "enum": [
                        "TRUCK_FREIGHT_CASKETS_ONE_DAY"
                    ],
                    "title": "Casket Delivery - 1 Day",
                    "description": "Casket Delivery - 1 Day"
                },
                {
                    "enum": [
                        "TRUCK_FREIGHT_CASKETS_TWO_DAY"
                    ],
                    "title": "Casket Delivery - 2 Day",
                    "description": "Casket Delivery - 2 Day"
                },
                {
                    "enum": [
                        "CURBSIDE_WITH_UNLOAD"
                    ],
                    "title": "Curbside with unload service",
                    "description": "Curbside with unload service"
                },
                {
                    "enum": [
                        "TRUCK_LOAD"
                    ],
                    "title": "Truck Load",
                    "description": "Truck Load"
                },
                {
                    "enum": [
                        "CURBSIDE"
                    ],
                    "title": "Curbside without unload service",
                    "description": "Curbside without unload service"
                },
                {
                    "enum": [
                        "WHITE_GLOVE_BRONZE"
                    ],
                    "title": "Spedition - frei Bordsteinkante",
                    "description": "Spedition - frei Bordsteinkante"
                },
                {
                    "enum": [
                        "WHITE_GLOVE_GOLD"
                    ],
                    "title": "Room of Choice & Packaging Removal",
                    "description": "Room of Choice & Packaging Removal"
                },
                {
                    "enum": [
                        "WHITE_GLOVE_TWO_MAN"
                    ],
                    "title": "Premium 2-Man Delivery",
                    "description": "Premium 2-Man Delivery"
                },
                {
                    "enum": [
                        "WHITE_GLOVE_PLATINUM"
                    ],
                    "title": "Room of Choice Delivery with Installation",
                    "description": "Room of Choice Delivery with Installation"
                },
                {
                    "enum": [
                        "WHITE_GLOVE_SILVER"
                    ],
                    "title": "Room of Choice",
                    "description": "Room of Choice"
                },
                {
                    "enum": [
                        "TRUCK_FREIGHT_THRESHOLD"
                    ],
                    "title": "Truck Freight - Threshold",
                    "description": "Truck Freight - Threshold"
                },
                {
                    "enum": [
                        "STANDARD_VERSAND_SPERRGUT"
                    ],
                    "title": "Standard-Versand Sperrgut",
                    "description": "Standard-Versand Sperrgut"
                },
                {
                    "enum": [
                        "ALMO"
                    ],
                    "title": "ALMO - Room of Choice + Removal of Old Appliance",
                    "description": "ALMO - Room of Choice + Removal of Old Appliance"
                },
                {
                    "enum": [
                        "LARGE_PARCEL_COURIER"
                    ],
                    "title": "Large Parcel Courier",
                    "description": "Large Parcel Courier"
                },
                {
                    "enum": [
                        "EUROPEAN_LINE_HAUL"
                    ],
                    "title": "European Line Haul",
                    "description": "European Line Haul"
                },
                {
                    "enum": [
                        "ECONOMY"
                    ],
                    "title": "Economy",
                    "description": "Economy"
                },
                {
                    "enum": [
                        "WHITE_GLOVE_ROOM_OF_CHOICE"
                    ],
                    "title": "White Glove Delivery - Room of Choice",
                    "description": "White Glove Delivery - Room of Choice"
                },
                {
                    "enum": [
                        "TINY_PARCEL"
                    ],
                    "title": "Small Parcel",
                    "description": "Small Parcel"
                },
                {
                    "enum": [
                        "GROUND_OVERSEA"
                    ],
                    "title": "GROUND (AK,HI,PR)",
                    "description": "GROUND (AK,HI,PR)"
                },
                {
                    "enum": [
                        "LOW_COST_CARRIER"
                    ],
                    "title": "Low Cost Carrier",
                    "description": "Low Cost Carrier"
                },
                {
                    "enum": [
                        "WHITE_GLOVE_INNOVEL"
                    ],
                    "title": "Innovel Delivery Service",
                    "description": "Innovel Delivery Service"
                },
                {
                    "enum": [
                        "BACKYARD"
                    ],
                    "title": "Backyard Drop-Off",
                    "description": "Backyard Drop-Off"
                },
                {
                    "enum": [
                        "CURBSIDE_DELIVERY"
                    ],
                    "title": "Curbside Delivery",
                    "description": "Curbside Delivery"
                },
                {
                    "enum": [
                        "INSIDE_DELIVERY_PACKAGING_REMOVAL_REMOVAL_OF_OLD_APPLIANCE"
                    ],
                    "title": "Inside Delivery - Packaging Removal & Removal of Old Appliance",
                    "description": "Inside Delivery - Packaging Removal & Removal of Old Appliance"
                },
                {
                    "enum": [
                        "ONE_MAN_PREMIUM"
                    ],
                    "title": "One Man Premium",
                    "description": "One Man Premium"
                },
                {
                    "enum": [
                        "INSIDE_DELIVERY_PACKAGING_REMOVAL"
                    ],
                    "title": "Inside Delivery - Packaging Removal",
                    "description": "Inside Delivery - Packaging Removal"
                },
                {
                    "enum": [
                        "THRESHOLD_DELIVERY"
                    ],
                    "title": "Threshold Delivery",
                    "description": "Threshold Delivery"
                },
                {
                    "enum": [
                        "UK_1_MAN_48HRS"
                    ],
                    "title": "Large Parcel Courier",
                    "description": "Large Parcel Courier"
                },
                {
                    "enum": [
                        "ALLIED_ROAD_EXPRESS"
                    ],
                    "title": "Allied Road Express",
                    "description": "Allied Road Express"
                },
                {
                    "enum": [
                        "HUNTER_ROAD_EXPRESS"
                    ],
                    "title": "Hunter Road Express",
                    "description": "Hunter Road Express"
                },
                {
                    "enum": [
                        "WHITE_GLOVE_CAPITAL_CITIES"
                    ],
                    "title": "White Glove - Capital Cities",
                    "description": "White Glove - Capital Cities"
                },
                {
                    "enum": [
                        "SPEDITION_FREI_BORDSTEINKANTE"
                    ],
                    "title": "Spedition - frei Bordsteinkante",
                    "description": "Spedition - frei Bordsteinkante"
                },
                {
                    "enum": [
                        "UK_1_MAN_LONG_DELIVERY"
                    ],
                    "title": "Large Parcel Courier",
                    "description": "Large Parcel Courier"
                },
                {
                    "enum": [
                        "IN_HOME_MATTRESS_SET_UP_REMOVAL"
                    ],
                    "title": "In Home Mattress Set Up & Removal",
                    "description": "In Home Mattress Set Up & Removal"
                },
                {
                    "enum": [
                        "WHITE_GLOVE_DELIVERY_ROOM_OF_CHOICE_W_INSTALLATION"
                    ],
                    "title": "Room of Choice Delivery w/ Installation",
                    "description": "Room of Choice Delivery w/ Installation"
                },
                {
                    "enum": [
                        "WHITE_GLOVE_DELIVERY_ROOM_OF_CHOICE_W_INSTALLATION_HAUL_AWAY"
                    ],
                    "title": "Room of Choice Delivery w/ Installation & Haul Away",
                    "description": "Room of Choice Delivery w/ Installation & Haul Away"
                },
                {
                    "enum": [
                        "WHITE_GLOVE_DELIVERY_ROOM_OF_CHOICE_W_HAUL_AWAY"
                    ],
                    "title": "Room of Choice Delivery w/ Haul Away",
                    "description": "Room of Choice Delivery w/ Haul Away"
                },
                {
                    "enum": [
                        "ROOM_OF_CHOICE_DELIVERY_W_MOVE_TO_ANOTHER_ROOM"
                    ],
                    "title": "Room of Choice Delivery w/ Move to Another Room",
                    "description": "Room of Choice Delivery w/ Move to Another Room"
                },
                {
                    "enum": [
                        "ROOM_OF_CHOICE_DELIVERY_W_INSTALL_MOVE_TO_ANOTHER_ROOM"
                    ],
                    "title": "Room of Choice Delivery w/ Install & Move to Another Room",
                    "description": "Room of Choice Delivery w/ Install & Move to Another Room"
                },
                {
                    "enum": [
                        "GE_WG_DELIVERY"
                    ],
                    "title": "Room of Choice Delivery",
                    "description": "Room of Choice Delivery"
                },
                {
                    "enum": [
                        "SAMSUNG_WG_DELIVERY"
                    ],
                    "title": "Samsung Delivery Service",
                    "description": "Samsung Delivery Service"
                },
                {
                    "enum": [
                        "WAYFAIR_LARGE_APPLIANCES_DELIVERY"
                    ],
                    "title": "Wayfair Large Appliances Delivery",
                    "description": "Wayfair Large Appliances Delivery"
                },
                {
                    "enum": [
                        "WAYFAIR_OFF_THE_SHELF"
                    ],
                    "title": "Off The Shelf Item",
                    "description": "Off The Shelf Item"
                }
            ],
            "description": "The different ship speed delivery methods."
        },
        "Agent": {
            "type": "object",
            "properties": {
                "id": {
                    "$ref": "#/definitions/ID"
                },
                "name": {
                    "$ref": "#/definitions/String"
                }
            },
            "description": "A transportation agent"
        },
        "ID": {
            "type": "object",
            "title": "ID",
            "description": "The `ID` scalar type represents a unique identifier, often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\"4\"`) or integer (such as `4`) input value will be accepted as an ID."
        },
        "Warehouse": {
            "type": "object",
            "properties": {
                "id": {
                    "$ref": "#/definitions/ID"
                },
                "name": {
                    "$ref": "#/definitions/String"
                },
                "address": {
                    "$ref": "#/definitions/Address"
                },
                "supplier": {
                    "$ref": "#/definitions/Supplier"
                }
            },
            "description": "Information for a supplier warehouse"
        },
        "Address": {
            "type": "object",
            "properties": {
                "name": {
                    "$ref": "#/definitions/String"
                },
                "address1": {
                    "$ref": "#/definitions/String"
                },
                "address2": {
                    "$ref": "#/definitions/String"
                },
                "address3": {
                    "$ref": "#/definitions/String"
                },
                "city": {
                    "$ref": "#/definitions/String"
                },
                "state": {
                    "$ref": "#/definitions/String"
                },
                "country": {
                    "$ref": "#/definitions/String"
                },
                "postalCode": {
                    "$ref": "#/definitions/String"
                },
                "phoneNumber": {
                    "$ref": "#/definitions/String"
                }
            },
            "description": "An address"
        },
        "Supplier": {
            "type": "object",
            "properties": {
                "id": {
                    "$ref": "#/definitions/ID"
                },
                "name": {
                    "$ref": "#/definitions/String"
                },
                "shortName": {
                    "$ref": "#/definitions/String"
                },
                "status": {
                    "$ref": "#/definitions/SupplierStatus"
                },
                "websiteURL": {
                    "$ref": "#/definitions/String"
                },
                "currency": {
                    "$ref": "#/definitions/ExtranetCurrency"
                },
                "scopes": {
                    "type": "array",
                    "items": {
                        "anyOf": [
                            {
                                "$ref": "#/definitions/Scope"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    }
                },
                "warehouses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Warehouse"
                    }
                }
            },
            "description": "A supplier entity."
        },
        "SupplierStatus": {
            "type": "string",
            "anyOf": [
                {
                    "enum": [
                        "ACTIVE"
                    ],
                    "title": "Active Status",
                    "description": "Active Status"
                },
                {
                    "enum": [
                        "INACTIVE"
                    ],
                    "title": "Inactive Status",
                    "description": "Inactive Status"
                },
                {
                    "enum": [
                        "BEING_ADDED"
                    ],
                    "title": "Being Added Status",
                    "description": "Being Added Status"
                },
                {
                    "enum": [
                        "ON_HOLD"
                    ],
                    "title": "On Hold Status",
                    "description": "On Hold Status"
                }
            ],
            "description": "Represents the status of the supplier"
        },
        "ExtranetCurrency": {
            "type": "string",
            "anyOf": [
                {
                    "enum": [
                        "USD"
                    ],
                    "title": "US dollars",
                    "description": "US dollars"
                },
                {
                    "enum": [
                        "GBP"
                    ],
                    "title": "British pounds",
                    "description": "British pounds"
                },
                {
                    "enum": [
                        "EUR"
                    ],
                    "title": "Euros",
                    "description": "Euros"
                },
                {
                    "enum": [
                        "CAD"
                    ],
                    "title": "Canadian dollars",
                    "description": "Canadian dollars"
                },
                {
                    "enum": [
                        "AUD"
                    ],
                    "title": "Australian dollars",
                    "description": "Australian dollars"
                }
            ],
            "description": "Represents the currency id of the supplier"
        },
        "Scope": {
            "type": "object",
            "properties": {
                "id": {
                    "$ref": "#/definitions/ID"
                },
                "name": {
                    "$ref": "#/definitions/String"
                },
                "permissionName": {
                    "$ref": "#/definitions/String"
                },
                "description": {
                    "$ref": "#/definitions/String"
                }
            },
            "description": "An API scope defining specific permissions for API access"
        },
        "PurchaseOrderProduct": {
            "type": "object",
            "properties": {
                "partNumber": {
                    "$ref": "#/definitions/String"
                },
                "quantity": {
                    "$ref": "#/definitions/String"
                },
                "price": {
                    "$ref": "#/definitions/Float"
                },
                "pieceCount": {
                    "$ref": "#/definitions/Int"
                },
                "totalCost": {
                    "$ref": "#/definitions/Float"
                },
                "name": {
                    "$ref": "#/definitions/String"
                },
                "weight": {
                    "$ref": "#/definitions/Float"
                },
                "totalWeight": {
                    "$ref": "#/definitions/Float"
                },
                "estShipDate": {
                    "$ref": "#/definitions/String"
                },
                "fillDate": {
                    "$ref": "#/definitions/String"
                },
                "sku": {
                    "$ref": "#/definitions/String"
                },
                "isCancelled": {
                    "$ref": "#/definitions/Boolean"
                },
                "isTscaCompliant": {
                    "$ref": "#/definitions/Boolean"
                },
                "twoDayGuaranteeDeliveryDeadline": {
                    "$ref": "#/definitions/IsoDateTime"
                },
                "event": {
                    "$ref": "#/definitions/SalesEvent"
                },
                "customComment": {
                    "$ref": "#/definitions/String"
                }
            },
            "description": "A purchase order product."
        },
        "Float": {
            "type": "number",
            "title": "Float",
            "description": "The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point)."
        },
        "SalesEvent": {
            "type": "object",
            "properties": {
                "id": {
                    "$ref": "#/definitions/ID"
                },
                "type": {
                    "$ref": "#/definitions/String"
                },
                "name": {
                    "$ref": "#/definitions/String"
                },
                "startDate": {
                    "$ref": "#/definitions/IsoDateTime"
                },
                "endDate": {
                    "$ref": "#/definitions/IsoDateTime"
                }
            },
            "description": "A sales event hosted on Wayfair's storefront websites"
        },
        "BillingInfo": {
            "type": "object",
            "properties": {
                "vatNumber": {
                    "$ref": "#/definitions/String"
                }
            },
            "description": "Billing information"
        },
        "WarehouseShippingAdvice": {
            "type": "object",
            "properties": {
                "wsaId": {
                    "$ref": "#/definitions/String"
                },
                "supplierId": {
                    "$ref": "#/definitions/Int32"
                },
                "poNumber": {
                    "$ref": "#/definitions/String"
                },
                "fulfillmentCustomerOrderNumber": {
                    "$ref": "#/definitions/String"
                },
                "fulfillmentCustomerId": {
                    "$ref": "#/definitions/Int32"
                },
                "retailerOrderNumber": {
                    "$ref": "#/definitions/String"
                },
                "fulfillmentPurchaseOrderNumber": {
                    "$ref": "#/definitions/String"
                },
                "creationDate": {
                    "$ref": "#/definitions/IsoDateTime"
                },
                "shipDate": {
                    "$ref": "#/definitions/IsoDateTime"
                },
                "shipSpeed": {
                    "$ref": "#/definitions/String"
                },
                "carrierCode": {
                    "$ref": "#/definitions/String"
                },
                "totalShipmentWeight": {
                    "$ref": "#/definitions/Float"
                },
                "totalQuantity": {
                    "$ref": "#/definitions/Int32"
                },
                "clientNumber": {
                    "$ref": "#/definitions/String"
                },
                "warehouseId": {
                    "$ref": "#/definitions/Int32"
                },
                "actionDate": {
                    "$ref": "#/definitions/IsoDateTime"
                },
                "transactionHandle": {
                    "$ref": "#/definitions/String"
                },
                "packages": {
                    "type": "array",
                    "items": {
                        "anyOf": [
                            {
                                "$ref": "#/definitions/WarehouseShippingAdvicePackageType"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    }
                },
                "shipFrom": {
                    "$ref": "#/definitions/WarehouseShippingAdviceAddress"
                },
                "shipTo": {
                    "$ref": "#/definitions/WarehouseShippingAdviceAddress"
                },
                "products": {
                    "type": "array",
                    "items": {
                        "anyOf": [
                            {
                                "$ref": "#/definitions/WarehouseShippingAdviceProduct"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    }
                }
            },
            "description": "A warehouse shipping advice"
        },
        "WarehouseShippingAdvicePackageType": {
            "type": "object",
            "properties": {
                "packageWeight": {
                    "$ref": "#/definitions/Float"
                },
                "trackingNumber": {
                    "$ref": "#/definitions/String"
                }
            },
            "description": "A Warehouse shipment advice package type"
        },
        "WarehouseShippingAdviceAddress": {
            "type": "object",
            "properties": {
                "name": {
                    "$ref": "#/definitions/String"
                },
                "title": {
                    "$ref": "#/definitions/String"
                },
                "company": {
                    "$ref": "#/definitions/String"
                },
                "address1": {
                    "$ref": "#/definitions/String"
                },
                "address2": {
                    "$ref": "#/definitions/String"
                },
                "address3": {
                    "$ref": "#/definitions/String"
                },
                "city": {
                    "$ref": "#/definitions/String"
                },
                "state": {
                    "$ref": "#/definitions/String"
                },
                "country": {
                    "$ref": "#/definitions/String"
                },
                "postalCode": {
                    "$ref": "#/definitions/String"
                },
                "phoneNumber": {
                    "$ref": "#/definitions/String"
                }
            },
            "description": "A CastleGate WSA Address"
        },
        "WarehouseShippingAdviceProduct": {
            "type": "object",
            "properties": {
                "quantityOrdered": {
                    "$ref": "#/definitions/Int32"
                },
                "partNumber": {
                    "$ref": "#/definitions/String"
                },
                "name": {
                    "$ref": "#/definitions/String"
                },
                "quantityShipped": {
                    "$ref": "#/definitions/Int32"
                },
                "upc": {
                    "$ref": "#/definitions/String"
                },
                "sku": {
                    "$ref": "#/definitions/String"
                },
                "forceQuantityMultiplier": {
                    "$ref": "#/definitions/Int32"
                }
            },
            "description": "A Warehouse shipment advice product"
        },
        "PurchaseOrderFilterInput": {
            "type": "object",
            "properties": {
                "field": {
                    "$ref": "#/definitions/PurchaseOrderFilterFields",
                    "description": "The filterable fields on the query's return type."
                },
                "conjunction": {
                    "$ref": "#/definitions/FilterConjunction",
                    "description": "The conjunction to add to the filter.\n\nAccepted values: AND, OR\n\nIf only one filter exists for the query this will be ignored. The default value is AND if none is provided."
                },
                "equals": {
                    "$ref": "#/definitions/String",
                    "description": "The equals (=) comparator.\n\nIf a value is provided for this comparator the results where the field value equals the value provided will be returned."
                },
                "greaterThan": {
                    "$ref": "#/definitions/String",
                    "description": "The greater than (>) comparator.\n\nIf a value is provided for this comparator the results where the field value is strictly greater than the value provided will be returned."
                },
                "greaterThanOrEqualTo": {
                    "$ref": "#/definitions/String",
                    "description": "The greater than or equal (>=) to comparator.\n\nIf a value is provided for this comparator the results where the field value is greater than or equal to the value provided will be returned."
                },
                "lessThan": {
                    "$ref": "#/definitions/String",
                    "description": "The less than (<) comparator.\n\nIf a value is provided for this comparator the results where the field value is strictly less than the value provided will be returned."
                },
                "lessThanOrEqualTo": {
                    "$ref": "#/definitions/String",
                    "description": "The less than or equal (<=) to comparator.\n\nIf a value is provided for this comparator the results where the field value is less than or equal to the value provided will be returned."
                },
                "notEqualTo": {
                    "$ref": "#/definitions/String",
                    "description": "The not equal (!=) comparator.\n\nIf a value is provided for this comparator the results where the field value is not equal to the value provided will be returned."
                },
                "in": {
                    "type": "array",
                    "items": {
                        "anyOf": [
                            {
                                "$ref": "#/definitions/String"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "description": "The in comparator.\n\nIf a list of values is provided for this comparator the results where the field value is in the list of provided values will be returned."
                },
                "notIn": {
                    "type": "array",
                    "items": {
                        "anyOf": [
                            {
                                "$ref": "#/definitions/String"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "description": "The not in comparator.\n\nIf a list of values is provided for this comparator the results where the field value is not in the list of provided values will be returned."
                },
                "isNull": {
                    "$ref": "#/definitions/Boolean",
                    "description": "The is null comparator.\n\nIf a value of true is provided for this comparator the results where the field value is null will be returned.If the value is false results where the field value is not null will be returned."
                },
                "greater_than": {
                    "$ref": "#/definitions/String",
                    "description": "DEPRECATED. The greater than (>) comparator.\n\nIf a value is provided for this comparator the results where the field value is strictly greater than the value provided will be returned."
                },
                "greater_than_or_equal_to": {
                    "$ref": "#/definitions/String",
                    "description": "DEPRECATED. The greater than or equal (>=) to comparator.\n\nIf a value is provided for this comparator the results where the field value is greater than or equal to the value provided will be returned."
                },
                "less_than": {
                    "$ref": "#/definitions/String",
                    "description": "DEPRECATED. The less than (<) comparator.\n\nIf a value is provided for this comparator the results where the field value is strictly less than the value provided will be returned."
                },
                "less_than_or_equal_to": {
                    "$ref": "#/definitions/String",
                    "description": "DEPRECATED. The less than or equal (<=) to comparator.\n\nIf a value is provided for this comparator the results where the field value is less than or equal to the value provided will be returned."
                },
                "not_equal_to": {
                    "$ref": "#/definitions/String",
                    "description": "DEPRECATED. The not equal (!=) comparator.\n\nIf a value is provided for this comparator the results where the field value is not equal to the value provided will be returned."
                },
                "not_in": {
                    "type": "array",
                    "items": {
                        "anyOf": [
                            {
                                "$ref": "#/definitions/String"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "description": "DEPRECATED. The not in comparator.\n\nIf a list of values is provided for this comparator the results where the field value is not in the list of provided values will be returned."
                },
                "is_null": {
                    "$ref": "#/definitions/Boolean",
                    "description": "DEPRECATED. The is null comparator.\n\nIf a value of true is provided for this comparator the results where the field value is null will be returned.If the value is false results where the field value is not null will be returned."
                }
            },
            "description": "An Input type for filtering by fields of the PurchaseOrder type."
        },
        "PurchaseOrderFilterFields": {
            "type": "string",
            "anyOf": [
                {
                    "enum": [
                        "id"
                    ],
                    "title": "The purchase order's id.",
                    "description": "The purchase order's id."
                },
                {
                    "enum": [
                        "storePrefix"
                    ],
                    "title": "The PO store prefix",
                    "description": "The PO store prefix"
                },
                {
                    "enum": [
                        "poNumber"
                    ],
                    "title": "The PO number that identifies the purchase order",
                    "description": "The PO number that identifies the purchase order"
                },
                {
                    "enum": [
                        "poDate"
                    ],
                    "title": "The date the purchase order was created.",
                    "description": "The date the purchase order was created."
                },
                {
                    "enum": [
                        "supplierId"
                    ],
                    "title": "The id of the purchase order's supplier.",
                    "description": "The id of the purchase order's supplier."
                },
                {
                    "enum": [
                        "supplierName"
                    ],
                    "title": "The name of the supplier the purchase order is for",
                    "description": "The name of the supplier the purchase order is for"
                },
                {
                    "enum": [
                        "supplierAddress1"
                    ],
                    "title": "The first address of the supplier",
                    "description": "The first address of the supplier"
                },
                {
                    "enum": [
                        "supplierAddress2"
                    ],
                    "title": "The second address of the supplier",
                    "description": "The second address of the supplier"
                },
                {
                    "enum": [
                        "supplierAddress3"
                    ],
                    "title": "The third address of the supplier",
                    "description": "The third address of the supplier"
                },
                {
                    "enum": [
                        "supplierCity"
                    ],
                    "title": "The city the supplier is located in",
                    "description": "The city the supplier is located in"
                },
                {
                    "enum": [
                        "supplierState"
                    ],
                    "title": "The state the supplier is located in",
                    "description": "The state the supplier is located in"
                },
                {
                    "enum": [
                        "supplierPostalCode"
                    ],
                    "title": "The postal code of the area the supplier is located",
                    "description": "The postal code of the area the supplier is located"
                },
                {
                    "enum": [
                        "estimatedShipDate"
                    ],
                    "title": "The day the purchase order items are expected to ship",
                    "description": "The day the purchase order items are expected to ship"
                },
                {
                    "enum": [
                        "scheduledDeliveryDate"
                    ],
                    "title": "The day scheduled for the delivery of the purchase order",
                    "description": "The day scheduled for the delivery of the purchase order"
                },
                {
                    "enum": [
                        "deliveryMethodCode"
                    ],
                    "title": "The code representing the delivery method",
                    "description": "The code representing the delivery method"
                },
                {
                    "enum": [
                        "customerName"
                    ],
                    "title": "The name of the customer to deliver to",
                    "description": "The name of the customer to deliver to"
                },
                {
                    "enum": [
                        "customerAddress1"
                    ],
                    "title": "The first address of the customer",
                    "description": "The first address of the customer"
                },
                {
                    "enum": [
                        "customerAddress2"
                    ],
                    "title": "The second address of the customer",
                    "description": "The second address of the customer"
                },
                {
                    "enum": [
                        "customerCity"
                    ],
                    "title": "The city of the customer's address",
                    "description": "The city of the customer's address"
                },
                {
                    "enum": [
                        "customerState"
                    ],
                    "title": "The state of the customer's address",
                    "description": "The state of the customer's address"
                },
                {
                    "enum": [
                        "customerPostalCode"
                    ],
                    "title": "The postal code of the customer's address",
                    "description": "The postal code of the customer's address"
                },
                {
                    "enum": [
                        "customerCountry"
                    ],
                    "title": "The country of the customer's address",
                    "description": "The country of the customer's address"
                },
                {
                    "enum": [
                        "salesChannelName"
                    ],
                    "title": "The sales channel this purchase order was made from",
                    "description": "The sales channel this purchase order was made from"
                },
                {
                    "enum": [
                        "orderType"
                    ],
                    "title": "The type of order that was placed",
                    "description": "The type of order that was placed"
                },
                {
                    "enum": [
                        "packingSlipUrl"
                    ],
                    "title": "The URL to download the packing slip for this purchase order",
                    "description": "The URL to download the packing slip for this purchase order"
                },
                {
                    "enum": [
                        "open"
                    ],
                    "title": "Whether the purchase order is open.",
                    "description": "Whether the purchase order is open."
                },
                {
                    "enum": [
                        "partNumber"
                    ],
                    "title": "The part number of the product.",
                    "description": "The part number of the product."
                }
            ],
            "description": "Filterable fields for the PurchaseOrder class."
        },
        "FilterConjunction": {
            "type": "string",
            "anyOf": [
                {
                    "enum": [
                        "AND"
                    ],
                    "title": "Used to perform logical conjunctions.",
                    "description": "Used to perform logical conjunctions."
                },
                {
                    "enum": [
                        "OR"
                    ],
                    "title": "Used to perform logical disjunctions.",
                    "description": "Used to perform logical disjunctions."
                }
            ],
            "description": "The conjunction to add to the filter.\n\nAccepted values: AND, OR\nIf only one filter exists for the query this will be ignored. The default value is AND if none is provided."
        },
        "orderingInput": {
            "type": "object",
            "properties": {
                "asc": {
                    "$ref": "#/definitions/String",
                    "description": "The ascending ordering.\n\nWhen a param is provided the result set will be ordered in ascending order according to the param provided."
                },
                "desc": {
                    "$ref": "#/definitions/String",
                    "description": "The descending ordering.\n\nWhen a param is provided the result set will be ordered in descending order according to the param provided."
                }
            },
            "description": "Allows for ordering of elements."
        },
        "PurchaseOrder": {
            "type": "object",
            "properties": {
                "id": {
                    "$ref": "#/definitions/Int"
                },
                "storePrefix": {
                    "$ref": "#/definitions/String"
                },
                "poNumber": {
                    "$ref": "#/definitions/String"
                },
                "poDate": {
                    "$ref": "#/definitions/IsoDateTime"
                },
                "supplierId": {
                    "$ref": "#/definitions/Int"
                },
                "supplierName": {
                    "$ref": "#/definitions/String"
                },
                "supplierAddress1": {
                    "$ref": "#/definitions/String"
                },
                "supplierAddress2": {
                    "$ref": "#/definitions/String"
                },
                "supplierAddress3": {
                    "$ref": "#/definitions/String"
                },
                "supplierCity": {
                    "$ref": "#/definitions/String"
                },
                "supplierState": {
                    "$ref": "#/definitions/String"
                },
                "supplierPostalCode": {
                    "$ref": "#/definitions/String"
                },
                "estimatedShipDate": {
                    "$ref": "#/definitions/IsoDateTime"
                },
                "scheduledDeliveryDate": {
                    "$ref": "#/definitions/IsoDateTime"
                },
                "deliveryMethodCode": {
                    "$ref": "#/definitions/String"
                },
                "customerName": {
                    "$ref": "#/definitions/String"
                },
                "customerAddress1": {
                    "$ref": "#/definitions/String"
                },
                "customerAddress2": {
                    "$ref": "#/definitions/String"
                },
                "customerCity": {
                    "$ref": "#/definitions/String"
                },
                "customerState": {
                    "$ref": "#/definitions/String"
                },
                "customerPostalCode": {
                    "$ref": "#/definitions/String"
                },
                "customerCountry": {
                    "$ref": "#/definitions/String"
                },
                "salesChannelName": {
                    "$ref": "#/definitions/String"
                },
                "orderType": {
                    "$ref": "#/definitions/String"
                },
                "shippingInfo": {
                    "$ref": "#/definitions/PurchaseOrderShipping"
                },
                "packingSlipUrl": {
                    "$ref": "#/definitions/String"
                },
                "warehouse": {
                    "$ref": "#/definitions/Warehouse"
                },
                "products": {
                    "type": "array",
                    "items": {
                        "anyOf": [
                            {
                                "$ref": "#/definitions/PurchaseOrderProduct"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    }
                },
                "shipTo": {
                    "$ref": "#/definitions/Address"
                },
                "billTo": {
                    "$ref": "#/definitions/Address"
                },
                "billingInfo": {
                    "$ref": "#/definitions/BillingInfo"
                }
            },
            "description": "A purchase order."
        },
        "InventoryMutator": {
            "type": "object",
            "properties": {
                "save": {
                    "$ref": "#/definitions/TransactionStatus"
                }
            },
            "description": "Mutator object capable of running mutations on inventory."
        },
        "inventoryInput": {
            "type": "object",
            "properties": {
                "supplierId": {
                    "$ref": "#/definitions/Int32",
                    "description": "REQUIRED. The id of the supplier/warehouse that has this product."
                },
                "supplierPartNumber": {
                    "$ref": "#/definitions/String",
                    "description": "REQUIRED. The part number of the product."
                },
                "quantityOnHand": {
                    "$ref": "#/definitions/Int32",
                    "description": "REQUIRED. The number of units on hand and still available for sale."
                },
                "quantityBackordered": {
                    "$ref": "#/definitions/Int32",
                    "description": "The number of backordered units."
                },
                "quantityOnOrder": {
                    "$ref": "#/definitions/Int32",
                    "description": "The number of units allocated to open orders."
                },
                "itemNextAvailabilityDate": {
                    "$ref": "#/definitions/String",
                    "description": "The next time this product will be available."
                },
                "productNameAndOptions": {
                    "$ref": "#/definitions/String",
                    "description": "The name of the product along with any options to be submitted for it."
                },
                "discontinued": {
                    "$ref": "#/definitions/Boolean",
                    "default": false,
                    "description": "Whether or not the product has been discontinued."
                },
                "supplier_id": {
                    "$ref": "#/definitions/Int32",
                    "description": "REQUIRED. The id of the supplier/warehouse that has this product."
                },
                "supplier_part_number": {
                    "$ref": "#/definitions/String",
                    "description": "REQUIRED. The part number of the product."
                },
                "quantity_on_hand": {
                    "$ref": "#/definitions/Int32",
                    "description": "REQUIRED. The number of units on hand and still available for sale."
                },
                "quantity_backordered": {
                    "$ref": "#/definitions/Int32",
                    "default": null,
                    "description": "The number of backordered units."
                },
                "quantity_on_order": {
                    "$ref": "#/definitions/Int32",
                    "default": null,
                    "description": "The number of units allocated to open orders."
                },
                "item_next_availability_date": {
                    "$ref": "#/definitions/String",
                    "default": null,
                    "description": "The next time this product will be available."
                },
                "product_name_and_options": {
                    "$ref": "#/definitions/String",
                    "default": null,
                    "description": "The name of the product along with any options to be submitted for it."
                }
            },
            "description": "The inventory information for a specific part."
        },
        "inventoryFeedKind": {
            "type": "string",
            "anyOf": [
                {
                    "enum": [
                        "DIFFERENTIAL"
                    ],
                    "title": "A differential listing of inventory.",
                    "description": "A differential listing of inventory."
                },
                {
                    "enum": [
                        "TRUE_UP"
                    ],
                    "title": "A complete listing of inventory for all listed products.",
                    "description": "A complete listing of inventory for all listed products."
                }
            ],
            "description": "The feed kind represents whether this is a differential or true up feed"
        },
        "TransactionStatus": {
            "type": "object",
            "properties": {
                "id": {
                    "$ref": "#/definitions/String"
                },
                "handle": {
                    "$ref": "#/definitions/String"
                },
                "status": {
                    "$ref": "#/definitions/TransactionState"
                },
                "submitted_at": {
                    "$ref": "#/definitions/String"
                },
                "submittedAt": {
                    "$ref": "#/definitions/String"
                },
                "completed_at": {
                    "$ref": "#/definitions/String"
                },
                "completedAt": {
                    "$ref": "#/definitions/String"
                },
                "itemCount": {
                    "$ref": "#/definitions/Int32"
                },
                "errorCount": {
                    "$ref": "#/definitions/Int32"
                },
                "errors": {
                    "type": "array",
                    "items": {
                        "anyOf": [
                            {
                                "$ref": "#/definitions/ItemStatus"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    }
                },
                "completedCount": {
                    "$ref": "#/definitions/Int32"
                },
                "completed": {
                    "type": "array",
                    "items": {
                        "anyOf": [
                            {
                                "$ref": "#/definitions/ItemStatus"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    }
                },
                "processingCount": {
                    "$ref": "#/definitions/Int32"
                },
                "processing": {
                    "type": "array",
                    "items": {
                        "anyOf": [
                            {
                                "$ref": "#/definitions/ItemStatus"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    }
                }
            },
            "description": "The status of a transaction made"
        },
        "TransactionState": {
            "type": "string",
            "anyOf": [
                {
                    "enum": [
                        "NEW"
                    ],
                    "title": "A new item. Processing has not yet begun.",
                    "description": "A new item. Processing has not yet begun."
                },
                {
                    "enum": [
                        "PROCESSING"
                    ],
                    "title": "We are currently processing the item.",
                    "description": "We are currently processing the item."
                },
                {
                    "enum": [
                        "ERROR"
                    ],
                    "title": "An error occurred during processing.",
                    "description": "An error occurred during processing."
                },
                {
                    "enum": [
                        "COMPLETE"
                    ],
                    "title": "Processing completed without errors.",
                    "description": "Processing completed without errors."
                }
            ],
            "description": "Current state of a transaction of transaction item."
        },
        "ItemStatus": {
            "type": "object",
            "properties": {
                "key": {
                    "$ref": "#/definitions/String"
                },
                "message": {
                    "$ref": "#/definitions/String"
                }
            },
            "description": "The status of a single record in a transaction"
        },
        "PurchaseOrderMutator": {
            "type": "object",
            "properties": {
                "backorder": {
                    "$ref": "#/definitions/TransactionStatus"
                },
                "accept": {
                    "$ref": "#/definitions/TransactionStatus"
                },
                "reject": {
                    "$ref": "#/definitions/TransactionStatus"
                },
                "shipment": {
                    "$ref": "#/definitions/TransactionStatus"
                },
                "register": {
                    "$ref": "#/definitions/LabelGenerationEvent"
                },
                "acknowledgeCastleGate": {
                    "$ref": "#/definitions/TransactionStatus"
                },
                "acknowledgeCastleGateWarehouseShippingAdvice": {
                    "$ref": "#/definitions/TransactionStatus"
                }
            },
            "description": "Mutator object capable of running mutations on purchase orders."
        },
        "BackorderedLineItemInput": {
            "type": "object",
            "properties": {
                "partNumber": {
                    "$ref": "#/definitions/String",
                    "description": "The part number of the item being backordered"
                },
                "quantity": {
                    "$ref": "#/definitions/Int64",
                    "description": "The number of this item that are being backordered"
                },
                "unitPrice": {
                    "$ref": "#/definitions/Float",
                    "description": "The item's unit price"
                },
                "newShipDate": {
                    "$ref": "#/definitions/IsoDateTime",
                    "description": "The new ship date of the this line item"
                }
            },
            "description": "An input for a backordered purchase order line item"
        },
        "Int64": {
            "type": "object",
            "title": "Int64",
            "description": "The `Int64` scalar type represents non-fractional signed whole numeric values. Int can represent values between PHP_INT_MIN AND PHP_INT_MAX."
        },
        "AcceptedLineItemInput": {
            "type": "object",
            "properties": {
                "partNumber": {
                    "$ref": "#/definitions/String",
                    "description": "The part number of the item being accepted"
                },
                "quantity": {
                    "$ref": "#/definitions/Int32",
                    "description": "The number of this item that are being accepted"
                },
                "unitPrice": {
                    "$ref": "#/definitions/Float",
                    "description": "The item's unit price"
                },
                "estimatedShipDate": {
                    "$ref": "#/definitions/IsoDateTime",
                    "description": "The item's estimated ship date"
                }
            },
            "description": "An input for an accepted purchase order line item"
        },
        "RejectLineItemInput": {
            "type": "object",
            "properties": {
                "partNumber": {
                    "$ref": "#/definitions/String",
                    "description": "The part number of the item being rejected"
                },
                "quantity": {
                    "$ref": "#/definitions/Int32",
                    "description": "The number of this item that are being rejected"
                }
            },
            "description": "An input for a rejected purchase order line item"
        },
        "ShipNoticeInput": {
            "type": "object",
            "properties": {
                "poNumber": {
                    "$ref": "#/definitions/String",
                    "description": "The identifier for the purchase order that this notice is acknowledging shipment for"
                },
                "supplierId": {
                    "$ref": "#/definitions/ID",
                    "description": "The identifier of the supplier that is shipping this purchase order out"
                },
                "packageCount": {
                    "$ref": "#/definitions/PositiveInt",
                    "description": "The total number of packages that are a part of this order"
                },
                "weight": {
                    "$ref": "#/definitions/Float",
                    "description": "The total weight of all the packages in this purchase order in pounds"
                },
                "volume": {
                    "$ref": "#/definitions/Float",
                    "description": "The volume of all the packages in this purchase order in cubic feet"
                },
                "carrierCode": {
                    "$ref": "#/definitions/String",
                    "description": "The staandard carrier alpha code (SCAC)"
                },
                "shipSpeed": {
                    "$ref": "#/definitions/ShipSpeed",
                    "description": "The ship speed of this purchase order"
                },
                "trackingNumber": {
                    "$ref": "#/definitions/String",
                    "description": "The tracking number of the order"
                },
                "shipDate": {
                    "$ref": "#/definitions/IsoDateTime",
                    "description": "The date the order was shipped. Must be fewer than 10 days in the past and no more than 1 day in the future."
                },
                "sourceAddress": {
                    "$ref": "#/definitions/AddressInput",
                    "description": "The address the order shipped from"
                },
                "destinationAddress": {
                    "$ref": "#/definitions/AddressInput",
                    "description": "The address the order is shipping to"
                },
                "smallParcelShipments": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/SmallParcelShipmentInput"
                    },
                    "default": [],
                    "description": "A list of the small parcel packages that were shipped"
                },
                "largeParcelShipments": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/LargeParcelShipmentInput"
                    },
                    "default": [],
                    "description": "A list of the large parcel items and their packages that were shipped"
                }
            },
            "description": "A notice that a purchase order has shipped. This includes all necessary information about that shipment."
        },
        "PositiveInt": {
            "type": "object",
            "title": "PositiveInt",
            "description": "The `PositiveInt` scalar type represents non-fractional signed whole\n    numeric values. PositiveInt can represent values between 1 and 2^31 - 1\n    inclusive"
        },
        "AddressInput": {
            "type": "object",
            "properties": {
                "name": {
                    "$ref": "#/definitions/String",
                    "description": "The name of the residence"
                },
                "streetAddress1": {
                    "$ref": "#/definitions/String",
                    "description": "Primary street address information"
                },
                "streetAddress2": {
                    "$ref": "#/definitions/String",
                    "description": "Secondary street address information"
                },
                "city": {
                    "$ref": "#/definitions/String",
                    "description": "The city"
                },
                "state": {
                    "$ref": "#/definitions/String",
                    "description": "The state or province"
                },
                "postalCode": {
                    "$ref": "#/definitions/String",
                    "description": "The postal code"
                },
                "country": {
                    "$ref": "#/definitions/String",
                    "description": "The country code"
                }
            },
            "description": "An address"
        },
        "SmallParcelShipmentInput": {
            "type": "object",
            "properties": {
                "package": {
                    "$ref": "#/definitions/PurchaseOrderPackageInput",
                    "description": "A small parcel package"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/SmallParcelItemInput"
                    },
                    "description": "A list of items that are in this small parcel package"
                }
            },
            "description": "A small parcel package and the items in the package"
        },
        "PurchaseOrderPackageInput": {
            "type": "object",
            "properties": {
                "code": {
                    "$ref": "#/definitions/PackageTrackingCode",
                    "description": "The tracking code for the package"
                },
                "weight": {
                    "$ref": "#/definitions/Float",
                    "description": "The total weight of the package"
                }
            },
            "description": "A package that a purchase order or part of a purchase order is shipped in"
        },
        "PackageTrackingCode": {
            "type": "object",
            "properties": {
                "type": {
                    "$ref": "#/definitions/PackageTrackingCodeTypeEnum",
                    "description": "The type of tracking code this is"
                },
                "value": {
                    "$ref": "#/definitions/String",
                    "description": "The value of the tracking code"
                }
            },
            "description": "A tracking code that will go on a package including the type and the value"
        },
        "PackageTrackingCodeTypeEnum": {
            "type": "string",
            "anyOf": [
                {
                    "enum": [
                        "TRACKING_NUMBER"
                    ],
                    "title": "A simple package tracking number",
                    "description": "A simple package tracking number"
                },
                {
                    "enum": [
                        "UCC_128"
                    ],
                    "title": "A UCC-128 code",
                    "description": "A UCC-128 code"
                }
            ],
            "description": "Types of package tracking codes"
        },
        "SmallParcelItemInput": {
            "type": "object",
            "properties": {
                "partNumber": {
                    "$ref": "#/definitions/String",
                    "description": "The part number of the item"
                },
                "quantity": {
                    "$ref": "#/definitions/PositiveInt",
                    "description": "The number of this item in the small parcel package"
                }
            },
            "description": "A line item that is shipped in a small parcel package"
        },
        "LargeParcelShipmentInput": {
            "type": "object",
            "properties": {
                "partNumber": {
                    "$ref": "#/definitions/String",
                    "description": "The part number of the item being shipped large parcel"
                },
                "packages": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/PurchaseOrderPackageInput"
                    },
                    "description": "The packages that the large parcel item is being sent in"
                }
            },
            "description": "A large parcel item and the packages it is split into"
        },
        "RegistrationInput": {
            "type": "object",
            "properties": {
                "poNumber": {
                    "$ref": "#/definitions/String",
                    "description": "The identifying purchase order number."
                },
                "warehouseId": {
                    "$ref": "#/definitions/ID",
                    "description": "The Wayfair ID of the warehouse from which the shipping units should be picked up.Defaults to the PO's currently assigned warehouse ID."
                },
                "requestForPickupDate": {
                    "$ref": "#/definitions/IsoDateTime",
                    "description": "The date on which the shipping units will be ready to ship.Defaults to the date and time of the registration request."
                },
                "shippingUnits": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ShippingUnitInput"
                    },
                    "description": "The individual shipping units associated with the purchase order.Defaults to the shipping data found in Wayfair's catalog."
                },
                "packageUnits": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/PackageUnit"
                    },
                    "description": "The individual package units associated with the purchase order.Meaning of this field is the same as the shippingUnits, only the structure is different."
                }
            },
            "description": "An input for registering package shipments with Wayfair"
        },
        "ShippingUnitInput": {
            "type": "object",
            "properties": {
                "partNumber": {
                    "$ref": "#/definitions/NonEmptyString",
                    "description": "The ordered product's identifier."
                },
                "unitType": {
                    "$ref": "#/definitions/ShippingUnitType",
                    "description": "The type of shipping unit."
                },
                "weight": {
                    "$ref": "#/definitions/WeightInput",
                    "description": "The weight of the package."
                },
                "dimensions": {
                    "$ref": "#/definitions/DimensionInput",
                    "description": "The length dimensions of the package."
                },
                "freightClass": {
                    "$ref": "#/definitions/FreightClass",
                    "description": "The shipping unit's freight class, which is broadly categorized by weight."
                },
                "palletInfo": {
                    "$ref": "#/definitions/PalletInput",
                    "description": "Additional information which is required for all palletized shipments. Only provide this data if the shipment is palletized."
                },
                "groupIdentifier": {
                    "$ref": "#/definitions/PositiveInt",
                    "description": "A numeric identifier used to associate all the shipping units related to a single instance of an item. This value should be equal for all shipping units which contain pieces of a single product. E.g., if 2 of the same product are requested with a purchase order, all the cartons containing parts of the first product should have a groupIdentifier of 1, and all cartons for the second item have a groupIdentifier of 2."
                },
                "sequenceIdentifier": {
                    "$ref": "#/definitions/PositiveInt",
                    "description": "A numeric identifier used to distinguish between the shipping units related to a single item. This value should be different for all shipping units instances related to a single product. E.g., if an ordered item ships in three different cartons, there should be 3 distinct shippingUnitInputs with sequenceIdentifiers of 1, 2 and 3."
                }
            },
            "description": "An input representing a shipping unit."
        },
        "NonEmptyString": {
            "type": "object",
            "title": "NonEmptyString",
            "description": "The `NonEmptyString` scalar type represents a non-empty string"
        },
        "ShippingUnitType": {
            "type": "string",
            "anyOf": [
                {
                    "enum": [
                        "CARTON"
                    ],
                    "title": "A carton (box) unit.",
                    "description": "A carton (box) unit."
                },
                {
                    "enum": [
                        "BAG"
                    ],
                    "title": "A sealed plastic bag unit.",
                    "description": "A sealed plastic bag unit."
                },
                {
                    "enum": [
                        "ROLL"
                    ],
                    "title": "A rolled-up unit.",
                    "description": "A rolled-up unit."
                },
                {
                    "enum": [
                        "OTHER"
                    ],
                    "title": "Any shipping unit that cannot be defined as a carton, roll, or bag.",
                    "description": "Any shipping unit that cannot be defined as a carton, roll, or bag."
                }
            ],
            "description": "The types of packaging units that can be shipped"
        },
        "WeightInput": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/Float",
                    "description": "The numeric value of the weight measurement."
                },
                "unit": {
                    "$ref": "#/definitions/WeightUnit",
                    "description": "The unit in which the value is measured."
                }
            },
            "description": "An input for weight measurements"
        },
        "WeightUnit": {
            "type": "string",
            "anyOf": [
                {
                    "enum": [
                        "POUNDS"
                    ],
                    "title": "Pounds (lbs)",
                    "description": "Pounds (lbs)"
                },
                {
                    "enum": [
                        "KILOGRAMS"
                    ],
                    "title": "Kilograms (kg)",
                    "description": "Kilograms (kg)"
                }
            ],
            "description": "An enumeration of the different weight units that are supported"
        },
        "DimensionInput": {
            "type": "object",
            "properties": {
                "length": {
                    "$ref": "#/definitions/MeasurementInput",
                    "description": "The associated object's length"
                },
                "width": {
                    "$ref": "#/definitions/MeasurementInput",
                    "description": "The associated object's width"
                },
                "height": {
                    "$ref": "#/definitions/MeasurementInput",
                    "description": "The associated object's height"
                }
            },
            "description": "An input for a set of 3D (L x W x H) dimensions"
        },
        "MeasurementInput": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/Float",
                    "description": "The measurement value"
                },
                "unit": {
                    "$ref": "#/definitions/LengthUnit",
                    "default": "INCHES",
                    "description": "The unit type with which to evaluate the measure value"
                }
            },
            "description": "An input for 1D-measurements (length and unit)"
        },
        "LengthUnit": {
            "type": "string",
            "anyOf": [
                {
                    "enum": [
                        "INCHES"
                    ],
                    "title": "Inches",
                    "description": "Inches"
                },
                {
                    "enum": [
                        "CENTIMETERS"
                    ],
                    "title": "Centimeters",
                    "description": "Centimeters"
                }
            ],
            "description": "Units that can be used to measure a length"
        },
        "FreightClass": {
            "type": "string",
            "anyOf": [
                {
                    "enum": [
                        "CODE_500"
                    ],
                    "title": "Less than 1 lb - Bags of gold dust, ping pong balls.",
                    "description": "Less than 1 lb - Bags of gold dust, ping pong balls."
                },
                {
                    "enum": [
                        "CODE_400"
                    ],
                    "title": "1-2 lbs - Deer antlers.",
                    "description": "1-2 lbs - Deer antlers."
                },
                {
                    "enum": [
                        "CODE_300"
                    ],
                    "title": "2-3 lbs - Wood cabinets, tables, chairs setup, model boats.",
                    "description": "2-3 lbs - Wood cabinets, tables, chairs setup, model boats."
                },
                {
                    "enum": [
                        "CODE_250"
                    ],
                    "title": "3-4 lbs - Bamboo furniture, mattress and box spring, plasma TV.",
                    "description": "3-4 lbs - Bamboo furniture, mattress and box spring, plasma TV."
                },
                {
                    "enum": [
                        "CODE_200"
                    ],
                    "title": "4-5 lbs - Auto sheet metal parts, aircraft parts, aluminum table, packaged mattresses.",
                    "description": "4-5 lbs - Auto sheet metal parts, aircraft parts, aluminum table, packaged mattresses."
                },
                {
                    "enum": [
                        "CODE_175"
                    ],
                    "title": "5-6 lbs - Clothing, couches stuffed furniture.",
                    "description": "5-6 lbs - Clothing, couches stuffed furniture."
                },
                {
                    "enum": [
                        "CODE_150"
                    ],
                    "title": "6-7 lbs - Auto sheet metal parts, bookcases.",
                    "description": "6-7 lbs - Auto sheet metal parts, bookcases."
                },
                {
                    "enum": [
                        "CODE_125"
                    ],
                    "title": "7-8 lbs - Small Household appliances.",
                    "description": "7-8 lbs - Small Household appliances."
                },
                {
                    "enum": [
                        "CODE_110"
                    ],
                    "title": "8-9 lbs - Cabinets, framed artwork, table saws.",
                    "description": "8-9 lbs - Cabinets, framed artwork, table saws."
                },
                {
                    "enum": [
                        "CODE_100"
                    ],
                    "title": "9-10.5 lbs - Boat covers, car covers, canvas, wine cases, caskets.",
                    "description": "9-10.5 lbs - Boat covers, car covers, canvas, wine cases, caskets."
                },
                {
                    "enum": [
                        "CODE_92_5"
                    ],
                    "title": "10.5-12 lbs - Computers, monitors, refrigerators.",
                    "description": "10.5-12 lbs - Computers, monitors, refrigerators."
                },
                {
                    "enum": [
                        "CODE_85"
                    ],
                    "title": "12-13.5 lbs - Crated machinery, cast iron stoves.",
                    "description": "12-13.5 lbs - Crated machinery, cast iron stoves."
                },
                {
                    "enum": [
                        "CODE_77_5"
                    ],
                    "title": "13.5-15 lbs - Tires, bathroom fixtures.",
                    "description": "13.5-15 lbs - Tires, bathroom fixtures."
                },
                {
                    "enum": [
                        "CODE_70"
                    ],
                    "title": "15-22.5 lbs - Car accessories & car parts, food items, automobile engines.",
                    "description": "15-22.5 lbs - Car accessories & car parts, food items, automobile engines."
                },
                {
                    "enum": [
                        "CODE_65"
                    ],
                    "title": "22.5-30 lbs - Car accessories & car parts, bottled beverages, books in boxes.",
                    "description": "22.5-30 lbs - Car accessories & car parts, bottled beverages, books in boxes."
                },
                {
                    "enum": [
                        "CODE_60"
                    ],
                    "title": "30-35 lbs - Car accessories & car parts.",
                    "description": "30-35 lbs - Car accessories & car parts."
                },
                {
                    "enum": [
                        "CODE_55"
                    ],
                    "title": "35-50 lbs - Bricks, cement, mortar, hardwood flooring.",
                    "description": "35-50 lbs - Bricks, cement, mortar, hardwood flooring."
                },
                {
                    "enum": [
                        "CODE_50"
                    ],
                    "title": "Over 50 lbs - Fits on standard shrink-wrapped 4X4 pallet, very durable.",
                    "description": "Over 50 lbs - Fits on standard shrink-wrapped 4X4 pallet, very durable."
                }
            ],
            "description": "Enumeration of shipping freight classes, broadly categorized as weight range per cubic foot. E.g., class 500 is used to represent freight with a weight density of 0-1 lbs per cubic foot."
        },
        "PalletInput": {
            "type": "object",
            "properties": {
                "weight": {
                    "$ref": "#/definitions/WeightInput",
                    "description": "The additional weight expected from palletizing the shipping unit"
                }
            },
            "description": "An input for information required to process palletized shipping units"
        },
        "PackageUnit": {
            "type": "object",
            "properties": {
                "unitType": {
                    "$ref": "#/definitions/PackageUnitType",
                    "description": "The type of shipping unit."
                },
                "weight": {
                    "$ref": "#/definitions/WeightInput",
                    "description": "The weight of the package."
                },
                "dimensions": {
                    "$ref": "#/definitions/DimensionInput",
                    "description": "The length dimensions of the package."
                },
                "freightClass": {
                    "$ref": "#/definitions/FreightClass",
                    "description": "The shipping unit's freight class, which is broadly categorized by weight."
                },
                "containedParts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ContainedPart"
                    },
                    "description": "The products that should be in a single package."
                }
            },
            "description": "An input representing a shipping package unit."
        },
        "PackageUnitType": {
            "type": "string",
            "anyOf": [
                {
                    "enum": [
                        "CARTON"
                    ],
                    "title": "A carton (box) unit.",
                    "description": "A carton (box) unit."
                },
                {
                    "enum": [
                        "BAG"
                    ],
                    "title": "A sealed plastic bag unit.",
                    "description": "A sealed plastic bag unit."
                },
                {
                    "enum": [
                        "ROLL"
                    ],
                    "title": "A rolled-up unit.",
                    "description": "A rolled-up unit."
                },
                {
                    "enum": [
                        "OTHER"
                    ],
                    "title": "Any shipping unit that cannot be defined as a carton, roll, or bag.",
                    "description": "Any shipping unit that cannot be defined as a carton, roll, or bag."
                }
            ],
            "description": "The types of packaging units that can be shipped"
        },
        "ContainedPart": {
            "type": "object",
            "properties": {
                "partNumber": {
                    "$ref": "#/definitions/NonEmptyString",
                    "description": "The ordered product's identifier."
                },
                "groupIdentifier": {
                    "$ref": "#/definitions/PositiveInt",
                    "description": "A group consists of all the parts that compose a single instance of a product. This identifier is used to distinguish parts belonging to different instances of a product."
                }
            },
            "description": "An input representing a product part that is packaged for shipping."
        },
        "LabelGenerationEvent": {
            "type": "object",
            "properties": {
                "id": {
                    "$ref": "#/definitions/ID"
                },
                "eventDate": {
                    "$ref": "#/definitions/IsoDateTime"
                },
                "pickupDate": {
                    "$ref": "#/definitions/IsoDateTime"
                },
                "poNumber": {
                    "$ref": "#/definitions/Int32"
                },
                "billOfLading": {
                    "$ref": "#/definitions/BillOfLading"
                },
                "consolidatedShippingLabel": {
                    "$ref": "#/definitions/ShippingLabel"
                },
                "customsDocument": {
                    "$ref": "#/definitions/CustomsDocument"
                },
                "generatedShippingLabels": {
                    "type": "array",
                    "items": {
                        "anyOf": [
                            {
                                "$ref": "#/definitions/ShippingLabelInfo"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    }
                },
                "shippingLabelInfo": {
                    "type": "array",
                    "items": {
                        "anyOf": [
                            {
                                "$ref": "#/definitions/ShippingLabelInterface"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    }
                },
                "purchaseOrder": {
                    "$ref": "#/definitions/PurchaseOrder"
                },
                "shippingUnits": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ShippingUnit"
                    }
                }
            },
            "description": "This type includes all the information that resulted from the generation of labels for a purchase order."
        },
        "BillOfLading": {
            "type": "object",
            "properties": {
                "url": {
                    "$ref": "#/definitions/URL"
                }
            },
            "description": "Information about a specific Bill of Lading"
        },
        "URL": {
            "type": "object",
            "title": "URL",
            "description": "A URL as described by IEFT RFC 1738 (https://tools.ietf.org/html/rfc1738)"
        },
        "ShippingLabel": {
            "type": "object",
            "properties": {
                "url": {
                    "$ref": "#/definitions/URL"
                }
            },
            "description": "Information about a specific shipping label"
        },
        "CustomsDocument": {
            "type": "object",
            "properties": {
                "url": {
                    "$ref": "#/definitions/URL"
                }
            },
            "description": "Information about a specific customs document"
        },
        "ShippingLabelInfo": {
            "type": "object",
            "properties": {
                "poNumber": {
                    "$ref": "#/definitions/Int32"
                },
                "fullPoNumber": {
                    "$ref": "#/definitions/String"
                },
                "numberOfLabels": {
                    "$ref": "#/definitions/Int32"
                },
                "carrier": {
                    "$ref": "#/definitions/String"
                },
                "carrierCode": {
                    "$ref": "#/definitions/String"
                },
                "trackingNumber": {
                    "$ref": "#/definitions/String"
                }
            },
            "description": "Information about generated shipping label"
        },
        "ShippingLabelInterface": {
            "type": "object",
            "properties": {
                "carrier": {
                    "$ref": "#/definitions/String"
                },
                "carrierCode": {
                    "$ref": "#/definitions/String"
                },
                "trackingNumber": {
                    "$ref": "#/definitions/String"
                }
            },
            "description": "Interface for a Shipping Label - this contains all the common properties a label should have."
        },
        "ShippingUnit": {
            "type": "object",
            "properties": {
                "groupIdentifier": {
                    "$ref": "#/definitions/PositiveInt"
                },
                "sequenceIdentifier": {
                    "$ref": "#/definitions/PositiveInt"
                },
                "part": {
                    "$ref": "#/definitions/Part"
                }
            },
            "description": "A unit that is being shipped out. In this sense, a unit is a single quantity of a single product part in a single box"
        },
        "Part": {
            "type": "object",
            "properties": {
                "upc": {
                    "$ref": "#/definitions/String"
                },
                "supplierPartNumber": {
                    "$ref": "#/definitions/String"
                },
                "manufacturerModelNumber": {
                    "$ref": "#/definitions/String"
                },
                "leadTime": {
                    "$ref": "#/definitions/Int"
                },
                "replacementPartLeadTime": {
                    "$ref": "#/definitions/Int"
                },
                "mapPrice": {
                    "$ref": "#/definitions/Money"
                },
                "retailPrice": {
                    "$ref": "#/definitions/Money"
                },
                "products": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ProductVariation"
                    }
                },
                "supplier": {
                    "$ref": "#/definitions/Supplier"
                },
                "manufacturer": {
                    "$ref": "#/definitions/Manufacturer"
                },
                "manufacturerPartId": {
                    "$ref": "#/definitions/Int32"
                }
            },
            "description": "Information about a product that a specific supplier has provided."
        },
        "Money": {
            "type": "object",
            "properties": {
                "amount": {
                    "$ref": "#/definitions/Float"
                },
                "currency": {
                    "$ref": "#/definitions/Currency"
                }
            },
            "description": "Some amount of money"
        },
        "Currency": {
            "type": "string",
            "anyOf": [
                {
                    "enum": [
                        "US_DOLLAR"
                    ],
                    "title": "US Dollar",
                    "description": "US Dollar"
                },
                {
                    "enum": [
                        "BRITISH_POUND"
                    ],
                    "title": "British Pound",
                    "description": "British Pound"
                },
                {
                    "enum": [
                        "EURO"
                    ],
                    "title": "Euro",
                    "description": "Euro"
                },
                {
                    "enum": [
                        "CANADIAN_DOLLAR"
                    ],
                    "title": "Canadian Dollar",
                    "description": "Canadian Dollar"
                },
                {
                    "enum": [
                        "AUSTRALIAN_DOLLAR"
                    ],
                    "title": "Australian Dollar",
                    "description": "Australian Dollar"
                }
            ],
            "description": "Types of currency"
        },
        "ProductVariation": {
            "type": "object",
            "properties": {
                "url": {
                    "$ref": "#/definitions/String"
                },
                "imageUrl": {
                    "$ref": "#/definitions/String"
                },
                "displayDimensions": {
                    "$ref": "#/definitions/String"
                },
                "optionCombination": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ProductOption"
                    }
                },
                "product": {
                    "$ref": "#/definitions/WayfairProduct"
                },
                "parts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Part"
                    }
                }
            },
            "description": "A purchasable product listed on Wayfair's site with all of its attributes and option specific information"
        },
        "ImageSizeInput": {
            "type": "object",
            "properties": {
                "height": {
                    "$ref": "#/definitions/Int",
                    "description": "The height of the image in pixels"
                },
                "weight": {
                    "$ref": "#/definitions/Int",
                    "description": "The width of the image in pixels"
                },
                "width": {
                    "$ref": "#/definitions/Int",
                    "description": "The width of the image in pixels"
                }
            },
            "description": "The size of the image in pixels"
        },
        "ProductOption": {
            "type": "object",
            "properties": {
                "id": {
                    "$ref": "#/definitions/ID"
                },
                "category": {
                    "$ref": "#/definitions/String"
                },
                "name": {
                    "$ref": "#/definitions/String"
                }
            },
            "description": "This type contains the essential information about a single product option."
        },
        "WayfairProduct": {
            "type": "object",
            "properties": {
                "sku": {
                    "$ref": "#/definitions/String"
                },
                "name": {
                    "$ref": "#/definitions/String"
                },
                "url": {
                    "$ref": "#/definitions/String"
                },
                "imageUrl": {
                    "$ref": "#/definitions/String"
                },
                "averageOverallRating": {
                    "$ref": "#/definitions/Float"
                },
                "minimumOrderQuantity": {
                    "$ref": "#/definitions/Int"
                },
                "setQuantity": {
                    "$ref": "#/definitions/Int"
                },
                "displaySetQuantity": {
                    "$ref": "#/definitions/Int"
                },
                "status": {
                    "$ref": "#/definitions/String"
                },
                "statusDetail": {
                    "$ref": "#/definitions/String"
                },
                "harmonizedSystemCode": {
                    "$ref": "#/definitions/String"
                },
                "canadaCode": {
                    "$ref": "#/definitions/String"
                },
                "minimumHeight": {
                    "$ref": "#/definitions/Dimension"
                },
                "maximumHeight": {
                    "$ref": "#/definitions/Dimension"
                },
                "minimumWidth": {
                    "$ref": "#/definitions/Dimension"
                },
                "maximumWidth": {
                    "$ref": "#/definitions/Dimension"
                },
                "minimumDepth": {
                    "$ref": "#/definitions/Dimension"
                },
                "maximumDepth": {
                    "$ref": "#/definitions/Dimension"
                },
                "class": {
                    "$ref": "#/definitions/ProductClass"
                },
                "manufacturer": {
                    "$ref": "#/definitions/Manufacturer"
                },
                "collection": {
                    "$ref": "#/definitions/ProductCollection"
                },
                "options": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ProductOption"
                    }
                },
                "variations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ProductVariation"
                    }
                },
                "returnPolicy": {
                    "$ref": "#/definitions/String"
                }
            },
            "description": "A product that Wayfair has on site."
        },
        "Dimension": {
            "type": "object",
            "properties": {
                "amount": {
                    "$ref": "#/definitions/Float"
                },
                "unit": {
                    "$ref": "#/definitions/LengthUnit"
                }
            },
            "description": "The size of some item in one direction."
        },
        "ProductClass": {
            "type": "object",
            "properties": {
                "id": {
                    "$ref": "#/definitions/Int"
                },
                "name": {
                    "$ref": "#/definitions/String"
                },
                "categoryId": {
                    "$ref": "#/definitions/Int"
                },
                "categoryName": {
                    "$ref": "#/definitions/String"
                },
                "options": {
                    "type": "array",
                    "items": {
                        "anyOf": [
                            {
                                "$ref": "#/definitions/ProductClassOption"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    }
                },
                "attributes": {
                    "type": "array",
                    "items": {
                        "anyOf": [
                            {
                                "$ref": "#/definitions/ProductClassAttribute"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    }
                }
            },
            "description": "This type contains the essential information for a single Wayfair product class."
        },
        "ProductClassOption": {
            "type": "object",
            "properties": {
                "categoryName": {
                    "$ref": "#/definitions/String"
                },
                "rank": {
                    "$ref": "#/definitions/String"
                }
            },
            "description": "This type contains the essential information for a single Wayfair product class option."
        },
        "ProductClassAttribute": {
            "type": "object",
            "properties": {
                "id": {
                    "$ref": "#/definitions/Int"
                },
                "name": {
                    "$ref": "#/definitions/String"
                },
                "parentId": {
                    "$ref": "#/definitions/Int"
                },
                "priority": {
                    "$ref": "#/definitions/String"
                },
                "dataType": {
                    "$ref": "#/definitions/String"
                },
                "definition": {
                    "$ref": "#/definitions/String"
                },
                "displayRank": {
                    "$ref": "#/definitions/Int"
                },
                "unavailable": {
                    "$ref": "#/definitions/Int"
                },
                "doesNotApply": {
                    "$ref": "#/definitions/Int"
                },
                "enumValues": {
                    "type": "array",
                    "items": {
                        "anyOf": [
                            {
                                "$ref": "#/definitions/String"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    }
                }
            },
            "description": "A single attribute in a class schema"
        },
        "Manufacturer": {
            "type": "object",
            "properties": {
                "id": {
                    "$ref": "#/definitions/ID"
                },
                "name": {
                    "$ref": "#/definitions/String"
                },
                "address": {
                    "$ref": "#/definitions/Address"
                },
                "hasWhitelabeling": {
                    "$ref": "#/definitions/Boolean"
                }
            },
            "description": "A manufacturer of a product"
        },
        "ProductCollection": {
            "type": "object",
            "properties": {
                "id": {
                    "$ref": "#/definitions/ID"
                },
                "name": {
                    "$ref": "#/definitions/String"
                },
                "description": {
                    "$ref": "#/definitions/String"
                },
                "products": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/WayfairProduct"
                    }
                }
            },
            "description": "A collection of related products."
        },
        "B2bArInvoice": {
            "type": "object",
            "properties": {
                "id": {
                    "$ref": "#/definitions/Int32"
                },
                "description": {
                    "$ref": "#/definitions/String"
                },
                "status": {
                    "$ref": "#/definitions/ArInvoiceStatus"
                },
                "revenueSource": {
                    "$ref": "#/definitions/ArRevenueSourceType"
                },
                "dueBy": {
                    "$ref": "#/definitions/IsoDateTime"
                },
                "paidOn": {
                    "$ref": "#/definitions/IsoDateTime"
                },
                "currency": {
                    "$ref": "#/definitions/Currency"
                },
                "invoiceAmount": {
                    "$ref": "#/definitions/Float"
                },
                "taxTotalAmount": {
                    "$ref": "#/definitions/Float"
                },
                "originalInvoiceTotalAmount": {
                    "$ref": "#/definitions/Float"
                },
                "originalTaxTotalAmount": {
                    "$ref": "#/definitions/Float"
                },
                "paidAmount": {
                    "$ref": "#/definitions/Float"
                },
                "dueAmount": {
                    "$ref": "#/definitions/Float"
                },
                "details": {
                    "type": "array",
                    "items": {
                        "anyOf": [
                            {
                                "$ref": "#/definitions/ArInvoiceDetailInterface"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    }
                },
                "documents": {
                    "type": "array",
                    "items": {
                        "anyOf": [
                            {
                                "$ref": "#/definitions/ArInvoiceDocument"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    }
                },
                "customer": {
                    "$ref": "#/definitions/Customer"
                },
                "orders": {
                    "type": "array",
                    "items": {
                        "anyOf": [
                            {
                                "$ref": "#/definitions/Order"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    }
                },
                "orderPayments": {
                    "type": "array",
                    "items": {
                        "anyOf": [
                            {
                                "$ref": "#/definitions/OrderPayment"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    }
                },
                "communications": {
                    "type": "array",
                    "items": {
                        "anyOf": [
                            {
                                "$ref": "#/definitions/ArInvoiceCommunication"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    }
                },
                "creator": {
                    "$ref": "#/definitions/ArInvoiceCreator"
                },
                "createdOn": {
                    "$ref": "#/definitions/IsoDateTime"
                },
                "effectiveOn": {
                    "$ref": "#/definitions/IsoDateTime"
                },
                "isReconciled": {
                    "$ref": "#/definitions/Boolean"
                },
                "reconciledBy": {
                    "$ref": "#/definitions/ArReconciler"
                },
                "nettable": {
                    "$ref": "#/definitions/Boolean"
                },
                "originallyNettable": {
                    "$ref": "#/definitions/Boolean"
                },
                "invoiceReceipientsEmailAddresses": {
                    "$ref": "#/definitions/String"
                },
                "payments": {
                    "type": "array",
                    "items": {
                        "anyOf": [
                            {
                                "$ref": "#/definitions/ArPayment"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    }
                },
                "isCreditMemo": {
                    "$ref": "#/definitions/Boolean"
                },
                "creditMemos": {
                    "type": "array",
                    "items": {
                        "anyOf": [
                            {
                                "$ref": "#/definitions/ArInvoiceInterface"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    }
                },
                "statusUpdateLogs": {
                    "type": "array",
                    "items": {
                        "anyOf": [
                            {
                                "$ref": "#/definitions/ArInvoiceStatusUpdateLog"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    }
                },
                "reference": {
                    "$ref": "#/definitions/ArInvoiceReference"
                }
            },
            "description": "B2B Type of AR invoice which has all the properties of an AR invoice along with B2B specific details"
        },
        "ArInvoiceInterface": {
            "type": "object",
            "properties": {
                "id": {
                    "$ref": "#/definitions/Int32"
                },
                "description": {
                    "$ref": "#/definitions/String"
                },
                "status": {
                    "$ref": "#/definitions/ArInvoiceStatus"
                },
                "revenueSource": {
                    "$ref": "#/definitions/ArRevenueSourceType"
                },
                "dueBy": {
                    "$ref": "#/definitions/IsoDateTime"
                },
                "paidOn": {
                    "$ref": "#/definitions/IsoDateTime"
                },
                "currency": {
                    "$ref": "#/definitions/Currency"
                },
                "invoiceAmount": {
                    "$ref": "#/definitions/Float"
                },
                "taxTotalAmount": {
                    "$ref": "#/definitions/Float"
                },
                "originalInvoiceTotalAmount": {
                    "$ref": "#/definitions/Float"
                },
                "originalTaxTotalAmount": {
                    "$ref": "#/definitions/Float"
                },
                "paidAmount": {
                    "$ref": "#/definitions/Float"
                },
                "dueAmount": {
                    "$ref": "#/definitions/Float"
                },
                "documents": {
                    "type": "array",
                    "items": {
                        "anyOf": [
                            {
                                "$ref": "#/definitions/ArInvoiceDocument"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    }
                },
                "communications": {
                    "type": "array",
                    "items": {
                        "anyOf": [
                            {
                                "$ref": "#/definitions/ArInvoiceCommunication"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    }
                },
                "creator": {
                    "$ref": "#/definitions/ArInvoiceCreator"
                },
                "createdOn": {
                    "$ref": "#/definitions/IsoDateTime"
                },
                "effectiveOn": {
                    "$ref": "#/definitions/IsoDateTime"
                },
                "isReconciled": {
                    "$ref": "#/definitions/Boolean"
                },
                "reconciledBy": {
                    "$ref": "#/definitions/ArReconciler"
                },
                "nettable": {
                    "$ref": "#/definitions/Boolean"
                },
                "originallyNettable": {
                    "$ref": "#/definitions/Boolean"
                },
                "invoiceReceipientsEmailAddresses": {
                    "$ref": "#/definitions/String"
                },
                "payments": {
                    "type": "array",
                    "items": {
                        "anyOf": [
                            {
                                "$ref": "#/definitions/ArPayment"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    }
                },
                "isCreditMemo": {
                    "$ref": "#/definitions/Boolean"
                },
                "statusUpdateLogs": {
                    "type": "array",
                    "items": {
                        "anyOf": [
                            {
                                "$ref": "#/definitions/ArInvoiceStatusUpdateLog"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    }
                },
                "reference": {
                    "$ref": "#/definitions/ArInvoiceReference"
                }
            },
            "description": "Interface for an AR Invoice - this contains all the common properties an AR Invoice should have"
        },
        "ArInvoiceStatus": {
            "type": "string",
            "anyOf": [
                {
                    "enum": [
                        "NEW"
                    ],
                    "title": "Recently created or unprocessed",
                    "description": "Recently created or unprocessed"
                },
                {
                    "enum": [
                        "PENDING_APPROVAL"
                    ],
                    "title": "Sent for approval but not approved yet",
                    "description": "Sent for approval but not approved yet"
                },
                {
                    "enum": [
                        "APPROVED"
                    ],
                    "title": "Approved by the requested approver",
                    "description": "Approved by the requested approver"
                },
                {
                    "enum": [
                        "SENT_TO_RECIPIENT"
                    ],
                    "title": "Sent to the intended recipient(s)",
                    "description": "Sent to the intended recipient(s)"
                },
                {
                    "enum": [
                        "PENDING_PAYMENT"
                    ],
                    "title": "Is waiting for payment or to be reconciled",
                    "description": "Is waiting for payment or to be reconciled"
                },
                {
                    "enum": [
                        "PARTIALLY_PAID"
                    ],
                    "title": "Is partially paid for and still to be matched against payment(s)",
                    "description": "Is partially paid for and still to be matched against payment(s)"
                },
                {
                    "enum": [
                        "FULLY_PAID"
                    ],
                    "title": "Is fully paid for and matched/reconciled against payment(s)",
                    "description": "Is fully paid for and matched/reconciled against payment(s)"
                },
                {
                    "enum": [
                        "REJECTED"
                    ],
                    "title": "Rejected in the process of approval",
                    "description": "Rejected in the process of approval"
                },
                {
                    "enum": [
                        "CANCELLED"
                    ],
                    "title": "Cancelled due to some reason",
                    "description": "Cancelled due to some reason"
                }
            ],
            "description": "Enumerates all the statuses an AR Invoice can be in at any given point."
        },
        "ArRevenueSourceType": {
            "type": "string",
            "anyOf": [
                {
                    "enum": [
                        "B2B"
                    ],
                    "title": "Business to business type",
                    "description": "Business to business type"
                },
                {
                    "enum": [
                        "CASTLEGATE"
                    ],
                    "title": "Castlegate or fulfillment services",
                    "description": "Castlegate or fulfillment services"
                },
                {
                    "enum": [
                        "SPONSORED_PRODUCTS"
                    ],
                    "title": "Sponsored products type",
                    "description": "Sponsored products type"
                },
                {
                    "enum": [
                        "MAAS_MEDIA"
                    ],
                    "title": "Maas media type",
                    "description": "Maas media type"
                },
                {
                    "enum": [
                        "LIQUIDATION"
                    ],
                    "title": "Liquidation type",
                    "description": "Liquidation type"
                },
                {
                    "enum": [
                        "GIFT_CARD"
                    ],
                    "title": "Gift card type",
                    "description": "Gift card type"
                }
            ],
            "description": "Types of different revenue sources or streams."
        },
        "ArInvoiceDocument": {
            "type": "object",
            "properties": {
                "id": {
                    "$ref": "#/definitions/Int32"
                },
                "name": {
                    "$ref": "#/definitions/String"
                },
                "createdOn": {
                    "$ref": "#/definitions/IsoDateTime"
                },
                "type": {
                    "$ref": "#/definitions/ArInvoiceDocumentType"
                },
                "path": {
                    "$ref": "#/definitions/String"
                },
                "remoteStorageDownloadAdminUrl": {
                    "$ref": "#/definitions/String"
                },
                "remoteStoragePath": {
                    "$ref": "#/definitions/String"
                }
            },
            "description": "A document related to an AR Invoice"
        },
        "ArInvoiceDocumentType": {
            "type": "string",
            "anyOf": [
                {
                    "enum": [
                        "pdf"
                    ],
                    "title": "PDF form of an AR Invoice",
                    "description": "PDF form of an AR Invoice"
                },
                {
                    "enum": [
                        "csv"
                    ],
                    "title": "CSV form of an AR Invoice",
                    "description": "CSV form of an AR Invoice"
                }
            ],
            "description": "Types of tangible readable AR Invoice document"
        },
        "ArInvoiceCommunication": {
            "type": "object",
            "properties": {
                "id": {
                    "$ref": "#/definitions/Int64"
                },
                "type": {
                    "$ref": "#/definitions/ArInvoiceCommunicationType"
                },
                "queuedOn": {
                    "$ref": "#/definitions/IsoDateTime"
                },
                "emailMessage": {
                    "$ref": "#/definitions/EmailMessage"
                }
            },
            "description": "A revenue invoice communication"
        },
        "ArInvoiceCommunicationType": {
            "type": "string",
            "anyOf": [
                {
                    "enum": [
                        "UNSPECIFIED"
                    ],
                    "title": "A communication for which no type was specified",
                    "description": "A communication for which no type was specified"
                },
                {
                    "enum": [
                        "INITIAL_COMMUNICATION"
                    ],
                    "title": "An initial communication containing the invoice and payment information",
                    "description": "An initial communication containing the invoice and payment information"
                },
                {
                    "enum": [
                        "CANCELLATION_COMMUNICATION"
                    ],
                    "title": "A cancellation communication containing the cancelled invoice information",
                    "description": "A cancellation communication containing the cancelled invoice information"
                },
                {
                    "enum": [
                        "NETTABLE_REMOVED"
                    ],
                    "title": "A communication sent out when the netting status of an invoice is turned off",
                    "description": "A communication sent out when the netting status of an invoice is turned off"
                }
            ],
            "description": "Types of different revenue communications."
        },
        "EmailMessage": {
            "type": "object",
            "properties": {
                "id": {
                    "$ref": "#/definitions/Int64"
                }
            },
            "description": "An email communication"
        },
        "ArInvoiceCreator": {
            "type": "object",
            "properties": {
                "id": {
                    "$ref": "#/definitions/Int64"
                },
                "type": {
                    "$ref": "#/definitions/ArInvoiceCreatorType"
                }
            },
            "description": "A revenue invoice creator"
        },
        "ArInvoiceCreatorType": {
            "type": "string",
            "anyOf": [
                {
                    "enum": [
                        "SUPPLIER"
                    ],
                    "title": "Supplier type creator",
                    "description": "Supplier type creator"
                },
                {
                    "enum": [
                        "ADMIN_USER"
                    ],
                    "title": "Admin user as a creator",
                    "description": "Admin user as a creator"
                },
                {
                    "enum": [
                        "EXTRANET_USER"
                    ],
                    "title": "An extranet user as a creator",
                    "description": "An extranet user as a creator"
                },
                {
                    "enum": [
                        "INTERNAL"
                    ],
                    "title": "An internal user as a creator",
                    "description": "An internal user as a creator"
                }
            ],
            "description": "Enumerates all the types of an AR Invoice creator."
        },
        "ArReconciler": {
            "type": "object",
            "properties": {
                "id": {
                    "$ref": "#/definitions/Int32"
                },
                "type": {
                    "$ref": "#/definitions/ArReconcilerType"
                }
            },
            "description": "Represents a AR reconciler entity - who is responsible for reconciling the AR components"
        },
        "ArReconcilerType": {
            "type": "string",
            "anyOf": [
                {
                    "enum": [
                        "ADMIN_USER"
                    ],
                    "title": "An admin user or employee logged in, having a valid Employee ID",
                    "description": "An admin user or employee logged in, having a valid Employee ID"
                },
                {
                    "enum": [
                        "AP_PAYMENT_PROCESSOR"
                    ],
                    "title": "Automated accounts payable payment processor",
                    "description": "Automated accounts payable payment processor"
                }
            ],
            "description": "Types of different reconcilers that can potentially perform reconciliation of different AR components"
        },
        "ArPayment": {
            "type": "object",
            "properties": {
                "id": {
                    "$ref": "#/definitions/Int32"
                },
                "status": {
                    "$ref": "#/definitions/ArPaymentStatus"
                },
                "revenueSource": {
                    "$ref": "#/definitions/ArRevenueSourceType"
                },
                "amount": {
                    "$ref": "#/definitions/Float"
                },
                "currency": {
                    "$ref": "#/definitions/Currency"
                },
                "reference": {
                    "$ref": "#/definitions/ArPaymentReference"
                },
                "payer": {
                    "$ref": "#/definitions/ArPaymentPayer"
                },
                "createdOn": {
                    "$ref": "#/definitions/IsoDateTime"
                },
                "description": {
                    "$ref": "#/definitions/String"
                },
                "matchedAmount": {
                    "$ref": "#/definitions/Float"
                },
                "isReconciled": {
                    "$ref": "#/definitions/Boolean"
                },
                "reconciledOn": {
                    "$ref": "#/definitions/IsoDateTime"
                },
                "reconciledBy": {
                    "$ref": "#/definitions/ArReconciler"
                }
            },
            "description": "Accounts Receivable Payment entity which depicts a payment that we have realized as a \"Revenue\" and which we could have received from different revenue streams or sources."
        },
        "ArPaymentStatus": {
            "type": "string",
            "anyOf": [
                {
                    "enum": [
                        "NEW"
                    ],
                    "title": "Recently created or unprocessed",
                    "description": "Recently created or unprocessed"
                },
                {
                    "enum": [
                        "PARTIALLY_MATCHED"
                    ],
                    "title": "Partially matched i.e. still available for reconciliation",
                    "description": "Partially matched i.e. still available for reconciliation"
                },
                {
                    "enum": [
                        "FULLY_MATCHED"
                    ],
                    "title": "Fully matched i.e. reconciled completely",
                    "description": "Fully matched i.e. reconciled completely"
                },
                {
                    "enum": [
                        "VOID"
                    ],
                    "title": "Voided",
                    "description": "Voided"
                }
            ],
            "description": "Enumerates all the statuses an AR Payment can be in at any given point."
        },
        "ArPaymentReference": {
            "type": "object",
            "properties": {
                "id": {
                    "$ref": "#/definitions/Int64"
                },
                "type": {
                    "$ref": "#/definitions/ArPaymentTypeReference"
                }
            },
            "description": "Represents a reference or an origination of an AR payment. An AR payment can refer to an outside payment or simply to itself"
        },
        "ArPaymentTypeReference": {
            "type": "string",
            "anyOf": [
                {
                    "enum": [
                        "SELF"
                    ],
                    "title": "Self if the payment was created directly by itself and there is no external reference",
                    "description": "Self if the payment was created directly by itself and there is no external reference"
                },
                {
                    "enum": [
                        "CLASSIFICATION_TOOL"
                    ],
                    "title": "An admin classification tool",
                    "description": "An admin classification tool"
                },
                {
                    "enum": [
                        "AP_VOUCHER"
                    ],
                    "title": "An accounts payable voucher or payment that was cut for a vendor to pay our AP balances",
                    "description": "An accounts payable voucher or payment that was cut for a vendor to pay our AP balances"
                },
                {
                    "enum": [
                        "CREDIT_MEMO"
                    ],
                    "title": "A credit to the vendor",
                    "description": "A credit to the vendor"
                }
            ],
            "description": "Enumerates all the references types an AR payment can have."
        },
        "ArPaymentPayer": {
            "type": "object",
            "properties": {
                "id": {
                    "$ref": "#/definitions/Int64"
                },
                "type": {
                    "$ref": "#/definitions/ArPaymentPayerType"
                }
            },
            "description": "Represents an entity that uses Wayfair's services and pays for them"
        },
        "ArPaymentPayerType": {
            "type": "string",
            "anyOf": [
                {
                    "enum": [
                        "SUPPLIER"
                    ],
                    "title": "Supplier as a payer of an AR Payment",
                    "description": "Supplier as a payer of an AR Payment"
                },
                {
                    "enum": [
                        "AP_VOUCHER"
                    ],
                    "title": "AP Voucher as a payer of an AR Payment",
                    "description": "AP Voucher as a payer of an AR Payment"
                },
                {
                    "enum": [
                        "CUSTOMER"
                    ],
                    "title": "Customer as a payer of an AR Payment",
                    "description": "Customer as a payer of an AR Payment"
                },
                {
                    "enum": [
                        "FULFILLMENT_CUSTOMER"
                    ],
                    "title": "Fulfillment customer as a payer of an AR Payment",
                    "description": "Fulfillment customer as a payer of an AR Payment"
                }
            ],
            "description": "Enumerates all types of payers that can make an AR payment."
        },
        "ArInvoiceStatusUpdateLog": {
            "type": "object",
            "properties": {
                "id": {
                    "$ref": "#/definitions/Int64"
                },
                "fromStatus": {
                    "$ref": "#/definitions/ArInvoiceStatus"
                },
                "toStatus": {
                    "$ref": "#/definitions/ArInvoiceStatus"
                },
                "updatedOn": {
                    "$ref": "#/definitions/IsoDateTime"
                },
                "updatedBy": {
                    "$ref": "#/definitions/WayfairEmployee"
                }
            },
            "description": "Log entry for AR invoice status update"
        },
        "WayfairEmployee": {
            "type": "object",
            "properties": {
                "id": {
                    "$ref": "#/definitions/ID"
                },
                "firstName": {
                    "$ref": "#/definitions/String"
                },
                "middleName": {
                    "$ref": "#/definitions/String"
                },
                "lastName": {
                    "$ref": "#/definitions/String"
                },
                "fullName": {
                    "$ref": "#/definitions/String"
                },
                "userName": {
                    "$ref": "#/definitions/String"
                },
                "nickname": {
                    "$ref": "#/definitions/String"
                },
                "displayLastName": {
                    "$ref": "#/definitions/String"
                },
                "email": {
                    "$ref": "#/definitions/String"
                },
                "samAccountName": {
                    "$ref": "#/definitions/String"
                },
                "isActive": {
                    "$ref": "#/definitions/Boolean"
                },
                "birthday": {
                    "$ref": "#/definitions/IsoDateTime"
                },
                "seniorityDate": {
                    "$ref": "#/definitions/IsoDateTime"
                },
                "startDate": {
                    "$ref": "#/definitions/IsoDateTime"
                },
                "forecastEndDate": {
                    "$ref": "#/definitions/IsoDateTime"
                },
                "terminationDate": {
                    "$ref": "#/definitions/IsoDateTime"
                },
                "isUnlimitedContract": {
                    "$ref": "#/definitions/Boolean"
                },
                "isEngineer": {
                    "$ref": "#/definitions/Boolean"
                },
                "worksOnSoftware": {
                    "$ref": "#/definitions/Boolean"
                },
                "title": {
                    "$ref": "#/definitions/WayfairJobTitle"
                },
                "profile": {
                    "$ref": "#/definitions/WayfairEmployeeProfile"
                },
                "type": {
                    "$ref": "#/definitions/WayfairEmployeeCategory"
                },
                "location": {
                    "$ref": "#/definitions/WayfairEmployeeLocation"
                },
                "phoneExtension": {
                    "$ref": "#/definitions/String"
                },
                "manager": {
                    "$ref": "#/definitions/WayfairEmployee"
                },
                "workgroup": {
                    "$ref": "#/definitions/WayfairWorkgroup"
                },
                "processedByEmployee": {
                    "$ref": "#/definitions/WayfairEmployee"
                },
                "directReports": {
                    "type": "array",
                    "items": {
                        "anyOf": [
                            {
                                "$ref": "#/definitions/WayfairEmployee"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    }
                }
            },
            "description": "Fetches data for an employee."
        },
        "WayfairJobTitle": {
            "type": "object",
            "properties": {
                "id": {
                    "$ref": "#/definitions/ID"
                },
                "name": {
                    "$ref": "#/definitions/String"
                },
                "employeeRank": {
                    "$ref": "#/definitions/WayfairEmployeeRank"
                }
            },
            "description": "Wayfair job titles"
        },
        "WayfairEmployeeRank": {
            "type": "object",
            "properties": {
                "id": {
                    "$ref": "#/definitions/ID"
                },
                "name": {
                    "$ref": "#/definitions/String"
                },
                "level": {
                    "$ref": "#/definitions/Int32"
                }
            },
            "description": "Wayfair employee ranks"
        },
        "WayfairEmployeeProfile": {
            "type": "object",
            "properties": {
                "id": {
                    "$ref": "#/definitions/ID"
                },
                "name": {
                    "$ref": "#/definitions/String"
                },
                "isOffshore": {
                    "$ref": "#/definitions/Boolean"
                }
            },
            "description": "Profile information of an employee (ex: Massachusetts Employee, German Employee)"
        },
        "WayfairEmployeeCategory": {
            "type": "object",
            "properties": {
                "id": {
                    "$ref": "#/definitions/ID"
                },
                "name": {
                    "$ref": "#/definitions/String"
                }
            },
            "description": "Wayfair employee categories (ex: intern, contract, full time)"
        },
        "WayfairEmployeeLocation": {
            "type": "object",
            "properties": {
                "id": {
                    "$ref": "#/definitions/ID"
                },
                "name": {
                    "$ref": "#/definitions/String"
                },
                "officeCode": {
                    "$ref": "#/definitions/String"
                }
            },
            "description": "Wayfair employee location (ex Copley Boston)"
        },
        "WayfairWorkgroup": {
            "type": "object",
            "properties": {
                "id": {
                    "$ref": "#/definitions/ID"
                },
                "name": {
                    "$ref": "#/definitions/String"
                },
                "supervisor": {
                    "$ref": "#/definitions/WayfairEmployee"
                },
                "employees": {
                    "type": "array",
                    "items": {
                        "anyOf": [
                            {
                                "$ref": "#/definitions/WayfairEmployee"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    }
                }
            },
            "description": "Wayfair workgroup information"
        },
        "ArInvoiceReference": {
            "type": "object",
            "properties": {
                "id": {
                    "$ref": "#/definitions/Int64"
                }
            },
            "description": "A Reference to External Systems"
        },
        "ArInvoiceDetailInterface": {
            "type": "object",
            "properties": {
                "id": {
                    "$ref": "#/definitions/Int64"
                },
                "quantity": {
                    "$ref": "#/definitions/Float"
                },
                "unitAmount": {
                    "$ref": "#/definitions/Float"
                },
                "itemAmount": {
                    "$ref": "#/definitions/Float"
                },
                "description": {
                    "$ref": "#/definitions/String"
                },
                "taxes": {
                    "type": "array",
                    "items": {
                        "anyOf": [
                            {
                                "$ref": "#/definitions/taxByType"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    }
                }
            },
            "description": "Detail of an AR Invoice - this contains all the common properties an invoice detail/line item should have"
        },
        "taxByType": {
            "type": "object",
            "properties": {
                "type": {
                    "$ref": "#/definitions/TaxTypeEnum"
                },
                "value": {
                    "$ref": "#/definitions/Float"
                }
            },
            "description": "The calculated tax amounts per type"
        },
        "TaxTypeEnum": {
            "type": "string",
            "anyOf": [
                {
                    "enum": [
                        "SalesTax"
                    ],
                    "title": "Sales Tax",
                    "description": "Sales Tax"
                },
                {
                    "enum": [
                        "SellersUseTax"
                    ],
                    "title": "Sellers Use Tax",
                    "description": "Sellers Use Tax"
                },
                {
                    "enum": [
                        "EcoFee"
                    ],
                    "title": "Eco Fee",
                    "description": "Eco Fee"
                },
                {
                    "enum": [
                        "SHP"
                    ],
                    "title": "Shipment Tax",
                    "description": "Shipment Tax"
                },
                {
                    "enum": [
                        "GST"
                    ],
                    "title": "GST Tax",
                    "description": "GST Tax"
                },
                {
                    "enum": [
                        "PST"
                    ],
                    "title": "PST Tax",
                    "description": "PST Tax"
                },
                {
                    "enum": [
                        "QST"
                    ],
                    "title": "QST Tax",
                    "description": "QST Tax"
                },
                {
                    "enum": [
                        "HST"
                    ],
                    "title": "HST Tax",
                    "description": "HST Tax"
                },
                {
                    "enum": [
                        "VAT"
                    ],
                    "title": "VAT Tax",
                    "description": "VAT Tax"
                },
                {
                    "enum": [
                        "NA"
                    ],
                    "title": "Not Available",
                    "description": "Not Available"
                }
            ],
            "description": "An enumeration of Tax Types"
        },
        "Customer": {
            "type": "object",
            "properties": {
                "id": {
                    "$ref": "#/definitions/ID"
                },
                "firstName": {
                    "$ref": "#/definitions/String"
                },
                "lastName": {
                    "$ref": "#/definitions/String"
                },
                "postalCode": {
                    "$ref": "#/definitions/String"
                },
                "email": {
                    "$ref": "#/definitions/String"
                },
                "contactAtPhone": {
                    "$ref": "#/definitions/String"
                }
            },
            "description": "A customer"
        },
        "Customer_Interface": {
            "type": "object",
            "properties": {
                "id": {
                    "$ref": "#/definitions/ID"
                },
                "firstName": {
                    "$ref": "#/definitions/String"
                },
                "lastName": {
                    "$ref": "#/definitions/String"
                },
                "postalCode": {
                    "$ref": "#/definitions/String"
                },
                "email": {
                    "$ref": "#/definitions/String"
                },
                "contactAtPhone": {
                    "$ref": "#/definitions/String"
                }
            },
            "description": "Interface for a customer"
        },
        "Order": {
            "type": "object",
            "properties": {
                "id": {
                    "$ref": "#/definitions/Int64"
                }
            },
            "description": "Order entity, which denotes a customer placed order in one of the Wayfair customer facing sites."
        },
        "OrderPayment": {
            "type": "object",
            "properties": {
                "id": {
                    "$ref": "#/definitions/Int64"
                }
            },
            "description": "Payment related to a customer placed order"
        },
        "B2bArInvoiceDetail": {
            "type": "object",
            "properties": {
                "id": {
                    "$ref": "#/definitions/Int64"
                },
                "quantity": {
                    "$ref": "#/definitions/Float"
                },
                "unitAmount": {
                    "$ref": "#/definitions/Float"
                },
                "itemAmount": {
                    "$ref": "#/definitions/Float"
                },
                "description": {
                    "$ref": "#/definitions/String"
                },
                "orderProduct": {
                    "$ref": "#/definitions/OrderProduct"
                },
                "taxes": {
                    "type": "array",
                    "items": {
                        "anyOf": [
                            {
                                "$ref": "#/definitions/taxByType"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    }
                }
            },
            "description": "Invoice line item detail of B2B AR Invoice type"
        },
        "OrderProduct": {
            "type": "object",
            "properties": {
                "id": {
                    "$ref": "#/definitions/Int64"
                }
            },
            "description": "Product associated with a customer placed order"
        },
        "CastlegateArInvoice": {
            "type": "object",
            "properties": {
                "id": {
                    "$ref": "#/definitions/Int32"
                },
                "description": {
                    "$ref": "#/definitions/String"
                },
                "status": {
                    "$ref": "#/definitions/ArInvoiceStatus"
                },
                "isApproved": {
                    "$ref": "#/definitions/Boolean"
                },
                "approvedOn": {
                    "$ref": "#/definitions/IsoDateTime"
                },
                "revenueSource": {
                    "$ref": "#/definitions/ArRevenueSourceType"
                },
                "dueBy": {
                    "$ref": "#/definitions/IsoDateTime"
                },
                "paidOn": {
                    "$ref": "#/definitions/IsoDateTime"
                },
                "currency": {
                    "$ref": "#/definitions/Currency"
                },
                "invoiceAmount": {
                    "$ref": "#/definitions/Float"
                },
                "taxTotalAmount": {
                    "$ref": "#/definitions/Float"
                },
                "originalInvoiceTotalAmount": {
                    "$ref": "#/definitions/Float"
                },
                "originalTaxTotalAmount": {
                    "$ref": "#/definitions/Float"
                },
                "paidAmount": {
                    "$ref": "#/definitions/Float"
                },
                "dueAmount": {
                    "$ref": "#/definitions/Float"
                },
                "startsOn": {
                    "$ref": "#/definitions/IsoDateTime"
                },
                "endsOn": {
                    "$ref": "#/definitions/IsoDateTime"
                },
                "details": {
                    "type": "array",
                    "items": {
                        "anyOf": [
                            {
                                "$ref": "#/definitions/ArInvoiceDetailInterface"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    }
                },
                "documents": {
                    "type": "array",
                    "items": {
                        "anyOf": [
                            {
                                "$ref": "#/definitions/ArInvoiceDocument"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    }
                },
                "fulfillmentCustomer": {
                    "$ref": "#/definitions/CastlegateFulfillmentCustomer"
                },
                "communications": {
                    "type": "array",
                    "items": {
                        "anyOf": [
                            {
                                "$ref": "#/definitions/ArInvoiceCommunication"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    }
                },
                "creator": {
                    "$ref": "#/definitions/ArInvoiceCreator"
                },
                "createdOn": {
                    "$ref": "#/definitions/IsoDateTime"
                },
                "effectiveOn": {
                    "$ref": "#/definitions/IsoDateTime"
                },
                "isReconciled": {
                    "$ref": "#/definitions/Boolean"
                },
                "reconciledBy": {
                    "$ref": "#/definitions/ArReconciler"
                },
                "nettable": {
                    "$ref": "#/definitions/Boolean"
                },
                "originallyNettable": {
                    "$ref": "#/definitions/Boolean"
                },
                "invoiceReceipientsEmailAddresses": {
                    "$ref": "#/definitions/String"
                },
                "payments": {
                    "type": "array",
                    "items": {
                        "anyOf": [
                            {
                                "$ref": "#/definitions/ArPayment"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    }
                },
                "isCreditMemo": {
                    "$ref": "#/definitions/Boolean"
                },
                "creditMemos": {
                    "type": "array",
                    "items": {
                        "anyOf": [
                            {
                                "$ref": "#/definitions/ArInvoiceInterface"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    }
                },
                "invoiceType": {
                    "$ref": "#/definitions/CastleGateArInvoiceType"
                },
                "statusUpdateLogs": {
                    "type": "array",
                    "items": {
                        "anyOf": [
                            {
                                "$ref": "#/definitions/ArInvoiceStatusUpdateLog"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    }
                },
                "reference": {
                    "$ref": "#/definitions/ArInvoiceReference"
                }
            },
            "description": "Castlegate Type of AR invoice which has all the properties of an AR invoice along with Castlegate specific details"
        },
        "CastlegateFulfillmentCustomer": {
            "type": "object",
            "properties": {
                "id": {
                    "$ref": "#/definitions/ID"
                },
                "supplier": {
                    "$ref": "#/definitions/Supplier"
                },
                "name": {
                    "$ref": "#/definitions/String"
                },
                "service": {
                    "$ref": "#/definitions/CastleGateService"
                },
                "oceanService": {
                    "$ref": "#/definitions/OceanServiceProfile"
                },
                "aggregateHistoricalForecast": {
                    "$ref": "#/definitions/ReplenishmentForecast"
                },
                "aggregateFutureForecast": {
                    "$ref": "#/definitions/ReplenishmentForecast"
                },
                "aggregateHistoricalSales": {
                    "type": "array",
                    "items": {
                        "anyOf": [
                            {
                                "$ref": "#/definitions/TimelineElement"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    }
                },
                "isPartDataEnabled": {
                    "$ref": "#/definitions/Boolean"
                }
            },
            "description": "A Castlegate Fulfillment Customer"
        },
        "CastleGateService": {
            "type": "string",
            "anyOf": [
                {
                    "enum": [
                        "FULFILLMENT"
                    ],
                    "title": "Fulfillment Customer in US",
                    "description": "Fulfillment Customer in US"
                },
                {
                    "enum": [
                        "CANADA_FULFILLMENT"
                    ],
                    "title": "Fulfillment Customer in Canada ",
                    "description": "Fulfillment Customer in Canada "
                },
                {
                    "enum": [
                        "EU_FULFILLMENT"
                    ],
                    "title": "Fulfillment Customer in EU",
                    "description": "Fulfillment Customer in EU"
                },
                {
                    "enum": [
                        "DRAY"
                    ],
                    "title": "Dray Service",
                    "description": "Dray Service"
                },
                {
                    "enum": [
                        "OCEAN"
                    ],
                    "title": "Ocean Service",
                    "description": "Ocean Service"
                },
                {
                    "enum": [
                        "ASIA_CONSOLIDATION"
                    ],
                    "title": "Asia Consolidation Service",
                    "description": "Asia Consolidation Service"
                }
            ],
            "description": "Castlegate Service Type"
        },
        "OceanServiceProfile": {
            "type": "object",
            "properties": {
                "fulfillmentCustomer": {
                    "$ref": "#/definitions/CastlegateFulfillmentCustomer"
                },
                "activationDate": {
                    "$ref": "#/definitions/Date_Time"
                }
            },
            "description": "The ocean service profile of a fulfillment customer"
        },
        "Date_Time": {
            "type": "object",
            "title": "Date_Time",
            "description": "A type for date time values that used Wayfair's WF\\Shared\\Date_Time_Value class"
        },
        "ReplenishmentForecast": {
            "type": "object",
            "properties": {
                "values": {
                    "type": "array",
                    "items": {
                        "anyOf": [
                            {
                                "$ref": "#/definitions/TimelineElement"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    }
                },
                "timeframe": {
                    "$ref": "#/definitions/ForecastTimeFrameType"
                }
            },
            "description": "The future and historical replenishment forecasts for a Castlegate product"
        },
        "TimelineElement": {
            "type": "object",
            "properties": {
                "date": {
                    "$ref": "#/definitions/Date_Time"
                },
                "value": {
                    "$ref": "#/definitions/Float"
                }
            },
            "description": "A quantity corresponding to a specific date. Example: a product forecast for a specific month"
        },
        "ForecastTimeFrameType": {
            "type": "string",
            "anyOf": [
                {
                    "enum": [
                        "HISTORICAL"
                    ],
                    "title": "Historical Time Frame",
                    "description": "Historical Time Frame"
                },
                {
                    "enum": [
                        "FUTURE"
                    ],
                    "title": "Future Time Frame",
                    "description": "Future Time Frame"
                }
            ],
            "description": "The time frame of the forecast"
        },
        "CastleGateArInvoiceType": {
            "type": "string",
            "anyOf": [
                {
                    "enum": [
                        "TRANSPORTATION"
                    ],
                    "title": "Transportation Type",
                    "description": "Transportation Type"
                },
                {
                    "enum": [
                        "FULFILLMENT"
                    ],
                    "title": "Fulfillment Type",
                    "description": "Fulfillment Type"
                }
            ],
            "description": "Types of invoices for Castlegate AR. 'Transportation', 'Fulfillment'."
        },
        "CastlegateArInvoiceDetail": {
            "type": "object",
            "properties": {
                "id": {
                    "$ref": "#/definitions/Int64"
                },
                "quantity": {
                    "$ref": "#/definitions/Float"
                },
                "unitAmount": {
                    "$ref": "#/definitions/Float"
                },
                "itemAmount": {
                    "$ref": "#/definitions/Float"
                },
                "description": {
                    "$ref": "#/definitions/String"
                },
                "charge": {
                    "$ref": "#/definitions/FulfillmentCustomerCharge"
                },
                "taxes": {
                    "type": "array",
                    "items": {
                        "anyOf": [
                            {
                                "$ref": "#/definitions/taxByType"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    }
                }
            },
            "description": "Invoice line item detail of Castlegate AR Invoice type"
        },
        "FulfillmentCustomerCharge": {
            "type": "object",
            "properties": {
                "id": {
                    "$ref": "#/definitions/Int64"
                }
            },
            "description": "Charges we charge to the customers for the fulfillment services"
        },
        "SponsoredProductsArInvoice": {
            "type": "object",
            "properties": {
                "id": {
                    "$ref": "#/definitions/Int32"
                },
                "description": {
                    "$ref": "#/definitions/String"
                },
                "status": {
                    "$ref": "#/definitions/ArInvoiceStatus"
                },
                "revenueSource": {
                    "$ref": "#/definitions/ArRevenueSourceType"
                },
                "dueBy": {
                    "$ref": "#/definitions/IsoDateTime"
                },
                "paidOn": {
                    "$ref": "#/definitions/IsoDateTime"
                },
                "currency": {
                    "$ref": "#/definitions/Currency"
                },
                "invoiceAmount": {
                    "$ref": "#/definitions/Float"
                },
                "taxTotalAmount": {
                    "$ref": "#/definitions/Float"
                },
                "originalInvoiceTotalAmount": {
                    "$ref": "#/definitions/Float"
                },
                "originalTaxTotalAmount": {
                    "$ref": "#/definitions/Float"
                },
                "paidAmount": {
                    "$ref": "#/definitions/Float"
                },
                "dueAmount": {
                    "$ref": "#/definitions/Float"
                },
                "supplier": {
                    "$ref": "#/definitions/Supplier"
                },
                "details": {
                    "type": "array",
                    "items": {
                        "anyOf": [
                            {
                                "$ref": "#/definitions/ArInvoiceDetailInterface"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    }
                },
                "documents": {
                    "type": "array",
                    "items": {
                        "anyOf": [
                            {
                                "$ref": "#/definitions/ArInvoiceDocument"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    }
                },
                "communications": {
                    "type": "array",
                    "items": {
                        "anyOf": [
                            {
                                "$ref": "#/definitions/ArInvoiceCommunication"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    }
                },
                "creator": {
                    "$ref": "#/definitions/ArInvoiceCreator"
                },
                "createdOn": {
                    "$ref": "#/definitions/IsoDateTime"
                },
                "effectiveOn": {
                    "$ref": "#/definitions/IsoDateTime"
                },
                "isReconciled": {
                    "$ref": "#/definitions/Boolean"
                },
                "reconciledBy": {
                    "$ref": "#/definitions/ArReconciler"
                },
                "nettable": {
                    "$ref": "#/definitions/Boolean"
                },
                "originallyNettable": {
                    "$ref": "#/definitions/Boolean"
                },
                "invoiceReceipientsEmailAddresses": {
                    "$ref": "#/definitions/String"
                },
                "payments": {
                    "type": "array",
                    "items": {
                        "anyOf": [
                            {
                                "$ref": "#/definitions/ArPayment"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    }
                },
                "isCreditMemo": {
                    "$ref": "#/definitions/Boolean"
                },
                "creditMemos": {
                    "type": "array",
                    "items": {
                        "anyOf": [
                            {
                                "$ref": "#/definitions/ArInvoiceInterface"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    }
                },
                "statusUpdateLogs": {
                    "type": "array",
                    "items": {
                        "anyOf": [
                            {
                                "$ref": "#/definitions/ArInvoiceStatusUpdateLog"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    }
                },
                "reference": {
                    "$ref": "#/definitions/ArInvoiceReference"
                }
            },
            "description": "SponsoredProducts Type of AR invoice which has all the properties of an AR invoice"
        },
        "SponsoredProductsArInvoiceDetail": {
            "type": "object",
            "properties": {
                "id": {
                    "$ref": "#/definitions/Int64"
                },
                "quantity": {
                    "$ref": "#/definitions/Float"
                },
                "unitAmount": {
                    "$ref": "#/definitions/Float"
                },
                "itemAmount": {
                    "$ref": "#/definitions/Float"
                },
                "description": {
                    "$ref": "#/definitions/String"
                },
                "taxes": {
                    "type": "array",
                    "items": {
                        "anyOf": [
                            {
                                "$ref": "#/definitions/taxByType"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    }
                }
            },
            "description": "Invoice line item detail of Sponsored Products AR Invoice type"
        },
        "MaasArInvoice": {
            "type": "object",
            "properties": {
                "id": {
                    "$ref": "#/definitions/Int32"
                },
                "description": {
                    "$ref": "#/definitions/String"
                },
                "status": {
                    "$ref": "#/definitions/ArInvoiceStatus"
                },
                "revenueSource": {
                    "$ref": "#/definitions/ArRevenueSourceType"
                },
                "dueBy": {
                    "$ref": "#/definitions/IsoDateTime"
                },
                "paidOn": {
                    "$ref": "#/definitions/IsoDateTime"
                },
                "currency": {
                    "$ref": "#/definitions/Currency"
                },
                "invoiceAmount": {
                    "$ref": "#/definitions/Float"
                },
                "taxTotalAmount": {
                    "$ref": "#/definitions/Float"
                },
                "originalInvoiceTotalAmount": {
                    "$ref": "#/definitions/Float"
                },
                "originalTaxTotalAmount": {
                    "$ref": "#/definitions/Float"
                },
                "paidAmount": {
                    "$ref": "#/definitions/Float"
                },
                "dueAmount": {
                    "$ref": "#/definitions/Float"
                },
                "supplier": {
                    "$ref": "#/definitions/Supplier"
                },
                "details": {
                    "type": "array",
                    "items": {
                        "anyOf": [
                            {
                                "$ref": "#/definitions/ArInvoiceDetailInterface"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    }
                },
                "documents": {
                    "type": "array",
                    "items": {
                        "anyOf": [
                            {
                                "$ref": "#/definitions/ArInvoiceDocument"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    }
                },
                "communications": {
                    "type": "array",
                    "items": {
                        "anyOf": [
                            {
                                "$ref": "#/definitions/ArInvoiceCommunication"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    }
                },
                "creator": {
                    "$ref": "#/definitions/ArInvoiceCreator"
                },
                "createdOn": {
                    "$ref": "#/definitions/IsoDateTime"
                },
                "isReconciled": {
                    "$ref": "#/definitions/Boolean"
                },
                "reconciledBy": {
                    "$ref": "#/definitions/ArReconciler"
                },
                "nettable": {
                    "$ref": "#/definitions/Boolean"
                },
                "originallyNettable": {
                    "$ref": "#/definitions/Boolean"
                },
                "netTerms": {
                    "$ref": "#/definitions/ArInvoiceTermsType"
                },
                "effectiveOn": {
                    "$ref": "#/definitions/IsoDateTime"
                },
                "invoiceReceipientsEmailAddresses": {
                    "$ref": "#/definitions/String"
                },
                "additionalInvoiceRecipientEmailAddresses": {
                    "$ref": "#/definitions/String"
                },
                "discounts": {
                    "type": "array",
                    "items": {
                        "anyOf": [
                            {
                                "$ref": "#/definitions/ArInvoiceAdjustment"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    }
                },
                "payments": {
                    "type": "array",
                    "items": {
                        "anyOf": [
                            {
                                "$ref": "#/definitions/ArPayment"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    }
                },
                "isCreditMemo": {
                    "$ref": "#/definitions/Boolean"
                },
                "creditMemos": {
                    "type": "array",
                    "items": {
                        "anyOf": [
                            {
                                "$ref": "#/definitions/ArInvoiceInterface"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    }
                },
                "statusUpdateLogs": {
                    "type": "array",
                    "items": {
                        "anyOf": [
                            {
                                "$ref": "#/definitions/ArInvoiceStatusUpdateLog"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    }
                },
                "reference": {
                    "$ref": "#/definitions/ArInvoiceReference"
                }
            },
            "description": "MaaS Type of AR invoice which has all the properties of an AR invoice"
        },
        "ArInvoiceTermsType": {
            "type": "string",
            "anyOf": [
                {
                    "enum": [
                        "NET_15"
                    ],
                    "title": "15 days term",
                    "description": "15 days term"
                },
                {
                    "enum": [
                        "NET_30"
                    ],
                    "title": "30 days term",
                    "description": "30 days term"
                },
                {
                    "enum": [
                        "NET_45"
                    ],
                    "title": "45 days term",
                    "description": "45 days term"
                },
                {
                    "enum": [
                        "NET_60"
                    ],
                    "title": "60 days term",
                    "description": "60 days term"
                },
                {
                    "enum": [
                        "NET_90"
                    ],
                    "title": "90 days term",
                    "description": "90 days term"
                }
            ],
            "description": "Types of Terms for an AR Invoice"
        },
        "ArInvoiceAdjustment": {
            "type": "object",
            "properties": {
                "id": {
                    "$ref": "#/definitions/Int64"
                },
                "description": {
                    "$ref": "#/definitions/String"
                },
                "quantity": {
                    "$ref": "#/definitions/Int32"
                },
                "unitAmount": {
                    "$ref": "#/definitions/Float"
                },
                "amount": {
                    "$ref": "#/definitions/Float"
                }
            },
            "description": "AR invoice adjustment that can get applied on either an invoice line item or an overall invoice"
        },
        "MaasArInvoiceDetail": {
            "type": "object",
            "properties": {
                "id": {
                    "$ref": "#/definitions/Int64"
                },
                "quantity": {
                    "$ref": "#/definitions/Float"
                },
                "unitAmount": {
                    "$ref": "#/definitions/Float"
                },
                "itemAmount": {
                    "$ref": "#/definitions/Float"
                },
                "description": {
                    "$ref": "#/definitions/String"
                },
                "manufacturerPartsId": {
                    "$ref": "#/definitions/Int32"
                },
                "modelerAssignmentId": {
                    "$ref": "#/definitions/Int32"
                },
                "taxes": {
                    "type": "array",
                    "items": {
                        "anyOf": [
                            {
                                "$ref": "#/definitions/taxByType"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    }
                },
                "discounts": {
                    "type": "array",
                    "items": {
                        "anyOf": [
                            {
                                "$ref": "#/definitions/ArInvoiceAdjustment"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    }
                }
            },
            "description": "Invoice line item detail of MaaS AR Invoice type"
        },
        "BJSShippingLabelInfo": {
            "type": "object",
            "properties": {
                "carrier": {
                    "$ref": "#/definitions/String"
                },
                "carrierCode": {
                    "$ref": "#/definitions/String"
                },
                "trackingNumber": {
                    "$ref": "#/definitions/String"
                },
                "weight": {
                    "$ref": "#/definitions/Weight"
                },
                "barcodeNumber": {
                    "$ref": "#/definitions/String"
                },
                "dimensions": {
                    "$ref": "#/definitions/PackageDimensionType"
                },
                "serviceLevel": {
                    "$ref": "#/definitions/String"
                },
                "depotCode": {
                    "$ref": "#/definitions/String"
                }
            },
            "description": "BJS Shipping Label Information."
        },
        "Weight": {
            "type": "object",
            "properties": {
                "amount": {
                    "$ref": "#/definitions/Float"
                },
                "unit": {
                    "$ref": "#/definitions/WeightUnit"
                }
            },
            "description": "The weight of some object"
        },
        "PackageDimensionType": {
            "type": "object",
            "properties": {
                "length": {
                    "$ref": "#/definitions/Dimension"
                },
                "width": {
                    "$ref": "#/definitions/Dimension"
                },
                "height": {
                    "$ref": "#/definitions/Dimension"
                }
            },
            "description": "Dimensions Type of the package."
        },
        "DPDShippingLabelInfo": {
            "type": "object",
            "properties": {
                "carrier": {
                    "$ref": "#/definitions/String"
                },
                "carrierCode": {
                    "$ref": "#/definitions/String"
                },
                "trackingNumber": {
                    "$ref": "#/definitions/String"
                },
                "weight": {
                    "$ref": "#/definitions/Weight"
                },
                "barcodeText": {
                    "$ref": "#/definitions/String"
                },
                "dimensions": {
                    "$ref": "#/definitions/PackageDimensionType"
                },
                "originSort": {
                    "$ref": "#/definitions/String"
                },
                "destinationSort": {
                    "$ref": "#/definitions/String"
                },
                "destinationDepotCode": {
                    "$ref": "#/definitions/String"
                },
                "serviceCode": {
                    "$ref": "#/definitions/String"
                },
                "originDepotCode": {
                    "$ref": "#/definitions/String"
                },
                "originDepotAddress": {
                    "$ref": "#/definitions/Address"
                }
            },
            "description": "DPD Shipping Label Information"
        },
        "LiquidationArInvoice": {
            "type": "object",
            "properties": {
                "id": {
                    "$ref": "#/definitions/Int32"
                },
                "description": {
                    "$ref": "#/definitions/String"
                },
                "status": {
                    "$ref": "#/definitions/ArInvoiceStatus"
                },
                "revenueSource": {
                    "$ref": "#/definitions/ArRevenueSourceType"
                },
                "dueBy": {
                    "$ref": "#/definitions/IsoDateTime"
                },
                "paidOn": {
                    "$ref": "#/definitions/IsoDateTime"
                },
                "currency": {
                    "$ref": "#/definitions/Currency"
                },
                "originalInvoiceTotalAmount": {
                    "$ref": "#/definitions/Float"
                },
                "originalTaxTotalAmount": {
                    "$ref": "#/definitions/Float"
                },
                "paidAmount": {
                    "$ref": "#/definitions/Float"
                },
                "dueAmount": {
                    "$ref": "#/definitions/Float"
                },
                "details": {
                    "type": "array",
                    "items": {
                        "anyOf": [
                            {
                                "$ref": "#/definitions/ArInvoiceDetailInterface"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    }
                },
                "documents": {
                    "type": "array",
                    "items": {
                        "anyOf": [
                            {
                                "$ref": "#/definitions/ArInvoiceDocument"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    }
                },
                "liquidator": {
                    "$ref": "#/definitions/Customer"
                },
                "order": {
                    "$ref": "#/definitions/Order"
                },
                "communications": {
                    "type": "array",
                    "items": {
                        "anyOf": [
                            {
                                "$ref": "#/definitions/ArInvoiceCommunication"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    }
                },
                "creator": {
                    "$ref": "#/definitions/ArInvoiceCreator"
                },
                "createdOn": {
                    "$ref": "#/definitions/IsoDateTime"
                },
                "effectiveOn": {
                    "$ref": "#/definitions/IsoDateTime"
                },
                "isReconciled": {
                    "$ref": "#/definitions/Boolean"
                },
                "reconciledBy": {
                    "$ref": "#/definitions/ArReconciler"
                },
                "nettable": {
                    "$ref": "#/definitions/Boolean"
                },
                "originallyNettable": {
                    "$ref": "#/definitions/Boolean"
                },
                "invoiceAmount": {
                    "$ref": "#/definitions/Float"
                },
                "taxTotalAmount": {
                    "$ref": "#/definitions/Float"
                },
                "invoiceReceipientsEmailAddresses": {
                    "$ref": "#/definitions/String"
                },
                "payments": {
                    "type": "array",
                    "items": {
                        "anyOf": [
                            {
                                "$ref": "#/definitions/ArPayment"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    }
                },
                "isCreditMemo": {
                    "$ref": "#/definitions/Boolean"
                },
                "creditMemos": {
                    "type": "array",
                    "items": {
                        "anyOf": [
                            {
                                "$ref": "#/definitions/ArInvoiceInterface"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    }
                },
                "statusUpdateLogs": {
                    "type": "array",
                    "items": {
                        "anyOf": [
                            {
                                "$ref": "#/definitions/ArInvoiceStatusUpdateLog"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    }
                },
                "reference": {
                    "$ref": "#/definitions/ArInvoiceReference"
                }
            },
            "description": "Liquidation Type of AR invoice which has all the properties of an AR invoice along with Liquidation specific details"
        },
        "LiquidationArInvoiceDetail": {
            "type": "object",
            "properties": {
                "id": {
                    "$ref": "#/definitions/Int64"
                },
                "quantity": {
                    "$ref": "#/definitions/Float"
                },
                "unitAmount": {
                    "$ref": "#/definitions/Float"
                },
                "itemAmount": {
                    "$ref": "#/definitions/Float"
                },
                "description": {
                    "$ref": "#/definitions/String"
                },
                "taxes": {
                    "type": "array",
                    "items": {
                        "anyOf": [
                            {
                                "$ref": "#/definitions/taxByType"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    }
                }
            },
            "description": "Invoice line item detail of Liquidation AR Invoice type"
        },
        "CachedInternationalStockPurchaseOrder": {
            "type": "object",
            "properties": {
                "id": {
                    "$ref": "#/definitions/ID"
                },
                "serviceLevel": {
                    "$ref": "#/definitions/StockPurchaseOrderServiceLevelType"
                }
            },
            "description": "Cached information related to International Stock Purchase Orders, specifically service levels"
        },
        "InternationalStockPurchaseOrderReturnType": {
            "type": "object",
            "properties": {
                "id": {
                    "$ref": "#/definitions/ID"
                },
                "serviceLevel": {
                    "$ref": "#/definitions/StockPurchaseOrderServiceLevelType"
                }
            },
            "description": "Return type for updating international stock purchase orders"
        },
        "StockPurchaseOrderServiceLevelType": {
            "type": "string",
            "anyOf": [
                {
                    "enum": [
                        "NGS"
                    ],
                    "title": "NGS",
                    "description": "NGS"
                },
                {
                    "enum": [
                        "NVO"
                    ],
                    "title": "NVO",
                    "description": "NVO"
                },
                {
                    "enum": [
                        "DRA"
                    ],
                    "title": "DRA",
                    "description": "DRA"
                },
                {
                    "enum": [
                        "NRV"
                    ],
                    "title": "NRV",
                    "description": "NRV"
                },
                {
                    "enum": [
                        "BCO"
                    ],
                    "title": "BCO",
                    "description": "BCO"
                },
                {
                    "enum": [
                        "ACN"
                    ],
                    "title": "ACN",
                    "description": "ACN"
                },
                {
                    "enum": [
                        "ACI"
                    ],
                    "title": "ACI",
                    "description": "ACI"
                },
                {
                    "enum": [
                        "OND"
                    ],
                    "title": "OND",
                    "description": "OND"
                }
            ],
            "description": "Enumeration of Stock Purchase Order Service Level Types"
        },
        "GiftCardArInvoice": {
            "type": "object",
            "properties": {
                "id": {
                    "$ref": "#/definitions/Int32"
                },
                "description": {
                    "$ref": "#/definitions/String"
                },
                "status": {
                    "$ref": "#/definitions/ArInvoiceStatus"
                },
                "revenueSource": {
                    "$ref": "#/definitions/ArRevenueSourceType"
                },
                "dueBy": {
                    "$ref": "#/definitions/IsoDateTime"
                },
                "paidOn": {
                    "$ref": "#/definitions/IsoDateTime"
                },
                "currency": {
                    "$ref": "#/definitions/Currency"
                },
                "invoiceAmount": {
                    "$ref": "#/definitions/Float"
                },
                "taxTotalAmount": {
                    "$ref": "#/definitions/Float"
                },
                "originalInvoiceTotalAmount": {
                    "$ref": "#/definitions/Float"
                },
                "originalTaxTotalAmount": {
                    "$ref": "#/definitions/Float"
                },
                "paidAmount": {
                    "$ref": "#/definitions/Float"
                },
                "dueAmount": {
                    "$ref": "#/definitions/Float"
                },
                "customer": {
                    "$ref": "#/definitions/Customer"
                },
                "orderCategory": {
                    "$ref": "#/definitions/GiftCardArInvoiceOrderCategory"
                },
                "details": {
                    "type": "array",
                    "items": {
                        "anyOf": [
                            {
                                "$ref": "#/definitions/ArInvoiceDetailInterface"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    }
                },
                "documents": {
                    "type": "array",
                    "items": {
                        "anyOf": [
                            {
                                "$ref": "#/definitions/ArInvoiceDocument"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    }
                },
                "communications": {
                    "type": "array",
                    "items": {
                        "anyOf": [
                            {
                                "$ref": "#/definitions/ArInvoiceCommunication"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    }
                },
                "creator": {
                    "$ref": "#/definitions/ArInvoiceCreator"
                },
                "createdOn": {
                    "$ref": "#/definitions/IsoDateTime"
                },
                "effectiveOn": {
                    "$ref": "#/definitions/IsoDateTime"
                },
                "isReconciled": {
                    "$ref": "#/definitions/Boolean"
                },
                "reconciledBy": {
                    "$ref": "#/definitions/ArReconciler"
                },
                "nettable": {
                    "$ref": "#/definitions/Boolean"
                },
                "originallyNettable": {
                    "$ref": "#/definitions/Boolean"
                },
                "invoiceReceipientsEmailAddresses": {
                    "$ref": "#/definitions/String"
                },
                "payments": {
                    "type": "array",
                    "items": {
                        "anyOf": [
                            {
                                "$ref": "#/definitions/ArPayment"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    }
                },
                "isCreditMemo": {
                    "$ref": "#/definitions/Boolean"
                },
                "creditMemos": {
                    "type": "array",
                    "items": {
                        "anyOf": [
                            {
                                "$ref": "#/definitions/ArInvoiceInterface"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    }
                },
                "statusUpdateLogs": {
                    "type": "array",
                    "items": {
                        "anyOf": [
                            {
                                "$ref": "#/definitions/ArInvoiceStatusUpdateLog"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    }
                },
                "reference": {
                    "$ref": "#/definitions/ArInvoiceReference"
                }
            },
            "description": "Gift Card Type of AR invoice which has all the properties of an AR invoice"
        },
        "GiftCardArInvoiceOrderCategory": {
            "type": "string",
            "anyOf": [
                {
                    "enum": [
                        "BRAND"
                    ],
                    "title": "Brand",
                    "description": "Brand"
                },
                {
                    "enum": [
                        "OFFICE_SUPPLIES"
                    ],
                    "title": "Office Supplies/Equipment",
                    "description": "Office Supplies/Equipment"
                },
                {
                    "enum": [
                        "PHOTO_STUDIO"
                    ],
                    "title": "Photo Studio",
                    "description": "Photo Studio"
                },
                {
                    "enum": [
                        "PUBLIC_RELATIONS"
                    ],
                    "title": "Public Relations",
                    "description": "Public Relations"
                },
                {
                    "enum": [
                        "SAMPLE_COST"
                    ],
                    "title": "Public Relations",
                    "description": "Public Relations"
                },
                {
                    "enum": [
                        "TRIED_AND_TRUE_MARKETING"
                    ],
                    "title": "Tried and True Marketing",
                    "description": "Tried and True Marketing"
                },
                {
                    "enum": [
                        "CONTENT"
                    ],
                    "title": "Content",
                    "description": "Content"
                }
            ],
            "description": "Enumerates all of the order categories for Gift Card Ar Invoices"
        },
        "GiftCardArInvoiceDetail": {
            "type": "object",
            "properties": {
                "id": {
                    "$ref": "#/definitions/Int64"
                },
                "quantity": {
                    "$ref": "#/definitions/Float"
                },
                "unitAmount": {
                    "$ref": "#/definitions/Float"
                },
                "itemAmount": {
                    "$ref": "#/definitions/Float"
                },
                "description": {
                    "$ref": "#/definitions/String"
                },
                "pan": {
                    "$ref": "#/definitions/String"
                },
                "transactionId": {
                    "$ref": "#/definitions/String"
                },
                "externalReference": {
                    "$ref": "#/definitions/String"
                },
                "taxes": {
                    "type": "array",
                    "items": {
                        "anyOf": [
                            {
                                "$ref": "#/definitions/taxByType"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    }
                },
                "discounts": {
                    "type": "array",
                    "items": {
                        "anyOf": [
                            {
                                "$ref": "#/definitions/ArInvoiceAdjustment"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    }
                }
            },
            "description": "Invoice line item detail of Gift Card AR Invoice type"
        },
        "BrandImage": {
            "type": "object",
            "properties": {
                "componentMetaData": {
                    "$ref": "#/definitions/BrandComponentMetadataType"
                },
                "ireid": {
                    "$ref": "#/definitions/PositiveInt"
                },
                "mobileIreid": {
                    "$ref": "#/definitions/PositiveInt"
                },
                "altText": {
                    "$ref": "#/definitions/String"
                },
                "ctaLink": {
                    "$ref": "#/definitions/String"
                },
                "isPageTitle": {
                    "$ref": "#/definitions/Boolean"
                }
            },
            "description": "The image resource id of an image component on a brand page"
        },
        "BrandComponentInterface": {
            "type": "object",
            "properties": {
                "componentMetaData": {
                    "$ref": "#/definitions/BrandComponentMetadataType"
                }
            },
            "description": "The interface type for a brand page component"
        },
        "BrandComponentMetadataType": {
            "type": "object",
            "properties": {
                "componentId": {
                    "$ref": "#/definitions/PositiveInt"
                },
                "componentType": {
                    "$ref": "#/definitions/PositiveInt"
                },
                "versionId": {
                    "$ref": "#/definitions/PositiveInt"
                },
                "isEnabled": {
                    "$ref": "#/definitions/Boolean"
                },
                "rank": {
                    "$ref": "#/definitions/Int32"
                },
                "qaStatus": {
                    "$ref": "#/definitions/PositiveInt"
                },
                "rejectionReasons": {
                    "type": "array",
                    "items": {
                        "anyOf": [
                            {
                                "$ref": "#/definitions/PositiveInt"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    }
                },
                "rejectionNote": {
                    "$ref": "#/definitions/String"
                },
                "isValidForDisplay": {
                    "$ref": "#/definitions/Boolean"
                }
            },
            "description": "A type for fields common to all brand page components"
        },
        "BrandDescription": {
            "type": "object",
            "properties": {
                "componentMetaData": {
                    "$ref": "#/definitions/BrandComponentMetadataType"
                },
                "text": {
                    "$ref": "#/definitions/String"
                }
            },
            "description": "An element with a single description field on a brand page"
        },
        "BrandImageCta": {
            "type": "object",
            "properties": {
                "componentMetaData": {
                    "$ref": "#/definitions/BrandComponentMetadataType"
                },
                "headerText": {
                    "$ref": "#/definitions/String"
                },
                "description": {
                    "$ref": "#/definitions/String"
                },
                "ctaLink": {
                    "$ref": "#/definitions/String"
                },
                "ctaText": {
                    "$ref": "#/definitions/String"
                },
                "ireid": {
                    "$ref": "#/definitions/PositiveInt"
                },
                "textLocation": {
                    "$ref": "#/definitions/BRAND_TEXT_LOCATION"
                },
                "altText": {
                    "$ref": "#/definitions/String"
                }
            },
            "description": "An image with a call to action"
        },
        "BrandCtaInterface": {
            "type": "object",
            "properties": {
                "headerText": {
                    "$ref": "#/definitions/String"
                },
                "description": {
                    "$ref": "#/definitions/String"
                },
                "ctaLink": {
                    "$ref": "#/definitions/String"
                },
                "ctaText": {
                    "$ref": "#/definitions/String"
                }
            },
            "description": "The interface type for a brand component with a call to action (cta)"
        },
        "BRAND_TEXT_LOCATION": {
            "type": "string",
            "anyOf": [
                {
                    "enum": [
                        "TEXT_LOCATION_RIGHT"
                    ],
                    "title": "Denotes that the text should be to the right of the image/video",
                    "description": "Denotes that the text should be to the right of the image/video"
                },
                {
                    "enum": [
                        "TEXT_LOCATION_LEFT"
                    ],
                    "title": "Denotes that the text should be to the left of the image/video",
                    "description": "Denotes that the text should be to the left of the image/video"
                }
            ],
            "description": "Enum for brand text location information. Denotes where the text appears in relation to the image/video for brand components"
        },
        "BrandImageCtaCollection": {
            "type": "object",
            "properties": {
                "componentMetaData": {
                    "$ref": "#/definitions/BrandComponentMetadataType"
                },
                "collection": {
                    "type": "array",
                    "items": {
                        "anyOf": [
                            {
                                "$ref": "#/definitions/BrandImageCta"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    }
                },
                "headline": {
                    "$ref": "#/definitions/String"
                },
                "isSquare": {
                    "$ref": "#/definitions/Boolean"
                },
                "subheaderText": {
                    "$ref": "#/definitions/String"
                },
                "mobileLayout": {
                    "$ref": "#/definitions/BRAND_MOBILE_LAYOUT"
                }
            },
            "description": "A collection of images that each have a call to action"
        },
        "BRAND_MOBILE_LAYOUT": {
            "type": "string",
            "anyOf": [
                {
                    "enum": [
                        "MOBILE_LAYOUT_CAROUSEL"
                    ],
                    "title": "Denotes that the mobile layout should use a carousel to display the component",
                    "description": "Denotes that the mobile layout should use a carousel to display the component"
                },
                {
                    "enum": [
                        "MOBILE_LAYOUT_SINGLE_COLUMN"
                    ],
                    "title": "Denotes that the mobile layout should use a single, full-width column to display the component",
                    "description": "Denotes that the mobile layout should use a single, full-width column to display the component"
                }
            ],
            "description": "Enum for brand mobile layout information. Denotes what layout the component uses on mobile"
        },
        "BrandValuePropImageCollection": {
            "type": "object",
            "properties": {
                "componentMetaData": {
                    "$ref": "#/definitions/BrandComponentMetadataType"
                },
                "collection": {
                    "type": "array",
                    "items": {
                        "anyOf": [
                            {
                                "$ref": "#/definitions/BrandValuePropImage"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    }
                },
                "headline": {
                    "$ref": "#/definitions/String"
                }
            },
            "description": "A collection of value prop image that has click to action, and informational bullet texts"
        },
        "BrandValuePropImage": {
            "type": "object",
            "properties": {
                "componentMetaData": {
                    "$ref": "#/definitions/BrandComponentMetadataType"
                },
                "headerText": {
                    "$ref": "#/definitions/String"
                },
                "description": {
                    "$ref": "#/definitions/String"
                },
                "ctaLink": {
                    "$ref": "#/definitions/String"
                },
                "ctaText": {
                    "$ref": "#/definitions/String"
                },
                "ireid": {
                    "$ref": "#/definitions/PositiveInt"
                },
                "textLocation": {
                    "$ref": "#/definitions/BRAND_TEXT_LOCATION"
                },
                "altText": {
                    "$ref": "#/definitions/String"
                },
                "textBullets": {
                    "type": "array",
                    "items": {
                        "anyOf": [
                            {
                                "$ref": "#/definitions/String"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    }
                }
            },
            "description": "An image with call to action, and informational bullet text"
        },
        "BrandVideoCta": {
            "type": "object",
            "properties": {
                "componentMetaData": {
                    "$ref": "#/definitions/BrandComponentMetadataType"
                },
                "headerText": {
                    "$ref": "#/definitions/String"
                },
                "description": {
                    "$ref": "#/definitions/String"
                },
                "ctaLink": {
                    "$ref": "#/definitions/String"
                },
                "ctaText": {
                    "$ref": "#/definitions/String"
                },
                "vreid": {
                    "$ref": "#/definitions/PositiveInt"
                },
                "previewImageId": {
                    "$ref": "#/definitions/PositiveInt"
                },
                "sources": {
                    "type": "array",
                    "items": {
                        "anyOf": [
                            {
                                "$ref": "#/definitions/String"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    }
                },
                "textLocation": {
                    "$ref": "#/definitions/BRAND_TEXT_LOCATION"
                }
            },
            "description": "A video with a call to action"
        },
        "BrandProductsCta": {
            "type": "object",
            "properties": {
                "componentMetaData": {
                    "$ref": "#/definitions/BrandComponentMetadataType"
                },
                "headerText": {
                    "$ref": "#/definitions/String"
                },
                "description": {
                    "$ref": "#/definitions/String"
                },
                "ctaLink": {
                    "$ref": "#/definitions/String"
                },
                "ctaText": {
                    "$ref": "#/definitions/String"
                },
                "eventId": {
                    "$ref": "#/definitions/PositiveInt"
                },
                "ireid": {
                    "$ref": "#/definitions/PositiveInt"
                },
                "headline": {
                    "$ref": "#/definitions/String"
                },
                "isCriteriaEvent": {
                    "$ref": "#/definitions/Boolean"
                },
                "altText": {
                    "$ref": "#/definitions/String"
                }
            },
            "description": "The fields for products with cta component type"
        },
        "BrandProductCarousel": {
            "type": "object",
            "properties": {
                "componentMetaData": {
                    "$ref": "#/definitions/BrandComponentMetadataType"
                },
                "headerText": {
                    "$ref": "#/definitions/String"
                },
                "description": {
                    "$ref": "#/definitions/String"
                },
                "ctaLink": {
                    "$ref": "#/definitions/String"
                },
                "ctaText": {
                    "$ref": "#/definitions/String"
                },
                "eventId": {
                    "$ref": "#/definitions/PositiveInt"
                },
                "headline": {
                    "$ref": "#/definitions/String"
                },
                "isCriteriaEvent": {
                    "$ref": "#/definitions/Boolean"
                }
            },
            "description": "The fields for product carousel component type"
        },
        "BrandShopByAttribute": {
            "type": "object",
            "properties": {
                "componentMetaData": {
                    "$ref": "#/definitions/BrandComponentMetadataType"
                },
                "attributeName": {
                    "$ref": "#/definitions/String"
                },
                "description": {
                    "$ref": "#/definitions/String"
                },
                "eventId": {
                    "$ref": "#/definitions/PositiveInt"
                },
                "filterOptions": {
                    "type": "array",
                    "items": {
                        "anyOf": [
                            {
                                "$ref": "#/definitions/BrandShopByAttributeFilterOptionType"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    }
                }
            },
            "description": "The fields for the shop by attribute brand content component type"
        },
        "BrandShopByAttributeFilterOptionType": {
            "type": "object",
            "properties": {
                "id": {
                    "$ref": "#/definitions/String"
                },
                "url": {
                    "$ref": "#/definitions/String"
                }
            },
            "description": "The fields for the shop by attribute brand content component type"
        },
        "BrandTextBlock": {
            "type": "object",
            "properties": {
                "componentMetaData": {
                    "$ref": "#/definitions/BrandComponentMetadataType"
                },
                "text": {
                    "$ref": "#/definitions/String"
                },
                "headline": {
                    "$ref": "#/definitions/String"
                }
            },
            "description": "A text block with a headline and paragraph"
        },
        "BrandVideoHero": {
            "type": "object",
            "properties": {
                "componentMetaData": {
                    "$ref": "#/definitions/BrandComponentMetadataType"
                },
                "vreid": {
                    "$ref": "#/definitions/PositiveInt"
                },
                "previewImageId": {
                    "$ref": "#/definitions/PositiveInt"
                }
            },
            "description": "A hero sized video"
        },
        "BrandBannerCta": {
            "type": "object",
            "properties": {
                "componentMetaData": {
                    "$ref": "#/definitions/BrandComponentMetadataType"
                },
                "headerText": {
                    "$ref": "#/definitions/String"
                },
                "description": {
                    "$ref": "#/definitions/String"
                },
                "ctaLink": {
                    "$ref": "#/definitions/String"
                },
                "ctaText": {
                    "$ref": "#/definitions/String"
                },
                "subheaderText": {
                    "$ref": "#/definitions/String"
                },
                "ireid": {
                    "$ref": "#/definitions/PositiveInt"
                },
                "ctaOrientation": {
                    "$ref": "#/definitions/BRAND_BANNER_CTA_ORIENTATION"
                }
            },
            "description": "A banner image with a call to action"
        },
        "BRAND_BANNER_CTA_ORIENTATION": {
            "type": "string",
            "anyOf": [
                {
                    "enum": [
                        "LEFT"
                    ],
                    "title": "The left orientation for the banner's cta location. If designated, the CTA portion of the BrandBannerCta will appear on the left",
                    "description": "The left orientation for the banner's cta location. If designated, the CTA portion of the BrandBannerCta will appear on the left"
                },
                {
                    "enum": [
                        "RIGHT"
                    ],
                    "title": "The right orientation for the banner's cta location. If designated, the CTA portion of the BrandBannerCta will appear on the right",
                    "description": "The right orientation for the banner's cta location. If designated, the CTA portion of the BrandBannerCta will appear on the right"
                },
                {
                    "enum": [
                        "CENTER"
                    ],
                    "title": "The center orientation for the banner's cta location. If designated, the CTA portion of the BrandBannerCta will appear in the center",
                    "description": "The center orientation for the banner's cta location. If designated, the CTA portion of the BrandBannerCta will appear in the center"
                }
            ],
            "description": "Enum for banner with cta orientation. Determines how the CTA portion, in BrandBannerCta, is oriented"
        },
        "BrandDefaultComponent": {
            "type": "object",
            "properties": {
                "componentMetaData": {
                    "$ref": "#/definitions/BrandComponentMetadataType"
                }
            },
            "description": "The default type for brand components that have not been implemented on the config tool (e.g. product tabs)"
        },
        "BrandSTLRoomExplorer": {
            "type": "object",
            "properties": {
                "componentMetaData": {
                    "$ref": "#/definitions/BrandComponentMetadataType"
                },
                "tabs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/BrandSTLRoomExplorerTab"
                    }
                }
            },
            "description": "A type for fields common to all stl room explorer components"
        },
        "BrandSTLRoomExplorerTab": {
            "type": "object",
            "properties": {
                "headerText": {
                    "$ref": "#/definitions/String"
                },
                "description": {
                    "$ref": "#/definitions/String"
                },
                "ctaLink": {
                    "$ref": "#/definitions/String"
                },
                "ctaText": {
                    "$ref": "#/definitions/String"
                },
                "ireid": {
                    "$ref": "#/definitions/PositiveInt"
                },
                "tabName": {
                    "$ref": "#/definitions/String"
                },
                "tabRank": {
                    "$ref": "#/definitions/PositiveInt"
                },
                "altText": {
                    "$ref": "#/definitions/String"
                }
            },
            "description": "A type for fields common to all stl room explorer tab components"
        },
        "BrandImageLiveText": {
            "type": "object",
            "properties": {
                "componentMetaData": {
                    "$ref": "#/definitions/BrandComponentMetadataType"
                },
                "headerText": {
                    "$ref": "#/definitions/String"
                },
                "description": {
                    "$ref": "#/definitions/String"
                },
                "ctaLink": {
                    "$ref": "#/definitions/String"
                },
                "ctaText": {
                    "$ref": "#/definitions/String"
                },
                "ireid": {
                    "$ref": "#/definitions/PositiveInt"
                },
                "isDarkText": {
                    "$ref": "#/definitions/Boolean"
                },
                "hasOverlay": {
                    "$ref": "#/definitions/Boolean"
                },
                "alignment": {
                    "$ref": "#/definitions/BRAND_BANNER_CTA_ORIENTATION"
                }
            },
            "description": "Brand Image Live Text type"
        },
        "BrandCelebrityFooter": {
            "type": "object",
            "properties": {
                "componentMetaData": {
                    "$ref": "#/definitions/BrandComponentMetadataType"
                },
                "text": {
                    "$ref": "#/definitions/String"
                },
                "ireid": {
                    "$ref": "#/definitions/PositiveInt"
                },
                "logoIreid": {
                    "$ref": "#/definitions/PositiveInt"
                }
            },
            "description": "Brand celebrity footer type"
        },
        "BrandShopCardCarousel": {
            "type": "object",
            "properties": {
                "componentMetaData": {
                    "$ref": "#/definitions/BrandComponentMetadataType"
                },
                "headerText": {
                    "$ref": "#/definitions/String"
                },
                "description": {
                    "$ref": "#/definitions/String"
                },
                "manufacturerIds": {
                    "type": "array",
                    "items": {
                        "anyOf": [
                            {
                                "$ref": "#/definitions/Int64"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    }
                }
            },
            "description": "Brand shop card carousel type"
        },
        "BrandCustomizedNavigation": {
            "type": "object",
            "properties": {
                "componentMetaData": {
                    "$ref": "#/definitions/BrandComponentMetadataType"
                },
                "headerText": {
                    "$ref": "#/definitions/String"
                },
                "description": {
                    "$ref": "#/definitions/String"
                },
                "links": {
                    "type": "array",
                    "items": {
                        "anyOf": [
                            {
                                "$ref": "#/definitions/BrandCustomizedNavigationLinkType"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    }
                }
            },
            "description": "The brand component for customized navigation powered by links"
        },
        "BrandCustomizedNavigationLinkType": {
            "type": "object",
            "properties": {
                "name": {
                    "$ref": "#/definitions/String"
                },
                "url": {
                    "$ref": "#/definitions/String"
                },
                "ireid": {
                    "$ref": "#/definitions/PositiveInt"
                }
            },
            "description": "The fields for the customized navigation component type link"
        },
        "BrandB2BDynamicBAMCard": {
            "type": "object",
            "properties": {
                "componentMetaData": {
                    "$ref": "#/definitions/BrandComponentMetadataType"
                },
                "managedAccountHeaderText": {
                    "$ref": "#/definitions/String"
                },
                "unmanagedAccountHeaderText": {
                    "$ref": "#/definitions/String"
                }
            },
            "description": "B2B dynamic bam card type"
        },
        "BrandSubcategoryNavigation": {
            "type": "object",
            "properties": {
                "componentMetaData": {
                    "$ref": "#/definitions/BrandComponentMetadataType"
                },
                "headerText": {
                    "$ref": "#/definitions/String"
                },
                "subheaderText": {
                    "$ref": "#/definitions/String"
                },
                "useLargeImagery": {
                    "$ref": "#/definitions/Boolean"
                }
            },
            "description": "The brand component for subcategory navigation"
        },
        "BrandMap": {
            "type": "object",
            "properties": {
                "componentMetaData": {
                    "$ref": "#/definitions/BrandComponentMetadataType"
                },
                "mapImageUrl": {
                    "$ref": "#/definitions/String"
                },
                "altText": {
                    "$ref": "#/definitions/String"
                },
                "ctaLink": {
                    "$ref": "#/definitions/String"
                },
                "isPageTitle": {
                    "$ref": "#/definitions/Boolean"
                }
            },
            "description": "The image resource id of an image component on a brand page"
        },
        "BrandMapCta": {
            "type": "object",
            "properties": {
                "componentMetaData": {
                    "$ref": "#/definitions/BrandComponentMetadataType"
                },
                "headerText": {
                    "$ref": "#/definitions/String"
                },
                "description": {
                    "$ref": "#/definitions/String"
                },
                "ctaLink": {
                    "$ref": "#/definitions/String"
                },
                "ctaText": {
                    "$ref": "#/definitions/String"
                },
                "textLocation": {
                    "$ref": "#/definitions/BRAND_TEXT_LOCATION"
                },
                "mapImageUrl": {
                    "$ref": "#/definitions/String"
                },
                "altText": {
                    "$ref": "#/definitions/String"
                }
            },
            "description": "An image with a call to action"
        }
    }
}